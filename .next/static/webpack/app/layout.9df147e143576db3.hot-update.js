"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/config/whitelist.ts":
/*!*********************************!*\
  !*** ./src/config/whitelist.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ALLOWED_ADDRESSES: function() { return /* binding */ ALLOWED_ADDRESSES; },\n/* harmony export */   hasWhitelistedAddresses: function() { return /* binding */ hasWhitelistedAddresses; },\n/* harmony export */   isAddressAllowed: function() { return /* binding */ isAddressAllowed; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n/**\n * Parse comma-separated wallet addresses from environment variable\n * This allows configuring allowed wallets without code changes\n */ function parseAllowedAddresses() {\n    // Get comma-separated addresses from environment variable\n    const addressesEnv =  false || \"\";\n    // If empty, check for a development fallback address\n    if (!addressesEnv && \"development\" === \"development\") {\n        // Default dev wallet for testing - DO NOT use in production\n        const devFallback = process.env.NEXT_PUBLIC_DEV_TEST_WALLET || \"\";\n        return devFallback ? [\n            devFallback\n        ] : [];\n    }\n    if (!addressesEnv) {\n        return [];\n    }\n    // Parse the addresses and filter out empty strings\n    return addressesEnv.split(\",\").map((addr)=>addr.trim()).filter(Boolean);\n}\n/**\n * Wallet addresses that are allowed to access the application\n * This is a secure way to restrict access to specific users\n */ const ALLOWED_ADDRESSES = parseAllowedAddresses();\n/**\n * Check if any addresses are configured in the whitelist\n * Useful for showing warnings when no addresses are configured\n */ function hasWhitelistedAddresses() {\n    return ALLOWED_ADDRESSES.length > 0;\n}\n/**\n * Check if a wallet address is allowed to access the application\n * @param address Wallet address to check\n * @returns boolean indicating if the address is allowed\n */ function isAddressAllowed(address) {\n    if (!address) return false;\n    // Convert to string and trim whitespace\n    const normalizedAddress = address.toString().trim();\n    // Direct comparison - Polkadot addresses are case-sensitive\n    return ALLOWED_ADDRESSES.includes(normalizedAddress);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb25maWcvd2hpdGVsaXN0LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7O0NBR0MsR0FDRCxTQUFTQTtJQUNQLDBEQUEwRDtJQUMxRCxNQUFNQyxlQUFlQyxNQUF1QyxJQUFJO0lBRWhFLHFEQUFxRDtJQUNyRCxJQUFJLENBQUNELGdCQUFnQkMsa0JBQXlCLGVBQWU7UUFDM0QsNERBQTREO1FBQzVELE1BQU1HLGNBQWNILE9BQU9BLENBQUNDLEdBQUcsQ0FBQ0csMkJBQTJCLElBQUk7UUFDL0QsT0FBT0QsY0FBYztZQUFDQTtTQUFZLEdBQUcsRUFBRTtJQUN6QztJQUVBLElBQUksQ0FBQ0osY0FBYztRQUNqQixPQUFPLEVBQUU7SUFDWDtJQUVBLG1EQUFtRDtJQUNuRCxPQUFPQSxhQUNKTSxLQUFLLENBQUMsS0FDTkMsR0FBRyxDQUFDQyxDQUFBQSxPQUFRQSxLQUFLQyxJQUFJLElBQ3JCQyxNQUFNLENBQUNDO0FBQ1o7QUFFQTs7O0NBR0MsR0FDTSxNQUFNQyxvQkFBdUNiLHdCQUF3QjtBQUU1RTs7O0NBR0MsR0FDTSxTQUFTYztJQUNkLE9BQU9ELGtCQUFrQkUsTUFBTSxHQUFHO0FBQ3BDO0FBRUE7Ozs7Q0FJQyxHQUNNLFNBQVNDLGlCQUFpQkMsT0FBa0M7SUFDakUsSUFBSSxDQUFDQSxTQUFTLE9BQU87SUFFckIsd0NBQXdDO0lBQ3hDLE1BQU1DLG9CQUFvQkQsUUFBUUUsUUFBUSxHQUFHVCxJQUFJO0lBRWpELDREQUE0RDtJQUM1RCxPQUFPRyxrQkFBa0JPLFFBQVEsQ0FBQ0Y7QUFDcEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbmZpZy93aGl0ZWxpc3QudHM/YjRjMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFBhcnNlIGNvbW1hLXNlcGFyYXRlZCB3YWxsZXQgYWRkcmVzc2VzIGZyb20gZW52aXJvbm1lbnQgdmFyaWFibGVcbiAqIFRoaXMgYWxsb3dzIGNvbmZpZ3VyaW5nIGFsbG93ZWQgd2FsbGV0cyB3aXRob3V0IGNvZGUgY2hhbmdlc1xuICovXG5mdW5jdGlvbiBwYXJzZUFsbG93ZWRBZGRyZXNzZXMoKTogc3RyaW5nW10ge1xuICAvLyBHZXQgY29tbWEtc2VwYXJhdGVkIGFkZHJlc3NlcyBmcm9tIGVudmlyb25tZW50IHZhcmlhYmxlXG4gIGNvbnN0IGFkZHJlc3Nlc0VudiA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FMTE9XRURfV0FMTEVUUyB8fCAnJztcblxuICAvLyBJZiBlbXB0eSwgY2hlY2sgZm9yIGEgZGV2ZWxvcG1lbnQgZmFsbGJhY2sgYWRkcmVzc1xuICBpZiAoIWFkZHJlc3Nlc0VudiAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jykge1xuICAgIC8vIERlZmF1bHQgZGV2IHdhbGxldCBmb3IgdGVzdGluZyAtIERPIE5PVCB1c2UgaW4gcHJvZHVjdGlvblxuICAgIGNvbnN0IGRldkZhbGxiYWNrID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfREVWX1RFU1RfV0FMTEVUIHx8ICcnO1xuICAgIHJldHVybiBkZXZGYWxsYmFjayA/IFtkZXZGYWxsYmFja10gOiBbXTtcbiAgfVxuXG4gIGlmICghYWRkcmVzc2VzRW52KSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG5cbiAgLy8gUGFyc2UgdGhlIGFkZHJlc3NlcyBhbmQgZmlsdGVyIG91dCBlbXB0eSBzdHJpbmdzXG4gIHJldHVybiBhZGRyZXNzZXNFbnZcbiAgICAuc3BsaXQoJywnKVxuICAgIC5tYXAoYWRkciA9PiBhZGRyLnRyaW0oKSlcbiAgICAuZmlsdGVyKEJvb2xlYW4pO1xufVxuXG4vKipcbiAqIFdhbGxldCBhZGRyZXNzZXMgdGhhdCBhcmUgYWxsb3dlZCB0byBhY2Nlc3MgdGhlIGFwcGxpY2F0aW9uXG4gKiBUaGlzIGlzIGEgc2VjdXJlIHdheSB0byByZXN0cmljdCBhY2Nlc3MgdG8gc3BlY2lmaWMgdXNlcnNcbiAqL1xuZXhwb3J0IGNvbnN0IEFMTE9XRURfQUREUkVTU0VTOiByZWFkb25seSBzdHJpbmdbXSA9IHBhcnNlQWxsb3dlZEFkZHJlc3NlcygpO1xuXG4vKipcbiAqIENoZWNrIGlmIGFueSBhZGRyZXNzZXMgYXJlIGNvbmZpZ3VyZWQgaW4gdGhlIHdoaXRlbGlzdFxuICogVXNlZnVsIGZvciBzaG93aW5nIHdhcm5pbmdzIHdoZW4gbm8gYWRkcmVzc2VzIGFyZSBjb25maWd1cmVkXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBoYXNXaGl0ZWxpc3RlZEFkZHJlc3NlcygpOiBib29sZWFuIHtcbiAgcmV0dXJuIEFMTE9XRURfQUREUkVTU0VTLmxlbmd0aCA+IDA7XG59XG5cbi8qKlxuICogQ2hlY2sgaWYgYSB3YWxsZXQgYWRkcmVzcyBpcyBhbGxvd2VkIHRvIGFjY2VzcyB0aGUgYXBwbGljYXRpb25cbiAqIEBwYXJhbSBhZGRyZXNzIFdhbGxldCBhZGRyZXNzIHRvIGNoZWNrXG4gKiBAcmV0dXJucyBib29sZWFuIGluZGljYXRpbmcgaWYgdGhlIGFkZHJlc3MgaXMgYWxsb3dlZFxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNBZGRyZXNzQWxsb3dlZChhZGRyZXNzOiBzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkKTogYm9vbGVhbiB7XG4gIGlmICghYWRkcmVzcykgcmV0dXJuIGZhbHNlO1xuXG4gIC8vIENvbnZlcnQgdG8gc3RyaW5nIGFuZCB0cmltIHdoaXRlc3BhY2VcbiAgY29uc3Qgbm9ybWFsaXplZEFkZHJlc3MgPSBhZGRyZXNzLnRvU3RyaW5nKCkudHJpbSgpO1xuXG4gIC8vIERpcmVjdCBjb21wYXJpc29uIC0gUG9sa2Fkb3QgYWRkcmVzc2VzIGFyZSBjYXNlLXNlbnNpdGl2ZVxuICByZXR1cm4gQUxMT1dFRF9BRERSRVNTRVMuaW5jbHVkZXMobm9ybWFsaXplZEFkZHJlc3MpO1xufVxuIl0sIm5hbWVzIjpbInBhcnNlQWxsb3dlZEFkZHJlc3NlcyIsImFkZHJlc3Nlc0VudiIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19BTExPV0VEX1dBTExFVFMiLCJkZXZGYWxsYmFjayIsIk5FWFRfUFVCTElDX0RFVl9URVNUX1dBTExFVCIsInNwbGl0IiwibWFwIiwiYWRkciIsInRyaW0iLCJmaWx0ZXIiLCJCb29sZWFuIiwiQUxMT1dFRF9BRERSRVNTRVMiLCJoYXNXaGl0ZWxpc3RlZEFkZHJlc3NlcyIsImxlbmd0aCIsImlzQWRkcmVzc0FsbG93ZWQiLCJhZGRyZXNzIiwibm9ybWFsaXplZEFkZHJlc3MiLCJ0b1N0cmluZyIsImluY2x1ZGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/config/whitelist.ts\n"));

/***/ })

});