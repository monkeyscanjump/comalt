/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_polkadot_util-crypto_index_js"],{

/***/ "?f4e8":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

/* (ignored) */

/***/ }),

/***/ "(app-pages-browser)/./node_modules/bn.js/lib/bn.js":
/*!**************************************!*\
  !*** ./node_modules/bn.js/lib/bn.js ***!
  \**************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/* module decorator */ module = __webpack_require__.nmd(module);\n(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = (__webpack_require__(/*! buffer */ \"?f4e8\").Buffer);\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})( false || module, this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/bn.js/lib/bn.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/wasm-crypto-wasm/cjs/bytes.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/wasm-crypto-wasm/cjs/bytes.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("// Copyright 2019-2024 @polkadot/wasm-crypto-wasm authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n// Generated as part of the build, do not edit\n\nexports.lenIn = 171008;\n\nexports.lenOut = 339468;\n\nexports.bytes = '';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/wasm-crypto-wasm/cjs/bytes.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/curves/esm/_shortw_utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/@noble/curves/esm/_shortw_utils.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCurve: function() { return /* binding */ createCurve; },\n/* harmony export */   getHash: function() { return /* binding */ getHash; }\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/hmac */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/hmac.js\");\n/* harmony import */ var _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/utils */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/utils.js\");\n/* harmony import */ var _abstract_weierstrass_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./abstract/weierstrass.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/weierstrass.js\");\n/**\n * Utilities for short weierstrass curves, combined with noble-hashes.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n\n\n/** connects noble-curves to noble-hashes */\nfunction getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => (0,_noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_0__.hmac)(hash, key, (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.concatBytes)(...msgs)),\n        randomBytes: _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.randomBytes,\n    };\n}\nfunction createCurve(curveDef, defHash) {\n    const create = (hash) => (0,_abstract_weierstrass_js__WEBPACK_IMPORTED_MODULE_2__.weierstrass)({ ...curveDef, ...getHash(hash) });\n    return { ...create(defHash), create };\n}\n//# sourceMappingURL=_shortw_utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Abm9ibGUvY3VydmVzL2VzbS9fc2hvcnR3X3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUMwQztBQUNxQjtBQUNQO0FBQ3hEO0FBQ087QUFDUDtBQUNBO0FBQ0EsZ0NBQWdDLHdEQUFJLFlBQVksZ0VBQVc7QUFDM0QsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDTztBQUNQLDZCQUE2QixxRUFBVyxHQUFHLCtCQUErQjtBQUMxRSxhQUFhO0FBQ2I7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5vYmxlL2N1cnZlcy9lc20vX3Nob3J0d191dGlscy5qcz9lZjVlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVXRpbGl0aWVzIGZvciBzaG9ydCB3ZWllcnN0cmFzcyBjdXJ2ZXMsIGNvbWJpbmVkIHdpdGggbm9ibGUtaGFzaGVzLlxuICogQG1vZHVsZVxuICovXG4vKiEgbm9ibGUtY3VydmVzIC0gTUlUIExpY2Vuc2UgKGMpIDIwMjIgUGF1bCBNaWxsZXIgKHBhdWxtaWxsci5jb20pICovXG5pbXBvcnQgeyBobWFjIH0gZnJvbSAnQG5vYmxlL2hhc2hlcy9obWFjJztcbmltcG9ydCB7IGNvbmNhdEJ5dGVzLCByYW5kb21CeXRlcyB9IGZyb20gJ0Bub2JsZS9oYXNoZXMvdXRpbHMnO1xuaW1wb3J0IHsgd2VpZXJzdHJhc3MgfSBmcm9tICcuL2Fic3RyYWN0L3dlaWVyc3RyYXNzLmpzJztcbi8qKiBjb25uZWN0cyBub2JsZS1jdXJ2ZXMgdG8gbm9ibGUtaGFzaGVzICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0SGFzaChoYXNoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaGFzaCxcbiAgICAgICAgaG1hYzogKGtleSwgLi4ubXNncykgPT4gaG1hYyhoYXNoLCBrZXksIGNvbmNhdEJ5dGVzKC4uLm1zZ3MpKSxcbiAgICAgICAgcmFuZG9tQnl0ZXMsXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDdXJ2ZShjdXJ2ZURlZiwgZGVmSGFzaCkge1xuICAgIGNvbnN0IGNyZWF0ZSA9IChoYXNoKSA9PiB3ZWllcnN0cmFzcyh7IC4uLmN1cnZlRGVmLCAuLi5nZXRIYXNoKGhhc2gpIH0pO1xuICAgIHJldHVybiB7IC4uLmNyZWF0ZShkZWZIYXNoKSwgY3JlYXRlIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1fc2hvcnR3X3V0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/curves/esm/_shortw_utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/curve.js":
/*!**********************************************************!*\
  !*** ./node_modules/@noble/curves/esm/abstract/curve.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pippenger: function() { return /* binding */ pippenger; },\n/* harmony export */   precomputeMSMUnsafe: function() { return /* binding */ precomputeMSMUnsafe; },\n/* harmony export */   validateBasic: function() { return /* binding */ validateBasic; },\n/* harmony export */   wNAF: function() { return /* binding */ wNAF; }\n/* harmony export */ });\n/* harmony import */ var _modular_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modular.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/modular.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/utils.js\");\n/**\n * Methods for elliptic curve multiplication by scalars.\n * Contains wNAF, pippenger\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nfunction validateW(W, bits) {\n    if (!Number.isSafeInteger(W) || W <= 0 || W > bits)\n        throw new Error('invalid window size, expected [1..' + bits + '], got W=' + W);\n}\nfunction calcWOpts(W, bits) {\n    validateW(W, bits);\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n}\nfunction validateMSMPoints(points, c) {\n    if (!Array.isArray(points))\n        throw new Error('array expected');\n    points.forEach((p, i) => {\n        if (!(p instanceof c))\n            throw new Error('invalid point at index ' + i);\n    });\n}\nfunction validateMSMScalars(scalars, field) {\n    if (!Array.isArray(scalars))\n        throw new Error('array of scalars expected');\n    scalars.forEach((s, i) => {\n        if (!field.isValid(s))\n            throw new Error('invalid scalar at index ' + i);\n    });\n}\n// Since points in different groups cannot be equal (different object constructor),\n// we can have single place to store precomputes\nconst pointPrecomputes = new WeakMap();\nconst pointWindowSizes = new WeakMap(); // This allows use make points immutable (nothing changes inside)\nfunction getW(P) {\n    return pointWindowSizes.get(P) || 1;\n}\n/**\n * Elliptic curve multiplication of Point by scalar. Fragile.\n * Scalars should always be less than curve order: this should be checked inside of a curve itself.\n * Creates precomputation tables for fast multiplication:\n * - private scalar is split by fixed size windows of W bits\n * - every window point is collected from window's table & added to accumulator\n * - since windows are different, same point inside tables won't be accessed more than once per calc\n * - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n * - +1 window is neccessary for wNAF\n * - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n *\n * @todo Research returning 2d JS array of windows, instead of a single window.\n * This would allow windows to be in different memory locations\n */\nfunction wNAF(c, bits) {\n    return {\n        constTimeNegate,\n        hasPrecomputes(elm) {\n            return getW(elm) !== 1;\n        },\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n, p = c.ZERO) {\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @param elm Point instance\n         * @param W window size\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = calcWOpts(W, bits);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = calcWOpts(W, bits);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        /**\n         * Implements ec unsafe (non const-time) multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @param acc accumulator point to add result of multiplication\n         * @returns point\n         */\n        wNAFUnsafe(W, precomputes, n, acc = c.ZERO) {\n            const { windows, windowSize } = calcWOpts(W, bits);\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                if (n === _0n)\n                    break; // No need to go over empty scalar\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                if (wbits === 0)\n                    continue;\n                let curr = precomputes[offset + Math.abs(wbits) - 1]; // -1 because we skip zero\n                if (wbits < 0)\n                    curr = curr.negate();\n                // NOTE: by re-using acc, we can save a lot of additions in case of MSM\n                acc = acc.add(curr);\n            }\n            return acc;\n        },\n        getPrecomputes(W, P, transform) {\n            // Calculate precomputes on a first run, reuse them after\n            let comp = pointPrecomputes.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1)\n                    pointPrecomputes.set(P, transform(comp));\n            }\n            return comp;\n        },\n        wNAFCached(P, n, transform) {\n            const W = getW(P);\n            return this.wNAF(W, this.getPrecomputes(W, P, transform), n);\n        },\n        wNAFCachedUnsafe(P, n, transform, prev) {\n            const W = getW(P);\n            if (W === 1)\n                return this.unsafeLadder(P, n, prev); // For W=1 ladder is ~x2 faster\n            return this.wNAFUnsafe(W, this.getPrecomputes(W, P, transform), n, prev);\n        },\n        // We calculate precomputes for elliptic curve point multiplication\n        // using windowed method. This specifies window size and\n        // stores precomputed values. Usually only base point would be precomputed.\n        setWindowSize(P, W) {\n            validateW(W, bits);\n            pointWindowSizes.set(P, W);\n            pointPrecomputes.delete(P);\n        },\n    };\n}\n/**\n * Pippenger algorithm for multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * 30x faster vs naive addition on L=4096, 10x faster with precomputes.\n * For N=254bit, L=1, it does: 1024 ADD + 254 DBL. For L=5: 1536 ADD + 254 DBL.\n * Algorithmically constant-time (for same L), even when 1 point + scalar, or when scalar = 0.\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @param scalars array of L scalars (aka private keys / bigints)\n */\nfunction pippenger(c, fieldN, points, scalars) {\n    // If we split scalars by some window (let's say 8 bits), every chunk will only\n    // take 256 buckets even if there are 4096 scalars, also re-uses double.\n    // TODO:\n    // - https://eprint.iacr.org/2024/750.pdf\n    // - https://tches.iacr.org/index.php/TCHES/article/view/10287\n    // 0 is accepted in scalars\n    validateMSMPoints(points, c);\n    validateMSMScalars(scalars, fieldN);\n    if (points.length !== scalars.length)\n        throw new Error('arrays of points and scalars must have equal length');\n    const zero = c.ZERO;\n    const wbits = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.bitLen)(BigInt(points.length));\n    const windowSize = wbits > 12 ? wbits - 3 : wbits > 4 ? wbits - 2 : wbits ? 2 : 1; // in bits\n    const MASK = (1 << windowSize) - 1;\n    const buckets = new Array(MASK + 1).fill(zero); // +1 for zero array\n    const lastBits = Math.floor((fieldN.BITS - 1) / windowSize) * windowSize;\n    let sum = zero;\n    for (let i = lastBits; i >= 0; i -= windowSize) {\n        buckets.fill(zero);\n        for (let j = 0; j < scalars.length; j++) {\n            const scalar = scalars[j];\n            const wbits = Number((scalar >> BigInt(i)) & BigInt(MASK));\n            buckets[wbits] = buckets[wbits].add(points[j]);\n        }\n        let resI = zero; // not using this will do small speed-up, but will lose ct\n        // Skip first bucket, because it is zero\n        for (let j = buckets.length - 1, sumI = zero; j > 0; j--) {\n            sumI = sumI.add(buckets[j]);\n            resI = resI.add(sumI);\n        }\n        sum = sum.add(resI);\n        if (i !== 0)\n            for (let j = 0; j < windowSize; j++)\n                sum = sum.double();\n    }\n    return sum;\n}\n/**\n * Precomputed multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @returns function which multiplies points with scaars\n */\nfunction precomputeMSMUnsafe(c, fieldN, points, windowSize) {\n    /**\n     * Performance Analysis of Window-based Precomputation\n     *\n     * Base Case (256-bit scalar, 8-bit window):\n     * - Standard precomputation requires:\n     *   - 31 additions per scalar × 256 scalars = 7,936 ops\n     *   - Plus 255 summary additions = 8,191 total ops\n     *   Note: Summary additions can be optimized via accumulator\n     *\n     * Chunked Precomputation Analysis:\n     * - Using 32 chunks requires:\n     *   - 255 additions per chunk\n     *   - 256 doublings\n     *   - Total: (255 × 32) + 256 = 8,416 ops\n     *\n     * Memory Usage Comparison:\n     * Window Size | Standard Points | Chunked Points\n     * ------------|-----------------|---------------\n     *     4-bit   |     520         |      15\n     *     8-bit   |    4,224        |     255\n     *    10-bit   |   13,824        |   1,023\n     *    16-bit   |  557,056        |  65,535\n     *\n     * Key Advantages:\n     * 1. Enables larger window sizes due to reduced memory overhead\n     * 2. More efficient for smaller scalar counts:\n     *    - 16 chunks: (16 × 255) + 256 = 4,336 ops\n     *    - ~2x faster than standard 8,191 ops\n     *\n     * Limitations:\n     * - Not suitable for plain precomputes (requires 256 constant doublings)\n     * - Performance degrades with larger scalar counts:\n     *   - Optimal for ~256 scalars\n     *   - Less efficient for 4096+ scalars (Pippenger preferred)\n     */\n    validateW(windowSize, fieldN.BITS);\n    validateMSMPoints(points, c);\n    const zero = c.ZERO;\n    const tableSize = 2 ** windowSize - 1; // table size (without zero)\n    const chunks = Math.ceil(fieldN.BITS / windowSize); // chunks of item\n    const MASK = BigInt((1 << windowSize) - 1);\n    const tables = points.map((p) => {\n        const res = [];\n        for (let i = 0, acc = p; i < tableSize; i++) {\n            res.push(acc);\n            acc = acc.add(p);\n        }\n        return res;\n    });\n    return (scalars) => {\n        validateMSMScalars(scalars, fieldN);\n        if (scalars.length > points.length)\n            throw new Error('array of scalars must be smaller than array of points');\n        let res = zero;\n        for (let i = 0; i < chunks; i++) {\n            // No need to double if accumulator is still zero.\n            if (res !== zero)\n                for (let j = 0; j < windowSize; j++)\n                    res = res.double();\n            const shiftBy = BigInt(chunks * windowSize - (i + 1) * windowSize);\n            for (let j = 0; j < scalars.length; j++) {\n                const n = scalars[j];\n                const curr = Number((n >> shiftBy) & MASK);\n                if (!curr)\n                    continue; // skip zero scalars chunks\n                res = res.add(tables[j][curr - 1]);\n            }\n        }\n        return res;\n    };\n}\nfunction validateBasic(curve) {\n    (0,_modular_js__WEBPACK_IMPORTED_MODULE_1__.validateField)(curve.Fp);\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.validateObject)(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...(0,_modular_js__WEBPACK_IMPORTED_MODULE_1__.nLength)(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/curve.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/edwards.js":
/*!************************************************************!*\
  !*** ./node_modules/@noble/curves/esm/abstract/edwards.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   twistedEdwards: function() { return /* binding */ twistedEdwards; }\n/* harmony export */ });\n/* harmony import */ var _curve_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./curve.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/curve.js\");\n/* harmony import */ var _modular_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modular.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/modular.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/utils.js\");\n/**\n * Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y².\n * For design rationale of types / exports, see weierstrass module documentation.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n\n\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\nfunction validateOpts(curve) {\n    const opts = (0,_curve_js__WEBPACK_IMPORTED_MODULE_0__.validateBasic)(curve);\n    _utils_js__WEBPACK_IMPORTED_MODULE_1__.validateObject(curve, {\n        hash: 'function',\n        a: 'bigint',\n        d: 'bigint',\n        randomBytes: 'function',\n    }, {\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        uvRatio: 'function',\n        mapToCurve: 'function',\n    });\n    // Set defaults\n    return Object.freeze({ ...opts });\n}\n/**\n * Creates Twisted Edwards curve with EdDSA signatures.\n * @example\n * import { Field } from '@noble/curves/abstract/modular';\n * // Before that, define BigInt-s: a, d, p, n, Gx, Gy, h\n * const curve = twistedEdwards({ a, d, Fp: Field(p), n, Gx, Gy, h })\n */\nfunction twistedEdwards(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER, prehash: prehash, hash: cHash, randomBytes, nByteLength, h: cofactor, } = CURVE;\n    // Important:\n    // There are some places where Fp.BYTES is used instead of nByteLength.\n    // So far, everything has been tested with curves of Fp.BYTES == nByteLength.\n    // TODO: test and find curves which behave otherwise.\n    const MASK = _2n << (BigInt(nByteLength * 8) - _1n);\n    const modP = Fp.create; // Function overrides\n    const Fn = (0,_modular_js__WEBPACK_IMPORTED_MODULE_2__.Field)(CURVE.n, CURVE.nBitLength);\n    // sqrt(u/v)\n    const uvRatio = CURVE.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes); // NOOP\n    const domain = CURVE.domain ||\n        ((data, ctx, phflag) => {\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.abool)('phflag', phflag);\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    // 0 <= n < MASK\n    // Coordinates larger than Fp.ORDER are allowed for zip215\n    function aCoordinate(title, n) {\n        _utils_js__WEBPACK_IMPORTED_MODULE_1__.aInRange('coordinate ' + title, n, _0n, MASK);\n    }\n    function assertPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Converts Extended point to default (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    const toAffineMemo = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.memoized)((p, iz) => {\n        const { ex: x, ey: y, ez: z } = p;\n        const is0 = p.is0();\n        if (iz == null)\n            iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n        const ax = modP(x * iz);\n        const ay = modP(y * iz);\n        const zz = modP(z * iz);\n        if (is0)\n            return { x: _0n, y: _1n };\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return { x: ax, y: ay };\n    });\n    const assertValidMemo = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.memoized)((p) => {\n        const { a, d } = CURVE;\n        if (p.is0())\n            throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n        // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n        // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n        const { ex: X, ey: Y, ez: Z, et: T } = p;\n        const X2 = modP(X * X); // X²\n        const Y2 = modP(Y * Y); // Y²\n        const Z2 = modP(Z * Z); // Z²\n        const Z4 = modP(Z2 * Z2); // Z⁴\n        const aX2 = modP(X2 * a); // aX²\n        const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n        const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n        if (left !== right)\n            throw new Error('bad point: equation left != right (1)');\n        // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n        const XY = modP(X * Y);\n        const ZT = modP(Z * T);\n        if (XY !== ZT)\n            throw new Error('bad point: equation left != right (2)');\n        return true;\n    });\n    // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(ex, ey, ez, et) {\n            this.ex = ex;\n            this.ey = ey;\n            this.ez = ez;\n            this.et = et;\n            aCoordinate('x', ex);\n            aCoordinate('y', ey);\n            aCoordinate('z', ez);\n            aCoordinate('t', et);\n            Object.freeze(this);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            aCoordinate('x', x);\n            aCoordinate('y', y);\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.ez));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        // Multiscalar Multiplication\n        static msm(points, scalars) {\n            return (0,_curve_js__WEBPACK_IMPORTED_MODULE_0__.pippenger)(Point, Fn, points, scalars);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            wnaf.setWindowSize(this, windowSize);\n        }\n        // Not required for fromHex(), which always creates valid points.\n        // Could be useful for fromAffine().\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        // Compare one point to another.\n        equals(other) {\n            assertPoint(other);\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            assertPoint(other);\n            const { a, d } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n            // Faster algo for adding 2 Extended Points when curve's a=-1.\n            // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n            // Cost: 8M + 8add + 2*2.\n            // Note: It does not check whether the `other` point is valid.\n            if (a === BigInt(-1)) {\n                const A = modP((Y1 - X1) * (Y2 + X2));\n                const B = modP((Y1 + X1) * (Y2 - X2));\n                const F = modP(B - A);\n                if (F === _0n)\n                    return this.double(); // Same point. Tests say it doesn't affect timing\n                const C = modP(Z1 * _2n * T2);\n                const D = modP(T1 * _2n * Z2);\n                const E = D + C;\n                const G = B + A;\n                const H = D - C;\n                const X3 = modP(E * F);\n                const Y3 = modP(G * H);\n                const T3 = modP(E * H);\n                const Z3 = modP(F * G);\n                return new Point(X3, Y3, Z3, T3);\n            }\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, n, Point.normalizeZ);\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            const n = scalar;\n            _utils_js__WEBPACK_IMPORTED_MODULE_1__.aInRange('scalar', n, _1n, CURVE_ORDER); // 1 <= scalar < L\n            const { p, f } = this.wNAF(n);\n            return Point.normalizeZ([p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        // Accepts optional accumulator to merge with multiply (important for sparse scalars)\n        multiplyUnsafe(scalar, acc = Point.ZERO) {\n            const n = scalar;\n            _utils_js__WEBPACK_IMPORTED_MODULE_1__.aInRange('scalar', n, _0n, CURVE_ORDER); // 0 <= scalar < L\n            if (n === _0n)\n                return I;\n            if (this.is0() || n === _1n)\n                return this;\n            return wnaf.wNAFCachedUnsafe(this, n, Point.normalizeZ, acc);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(iz) {\n            return toAffineMemo(this, iz);\n        }\n        clearCofactor() {\n            const { h: cofactor } = CURVE;\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        // Converts hash string or Uint8Array to Point.\n        // Uses algo from RFC8032 5.1.3.\n        static fromHex(hex, zip215 = false) {\n            const { d, a } = CURVE;\n            const len = Fp.BYTES;\n            hex = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.ensureBytes)('pointHex', hex, len); // copy hex to a new array\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.abool)('zip215', zip215);\n            const normed = hex.slice(); // copy again, we'll manipulate it\n            const lastByte = hex[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = _utils_js__WEBPACK_IMPORTED_MODULE_1__.bytesToNumberLE(normed);\n            // zip215=true is good for consensus-critical apps. =false follows RFC8032 / NIST186-5.\n            // RFC8032 prohibits >= p, but ZIP215 doesn't\n            // zip215=true:  0 <= y < MASK (2^256 for ed25519)\n            // zip215=false: 0 <= y < P (2^255-19 for ed25519)\n            const max = zip215 ? MASK : Fp.ORDER;\n            _utils_js__WEBPACK_IMPORTED_MODULE_1__.aInRange('pointHex.y', y, _0n, max);\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('Point.fromHex: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n            if (!zip215 && x === _0n && isLastByteOdd)\n                // if x=0 and x_0 = 1, fail\n                throw new Error('Point.fromHex: x=0 and x_0=1');\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromPrivateKey(privKey) {\n            return getExtendedPublicKey(privKey).point;\n        }\n        toRawBytes() {\n            const { x, y } = this.toAffine();\n            const bytes = _utils_js__WEBPACK_IMPORTED_MODULE_1__.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n            return bytes; // and use the last byte to encode sign of x\n        }\n        toHex() {\n            return _utils_js__WEBPACK_IMPORTED_MODULE_1__.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    const { BASE: G, ZERO: I } = Point;\n    const wnaf = (0,_curve_js__WEBPACK_IMPORTED_MODULE_0__.wNAF)(Point, nByteLength * 8);\n    function modN(a) {\n        return (0,_modular_js__WEBPACK_IMPORTED_MODULE_2__.mod)(a, CURVE_ORDER);\n    }\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return modN(_utils_js__WEBPACK_IMPORTED_MODULE_1__.bytesToNumberLE(hash));\n    }\n    /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n    function getExtendedPublicKey(key) {\n        const len = Fp.BYTES;\n        key = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.ensureBytes)('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.ensureBytes)('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        const point = G.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toRawBytes(); // Uint8Array representation\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n    function getPublicKey(privKey) {\n        return getExtendedPublicKey(privKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = new Uint8Array(), ...msgs) {\n        const msg = _utils_js__WEBPACK_IMPORTED_MODULE_1__.concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.ensureBytes)('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, privKey, options = {}) {\n        msg = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.ensureBytes)('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = G.multiply(r).toRawBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = modN(r + k * scalar); // S = (r + k * s) mod L\n        _utils_js__WEBPACK_IMPORTED_MODULE_1__.aInRange('signature.s', s, _0n, CURVE_ORDER); // 0 <= s < l\n        const res = _utils_js__WEBPACK_IMPORTED_MODULE_1__.concatBytes(R, _utils_js__WEBPACK_IMPORTED_MODULE_1__.numberToBytesLE(s, Fp.BYTES));\n        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.ensureBytes)('result', res, Fp.BYTES * 2); // 64-byte signature\n    }\n    const verifyOpts = VERIFY_DEFAULT;\n    /**\n     * Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n     * An extended group equation is checked.\n     */\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n        sig = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.ensureBytes)('signature', sig, 2 * len); // An extended group equation is checked.\n        msg = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.ensureBytes)('message', msg);\n        publicKey = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.ensureBytes)('publicKey', publicKey, len);\n        if (zip215 !== undefined)\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.abool)('zip215', zip215);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const s = _utils_js__WEBPACK_IMPORTED_MODULE_1__.bytesToNumberLE(sig.slice(len, 2 * len));\n        let A, R, SB;\n        try {\n            // zip215=true is good for consensus-critical apps. =false follows RFC8032 / NIST186-5.\n            // zip215=true:  0 <= y < MASK (2^256 for ed25519)\n            // zip215=false: 0 <= y < P (2^255-19 for ed25519)\n            A = Point.fromHex(publicKey, zip215);\n            R = Point.fromHex(sig.slice(0, len), zip215);\n            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        if (!zip215 && A.isSmallOrder())\n            return false;\n        const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // Extended group equation\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n    }\n    G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    const utils = {\n        getExtendedPublicKey,\n        // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n        randomPrivateKey: () => randomBytes(Fp.BYTES),\n        /**\n         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n         * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n         * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n         * @param windowSize 2, 4, 8, 16\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3));\n            return point;\n        },\n    };\n    return {\n        CURVE,\n        getPublicKey,\n        sign,\n        verify,\n        ExtendedPoint: Point,\n        utils,\n    };\n}\n//# sourceMappingURL=edwards.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/edwards.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/hash-to-curve.js":
/*!******************************************************************!*\
  !*** ./node_modules/@noble/curves/esm/abstract/hash-to-curve.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHasher: function() { return /* binding */ createHasher; },\n/* harmony export */   expand_message_xmd: function() { return /* binding */ expand_message_xmd; },\n/* harmony export */   expand_message_xof: function() { return /* binding */ expand_message_xof; },\n/* harmony export */   hash_to_field: function() { return /* binding */ hash_to_field; },\n/* harmony export */   isogenyMap: function() { return /* binding */ isogenyMap; }\n/* harmony export */ });\n/* harmony import */ var _modular_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modular.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/modular.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/utils.js\");\n\n\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = _utils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToNumberBE;\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value, length) {\n    anum(value);\n    anum(length);\n    if (value < 0 || value >= 1 << (8 * length))\n        throw new Error('invalid I2OSP input: ' + value);\n    const res = Array.from({ length }).fill(0);\n    for (let i = length - 1; i >= 0; i--) {\n        res[i] = value & 0xff;\n        value >>>= 8;\n    }\n    return new Uint8Array(res);\n}\nfunction strxor(a, b) {\n    const arr = new Uint8Array(a.length);\n    for (let i = 0; i < a.length; i++) {\n        arr[i] = a[i] ^ b[i];\n    }\n    return arr;\n}\nfunction anum(item) {\n    if (!Number.isSafeInteger(item))\n        throw new Error('number expected');\n}\n/**\n * Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits.\n * [RFC 9380 5.3.1](https://www.rfc-editor.org/rfc/rfc9380#section-5.3.1).\n */\nfunction expand_message_xmd(msg, DST, lenInBytes, H) {\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.abytes)(msg);\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.abytes)(DST);\n    anum(lenInBytes);\n    // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n    if (DST.length > 255)\n        DST = H((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.concatBytes)((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.utf8ToBytes)('H2C-OVERSIZE-DST-'), DST));\n    const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n    const ell = Math.ceil(lenInBytes / b_in_bytes);\n    if (lenInBytes > 65535 || ell > 255)\n        throw new Error('expand_message_xmd: invalid lenInBytes');\n    const DST_prime = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.concatBytes)(DST, i2osp(DST.length, 1));\n    const Z_pad = i2osp(0, r_in_bytes);\n    const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n    const b = new Array(ell);\n    const b_0 = H((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.concatBytes)(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n    b[0] = H((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.concatBytes)(b_0, i2osp(1, 1), DST_prime));\n    for (let i = 1; i <= ell; i++) {\n        const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n        b[i] = H((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.concatBytes)(...args));\n    }\n    const pseudo_random_bytes = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.concatBytes)(...b);\n    return pseudo_random_bytes.slice(0, lenInBytes);\n}\n/**\n * Produces a uniformly random byte string using an extendable-output function (XOF) H.\n * 1. The collision resistance of H MUST be at least k bits.\n * 2. H MUST be an XOF that has been proved indifferentiable from\n *    a random oracle under a reasonable cryptographic assumption.\n * [RFC 9380 5.3.2](https://www.rfc-editor.org/rfc/rfc9380#section-5.3.2).\n */\nfunction expand_message_xof(msg, DST, lenInBytes, k, H) {\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.abytes)(msg);\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.abytes)(DST);\n    anum(lenInBytes);\n    // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n    // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n    if (DST.length > 255) {\n        const dkLen = Math.ceil((2 * k) / 8);\n        DST = H.create({ dkLen }).update((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.utf8ToBytes)('H2C-OVERSIZE-DST-')).update(DST).digest();\n    }\n    if (lenInBytes > 65535 || DST.length > 255)\n        throw new Error('expand_message_xof: invalid lenInBytes');\n    return (H.create({ dkLen: lenInBytes })\n        .update(msg)\n        .update(i2osp(lenInBytes, 2))\n        // 2. DST_prime = DST || I2OSP(len(DST), 1)\n        .update(DST)\n        .update(i2osp(DST.length, 1))\n        .digest());\n}\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F.\n * [RFC 9380 5.2](https://www.rfc-editor.org/rfc/rfc9380#section-5.2).\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nfunction hash_to_field(msg, count, options) {\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.validateObject)(options, {\n        DST: 'stringOrUint8Array',\n        p: 'bigint',\n        m: 'isSafeInteger',\n        k: 'isSafeInteger',\n        hash: 'hash',\n    });\n    const { p, k, m, hash, expand, DST: _DST } = options;\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.abytes)(msg);\n    anum(count);\n    const DST = typeof _DST === 'string' ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.utf8ToBytes)(_DST) : _DST;\n    const log2p = p.toString(2).length;\n    const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n    const len_in_bytes = count * m * L;\n    let prb; // pseudo_random_bytes\n    if (expand === 'xmd') {\n        prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n    }\n    else if (expand === 'xof') {\n        prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n    }\n    else if (expand === '_internal_pass') {\n        // for internal tests only\n        prb = msg;\n    }\n    else {\n        throw new Error('expand must be \"xmd\" or \"xof\"');\n    }\n    const u = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const e = new Array(m);\n        for (let j = 0; j < m; j++) {\n            const elm_offset = L * (j + i * m);\n            const tv = prb.subarray(elm_offset, elm_offset + L);\n            e[j] = (0,_modular_js__WEBPACK_IMPORTED_MODULE_1__.mod)(os2ip(tv), p);\n        }\n        u[i] = e;\n    }\n    return u;\n}\nfunction isogenyMap(field, map) {\n    // Make same order as in spec\n    const COEFF = map.map((i) => Array.from(i).reverse());\n    return (x, y) => {\n        const [xNum, xDen, yNum, yDen] = COEFF.map((val) => val.reduce((acc, i) => field.add(field.mul(acc, x), i)));\n        x = field.div(xNum, xDen); // xNum / xDen\n        y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n        return { x: x, y: y };\n    };\n}\n/** Creates hash-to-curve methods from EC Point and mapToCurve function. */\nfunction createHasher(Point, mapToCurve, def) {\n    if (typeof mapToCurve !== 'function')\n        throw new Error('mapToCurve() must be defined');\n    return {\n        // Encodes byte string to elliptic curve.\n        // hash_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n        hashToCurve(msg, options) {\n            const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options });\n            const u0 = Point.fromAffine(mapToCurve(u[0]));\n            const u1 = Point.fromAffine(mapToCurve(u[1]));\n            const P = u0.add(u1).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n        // Encodes byte string to elliptic curve.\n        // encode_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n        encodeToCurve(msg, options) {\n            const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options });\n            const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n        // Same as encodeToCurve, but without hash\n        mapToCurve(scalars) {\n            if (!Array.isArray(scalars))\n                throw new Error('mapToCurve: expected array of bigints');\n            for (const i of scalars)\n                if (typeof i !== 'bigint')\n                    throw new Error('mapToCurve: expected array of bigints');\n            const P = Point.fromAffine(mapToCurve(scalars)).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n    };\n}\n//# sourceMappingURL=hash-to-curve.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/hash-to-curve.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/modular.js":
/*!************************************************************!*\
  !*** ./node_modules/@noble/curves/esm/abstract/modular.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Field: function() { return /* binding */ Field; },\n/* harmony export */   FpDiv: function() { return /* binding */ FpDiv; },\n/* harmony export */   FpInvertBatch: function() { return /* binding */ FpInvertBatch; },\n/* harmony export */   FpIsSquare: function() { return /* binding */ FpIsSquare; },\n/* harmony export */   FpLegendre: function() { return /* binding */ FpLegendre; },\n/* harmony export */   FpPow: function() { return /* binding */ FpPow; },\n/* harmony export */   FpSqrt: function() { return /* binding */ FpSqrt; },\n/* harmony export */   FpSqrtEven: function() { return /* binding */ FpSqrtEven; },\n/* harmony export */   FpSqrtOdd: function() { return /* binding */ FpSqrtOdd; },\n/* harmony export */   getFieldBytesLength: function() { return /* binding */ getFieldBytesLength; },\n/* harmony export */   getMinHashLength: function() { return /* binding */ getMinHashLength; },\n/* harmony export */   hashToPrivateScalar: function() { return /* binding */ hashToPrivateScalar; },\n/* harmony export */   invert: function() { return /* binding */ invert; },\n/* harmony export */   isNegativeLE: function() { return /* binding */ isNegativeLE; },\n/* harmony export */   mapHashToField: function() { return /* binding */ mapHashToField; },\n/* harmony export */   mod: function() { return /* binding */ mod; },\n/* harmony export */   nLength: function() { return /* binding */ nLength; },\n/* harmony export */   pow: function() { return /* binding */ pow; },\n/* harmony export */   pow2: function() { return /* binding */ pow2; },\n/* harmony export */   tonelliShanks: function() { return /* binding */ tonelliShanks; },\n/* harmony export */   validateField: function() { return /* binding */ validateField; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/utils.js\");\n/**\n * Utils for modular division and finite fields.\n * A finite field over 11 is integer number operations `mod 11`.\n * There is no division: it is replaced by modular multiplicative inverse.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = /* @__PURE__ */ BigInt(2), _3n = /* @__PURE__ */ BigInt(3);\n// prettier-ignore\nconst _4n = /* @__PURE__ */ BigInt(4), _5n = /* @__PURE__ */ BigInt(5), _8n = /* @__PURE__ */ BigInt(8);\n// prettier-ignore\nconst _9n = /* @__PURE__ */ BigInt(9), _16n = /* @__PURE__ */ BigInt(16);\n// Calculates a modulo b\nfunction mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @todo use field version && remove\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\nfunction pow(num, power, modulo) {\n    if (power < _0n)\n        throw new Error('invalid exponent, negatives unsupported');\n    if (modulo <= _0n)\n        throw new Error('invalid modulus');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n/** Does `x^(2^power)` mod p. `pow2(30, 4)` == `30^(2^4)` */\nfunction pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n/**\n * Inverses number over modulo.\n * Implemented using [Euclidean GCD](https://brilliant.org/wiki/extended-euclidean-algorithm/).\n */\nfunction invert(number, modulo) {\n    if (number === _0n)\n        throw new Error('invert: expected non-zero number');\n    if (modulo <= _0n)\n        throw new Error('invert: expected positive modulus, got ' + modulo);\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nfunction tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++) {\n        // Crash instead of infinity loop, we cannot reasonable count until P.\n        if (Z > 1000)\n            throw new Error('Cannot find square root: likely non-prime P');\n    }\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\n/**\n * Square root for a finite field. It will try to check if optimizations are applicable and fall back to 4:\n *\n * 1. P ≡ 3 (mod 4)\n * 2. P ≡ 5 (mod 8)\n * 3. P ≡ 9 (mod 16)\n * 4. Tonelli-Shanks algorithm\n *\n * Different algorithms can give different roots, it is up to user to decide which one they want.\n * For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n */\nfunction FpSqrt(P) {\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nconst isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nfunction validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.validateObject)(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nfunction FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('invalid exponent, negatives unsupported');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nfunction FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nfunction FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n/**\n * Legendre symbol.\n * * (a | p) ≡ 1    if a is a square (mod p), quadratic residue\n * * (a | p) ≡ -1   if a is not a square (mod p), quadratic non residue\n * * (a | p) ≡ 0    if a ≡ 0 (mod p)\n */\nfunction FpLegendre(order) {\n    const legendreConst = (order - _1n) / _2n; // Integer arithmetic\n    return (f, x) => f.pow(x, legendreConst);\n}\n// This function returns True whenever the value x is a square in the field F.\nfunction FpIsSquare(f) {\n    const legendre = FpLegendre(f.ORDER);\n    return (x) => {\n        const p = legendre(f, x);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nfunction nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * Fragile: always run a benchmark on a change.\n * Security note: operations don't check 'isValid' for all elements for performance reasons,\n * it is caller responsibility to check this.\n * This is low-level code, please make sure you know what you're doing.\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nfunction Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error('invalid field: expected ORDER > 0, got ' + ORDER);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('invalid field: expected ORDER of <= 2048 bytes');\n    let sqrtP; // cached sqrtP\n    const f = Object.freeze({\n        ORDER,\n        isLE,\n        BITS,\n        BYTES,\n        MASK: (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.bitMask)(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error('invalid field element: expected bigint, got ' + typeof num);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt ||\n            ((n) => {\n                if (!sqrtP)\n                    sqrtP = FpSqrt(ORDER);\n                return sqrtP(f, n);\n            }),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.numberToBytesLE)(num, BYTES) : (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.numberToBytesBE)(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error('Field.fromBytes: expected ' + BYTES + ' bytes, got ' + bytes.length);\n            return isLE ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToNumberLE)(bytes) : (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToNumberBE)(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nfunction FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(\"Field doesn't have isOdd\");\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nfunction FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(\"Field doesn't have isOdd\");\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use `mapKeyToField` instead\n */\nfunction hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ensureBytes)('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error('hashToPrivateScalar: expected ' + minLen + '-1024 bytes of input, got ' + hashLen);\n    const num = isLE ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToNumberLE)(hash) : (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToNumberBE)(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nfunction getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nfunction getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nfunction mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error('expected ' + minLen + '-1024 bytes of input, got ' + len);\n    const num = isLE ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToNumberLE)(key) : (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToNumberBE)(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.numberToBytesLE)(reduced, fieldLen) : (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.numberToBytesBE)(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/modular.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/montgomery.js":
/*!***************************************************************!*\
  !*** ./node_modules/@noble/curves/esm/abstract/montgomery.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   montgomery: function() { return /* binding */ montgomery; }\n/* harmony export */ });\n/* harmony import */ var _modular_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modular.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/modular.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/utils.js\");\n/**\n * Montgomery curve methods. It's not really whole montgomery curve,\n * just bunch of very specific methods for X25519 / X448 from\n * [RFC 7748](https://www.rfc-editor.org/rfc/rfc7748)\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nfunction validateOpts(curve) {\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.validateObject)(curve, {\n        a: 'bigint',\n    }, {\n        montgomeryBits: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        powPminus2: 'function',\n        Gu: 'bigint',\n    });\n    // Set defaults\n    return Object.freeze({ ...curve });\n}\n// Uses only one coordinate instead of two\nfunction montgomery(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { P } = CURVE;\n    const modP = (n) => (0,_modular_js__WEBPACK_IMPORTED_MODULE_1__.mod)(n, P);\n    const montgomeryBits = CURVE.montgomeryBits;\n    const montgomeryBytes = Math.ceil(montgomeryBits / 8);\n    const fieldLen = CURVE.nByteLength;\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes);\n    const powPminus2 = CURVE.powPminus2 || ((x) => (0,_modular_js__WEBPACK_IMPORTED_MODULE_1__.pow)(x, P - BigInt(2), P));\n    // cswap from RFC7748. But it is not from RFC7748!\n    /*\n      cswap(swap, x_2, x_3):\n           dummy = mask(swap) AND (x_2 XOR x_3)\n           x_2 = x_2 XOR dummy\n           x_3 = x_3 XOR dummy\n           Return (x_2, x_3)\n    Where mask(swap) is the all-1 or all-0 word of the same length as x_2\n     and x_3, computed, e.g., as mask(swap) = 0 - swap.\n    */\n    function cswap(swap, x_2, x_3) {\n        const dummy = modP(swap * (x_2 - x_3));\n        x_2 = modP(x_2 - dummy);\n        x_3 = modP(x_3 + dummy);\n        return [x_2, x_3];\n    }\n    // x25519 from 4\n    // The constant a24 is (486662 - 2) / 4 = 121665 for curve25519/X25519\n    const a24 = (CURVE.a - BigInt(2)) / BigInt(4);\n    /**\n     *\n     * @param pointU u coordinate (x) on Montgomery Curve 25519\n     * @param scalar by which the point would be multiplied\n     * @returns new Point on Montgomery curve\n     */\n    function montgomeryLadder(u, scalar) {\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.aInRange)('u', u, _0n, P);\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.aInRange)('scalar', scalar, _0n, P);\n        // Section 5: Implementations MUST accept non-canonical values and process them as\n        // if they had been reduced modulo the field prime.\n        const k = scalar;\n        const x_1 = u;\n        let x_2 = _1n;\n        let z_2 = _0n;\n        let x_3 = u;\n        let z_3 = _1n;\n        let swap = _0n;\n        let sw;\n        for (let t = BigInt(montgomeryBits - 1); t >= _0n; t--) {\n            const k_t = (k >> t) & _1n;\n            swap ^= k_t;\n            sw = cswap(swap, x_2, x_3);\n            x_2 = sw[0];\n            x_3 = sw[1];\n            sw = cswap(swap, z_2, z_3);\n            z_2 = sw[0];\n            z_3 = sw[1];\n            swap = k_t;\n            const A = x_2 + z_2;\n            const AA = modP(A * A);\n            const B = x_2 - z_2;\n            const BB = modP(B * B);\n            const E = AA - BB;\n            const C = x_3 + z_3;\n            const D = x_3 - z_3;\n            const DA = modP(D * A);\n            const CB = modP(C * B);\n            const dacb = DA + CB;\n            const da_cb = DA - CB;\n            x_3 = modP(dacb * dacb);\n            z_3 = modP(x_1 * modP(da_cb * da_cb));\n            x_2 = modP(AA * BB);\n            z_2 = modP(E * (AA + modP(a24 * E)));\n        }\n        // (x_2, x_3) = cswap(swap, x_2, x_3)\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        // (z_2, z_3) = cswap(swap, z_2, z_3)\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        // z_2^(p - 2)\n        const z2 = powPminus2(z_2);\n        // Return x_2 * (z_2^(p - 2))\n        return modP(x_2 * z2);\n    }\n    function encodeUCoordinate(u) {\n        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.numberToBytesLE)(modP(u), montgomeryBytes);\n    }\n    function decodeUCoordinate(uEnc) {\n        // Section 5: When receiving such an array, implementations of X25519\n        // MUST mask the most significant bit in the final byte.\n        const u = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ensureBytes)('u coordinate', uEnc, montgomeryBytes);\n        if (fieldLen === 32)\n            u[31] &= 127; // 0b0111_1111\n        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToNumberLE)(u);\n    }\n    function decodeScalar(n) {\n        const bytes = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ensureBytes)('scalar', n);\n        const len = bytes.length;\n        if (len !== montgomeryBytes && len !== fieldLen) {\n            let valid = '' + montgomeryBytes + ' or ' + fieldLen;\n            throw new Error('invalid scalar, expected ' + valid + ' bytes, got ' + len);\n        }\n        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToNumberLE)(adjustScalarBytes(bytes));\n    }\n    function scalarMult(scalar, u) {\n        const pointU = decodeUCoordinate(u);\n        const _scalar = decodeScalar(scalar);\n        const pu = montgomeryLadder(pointU, _scalar);\n        // The result was not contributory\n        // https://cr.yp.to/ecdh.html#validate\n        if (pu === _0n)\n            throw new Error('invalid private or public key received');\n        return encodeUCoordinate(pu);\n    }\n    // Computes public key from private. By doing scalar multiplication of base point.\n    const GuBytes = encodeUCoordinate(CURVE.Gu);\n    function scalarMultBase(scalar) {\n        return scalarMult(scalar, GuBytes);\n    }\n    return {\n        scalarMult,\n        scalarMultBase,\n        getSharedSecret: (privateKey, publicKey) => scalarMult(privateKey, publicKey),\n        getPublicKey: (privateKey) => scalarMultBase(privateKey),\n        utils: { randomPrivateKey: () => CURVE.randomBytes(CURVE.nByteLength) },\n        GuBytes: GuBytes,\n    };\n}\n//# sourceMappingURL=montgomery.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/montgomery.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/utils.js":
/*!**********************************************************!*\
  !*** ./node_modules/@noble/curves/esm/abstract/utils.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   aInRange: function() { return /* binding */ aInRange; },\n/* harmony export */   abool: function() { return /* binding */ abool; },\n/* harmony export */   abytes: function() { return /* binding */ abytes; },\n/* harmony export */   bitGet: function() { return /* binding */ bitGet; },\n/* harmony export */   bitLen: function() { return /* binding */ bitLen; },\n/* harmony export */   bitMask: function() { return /* binding */ bitMask; },\n/* harmony export */   bitSet: function() { return /* binding */ bitSet; },\n/* harmony export */   bytesToHex: function() { return /* binding */ bytesToHex; },\n/* harmony export */   bytesToNumberBE: function() { return /* binding */ bytesToNumberBE; },\n/* harmony export */   bytesToNumberLE: function() { return /* binding */ bytesToNumberLE; },\n/* harmony export */   concatBytes: function() { return /* binding */ concatBytes; },\n/* harmony export */   createHmacDrbg: function() { return /* binding */ createHmacDrbg; },\n/* harmony export */   ensureBytes: function() { return /* binding */ ensureBytes; },\n/* harmony export */   equalBytes: function() { return /* binding */ equalBytes; },\n/* harmony export */   hexToBytes: function() { return /* binding */ hexToBytes; },\n/* harmony export */   hexToNumber: function() { return /* binding */ hexToNumber; },\n/* harmony export */   inRange: function() { return /* binding */ inRange; },\n/* harmony export */   isBytes: function() { return /* binding */ isBytes; },\n/* harmony export */   memoized: function() { return /* binding */ memoized; },\n/* harmony export */   notImplemented: function() { return /* binding */ notImplemented; },\n/* harmony export */   numberToBytesBE: function() { return /* binding */ numberToBytesBE; },\n/* harmony export */   numberToBytesLE: function() { return /* binding */ numberToBytesLE; },\n/* harmony export */   numberToHexUnpadded: function() { return /* binding */ numberToHexUnpadded; },\n/* harmony export */   numberToVarBytesBE: function() { return /* binding */ numberToVarBytesBE; },\n/* harmony export */   utf8ToBytes: function() { return /* binding */ utf8ToBytes; },\n/* harmony export */   validateObject: function() { return /* binding */ validateObject; }\n/* harmony export */ });\n/**\n * Hex, bytes and number utilities.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\nfunction abytes(item) {\n    if (!isBytes(item))\n        throw new Error('Uint8Array expected');\n}\nfunction abool(title, value) {\n    if (typeof value !== 'boolean')\n        throw new Error(title + ' boolean expected, got ' + value);\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? '0' + hex : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    return hex === '' ? _0n : BigInt('0x' + hex); // Big Endian\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nfunction bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction bytesToNumberLE(bytes) {\n    abytes(bytes);\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nfunction numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nfunction numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nfunction numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nfunction ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(title + ' must be hex string or Uint8Array, cause: ' + e);\n        }\n    }\n    else if (isBytes(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(title + ' must be hex string or Uint8Array');\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(title + ' of length ' + expectedLength + ' expected, got ' + len);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nfunction equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('string expected');\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Is positive bigint\nconst isPosBig = (n) => typeof n === 'bigint' && _0n <= n;\nfunction inRange(n, min, max) {\n    return isPosBig(n) && isPosBig(min) && isPosBig(max) && min <= n && n < max;\n}\n/**\n * Asserts min <= n < max. NOTE: It's < max and not <= max.\n * @example\n * aInRange('x', x, 1n, 256n); // would assume x is in (1n..255n)\n */\nfunction aInRange(title, n, min, max) {\n    // Why min <= n < max and not a (min < n < max) OR b (min <= n <= max)?\n    // consider P=256n, min=0n, max=P\n    // - a for min=0 would require -1:          `inRange('x', x, -1n, P)`\n    // - b would commonly require subtraction:  `inRange('x', x, 0n, P - 1n)`\n    // - our way is the cleanest:               `inRange('x', x, 0n, P)\n    if (!inRange(n, min, max))\n        throw new Error('expected valid ' + title + ': ' + min + ' <= n < ' + max + ', got ' + n);\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nfunction bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nfunction bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nfunction bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nconst bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nfunction createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nfunction validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error('invalid validator function');\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error('param ' + String(fieldName) + ' is invalid. Expected ' + type + ', got ' + val);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n/**\n * throws not implemented error\n */\nconst notImplemented = () => {\n    throw new Error('not implemented');\n};\n/**\n * Memoizes (caches) computation result.\n * Uses WeakMap: the value is going auto-cleaned by GC after last reference is removed.\n */\nfunction memoized(fn) {\n    const map = new WeakMap();\n    return (arg, ...args) => {\n        const val = map.get(arg);\n        if (val !== undefined)\n            return val;\n        const computed = fn(arg, ...args);\n        map.set(arg, computed);\n        return computed;\n    };\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/weierstrass.js":
/*!****************************************************************!*\
  !*** ./node_modules/@noble/curves/esm/abstract/weierstrass.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DER: function() { return /* binding */ DER; },\n/* harmony export */   DERErr: function() { return /* binding */ DERErr; },\n/* harmony export */   SWUFpSqrtRatio: function() { return /* binding */ SWUFpSqrtRatio; },\n/* harmony export */   mapToCurveSimpleSWU: function() { return /* binding */ mapToCurveSimpleSWU; },\n/* harmony export */   weierstrass: function() { return /* binding */ weierstrass; },\n/* harmony export */   weierstrassPoints: function() { return /* binding */ weierstrassPoints; }\n/* harmony export */ });\n/* harmony import */ var _curve_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./curve.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/curve.js\");\n/* harmony import */ var _modular_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modular.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/modular.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/utils.js\");\n/**\n * Short Weierstrass curve methods. The formula is: y² = x³ + ax + b.\n *\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance\n * of nominative types in TypeScript and interfaces only check for shape, so it's hard to create\n * unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * @todo https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n\n\n\nfunction validateSigVerOpts(opts) {\n    if (opts.lowS !== undefined)\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.abool)('lowS', opts.lowS);\n    if (opts.prehash !== undefined)\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.abool)('prehash', opts.prehash);\n}\nfunction validatePointOpts(curve) {\n    const opts = (0,_curve_js__WEBPACK_IMPORTED_MODULE_1__.validateBasic)(curve);\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('invalid endomorphism, can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('invalid endomorphism, expected beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = _utils_js__WEBPACK_IMPORTED_MODULE_0__;\nclass DERErr extends Error {\n    constructor(m = '') {\n        super(m);\n    }\n}\n/**\n * ASN.1 DER encoding utilities. ASN is very complex & fragile. Format:\n *\n *     [0x30 (SEQUENCE), bytelength, 0x02 (INTEGER), intLength, R, 0x02 (INTEGER), intLength, S]\n *\n * Docs: https://letsencrypt.org/docs/a-warm-welcome-to-asn1-and-der/, https://luca.ntop.org/Teaching/Appunti/asn1.html\n */\nconst DER = {\n    // asn.1 DER encoding utils\n    Err: DERErr,\n    // Basic building block is TLV (Tag-Length-Value)\n    _tlv: {\n        encode: (tag, data) => {\n            const { Err: E } = DER;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length & 1)\n                throw new E('tlv.encode: unpadded data');\n            const dataLen = data.length / 2;\n            const len = _utils_js__WEBPACK_IMPORTED_MODULE_0__.numberToHexUnpadded(dataLen);\n            if ((len.length / 2) & 128)\n                throw new E('tlv.encode: long form length too big');\n            // length of length with long form flag\n            const lenLen = dataLen > 127 ? _utils_js__WEBPACK_IMPORTED_MODULE_0__.numberToHexUnpadded((len.length / 2) | 128) : '';\n            const t = _utils_js__WEBPACK_IMPORTED_MODULE_0__.numberToHexUnpadded(tag);\n            return t + lenLen + len + data;\n        },\n        // v - value, l - left bytes (unparsed)\n        decode(tag, data) {\n            const { Err: E } = DER;\n            let pos = 0;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length < 2 || data[pos++] !== tag)\n                throw new E('tlv.decode: wrong tlv');\n            const first = data[pos++];\n            const isLong = !!(first & 128); // First bit of first length byte is flag for short/long form\n            let length = 0;\n            if (!isLong)\n                length = first;\n            else {\n                // Long form: [longFlag(1bit), lengthLength(7bit), length (BE)]\n                const lenLen = first & 127;\n                if (!lenLen)\n                    throw new E('tlv.decode(long): indefinite length not supported');\n                if (lenLen > 4)\n                    throw new E('tlv.decode(long): byte length is too big'); // this will overflow u32 in js\n                const lengthBytes = data.subarray(pos, pos + lenLen);\n                if (lengthBytes.length !== lenLen)\n                    throw new E('tlv.decode: length bytes not complete');\n                if (lengthBytes[0] === 0)\n                    throw new E('tlv.decode(long): zero leftmost byte');\n                for (const b of lengthBytes)\n                    length = (length << 8) | b;\n                pos += lenLen;\n                if (length < 128)\n                    throw new E('tlv.decode(long): not minimal encoding');\n            }\n            const v = data.subarray(pos, pos + length);\n            if (v.length !== length)\n                throw new E('tlv.decode: wrong value length');\n            return { v, l: data.subarray(pos + length) };\n        },\n    },\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    _int: {\n        encode(num) {\n            const { Err: E } = DER;\n            if (num < _0n)\n                throw new E('integer: negative integers are not allowed');\n            let hex = _utils_js__WEBPACK_IMPORTED_MODULE_0__.numberToHexUnpadded(num);\n            // Pad with zero byte if negative flag is present\n            if (Number.parseInt(hex[0], 16) & 0b1000)\n                hex = '00' + hex;\n            if (hex.length & 1)\n                throw new E('unexpected DER parsing assertion: unpadded hex');\n            return hex;\n        },\n        decode(data) {\n            const { Err: E } = DER;\n            if (data[0] & 128)\n                throw new E('invalid signature integer: negative');\n            if (data[0] === 0x00 && !(data[1] & 128))\n                throw new E('invalid signature integer: unnecessary leading zero');\n            return b2n(data);\n        },\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E, _int: int, _tlv: tlv } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        _utils_js__WEBPACK_IMPORTED_MODULE_0__.abytes(data);\n        const { v: seqBytes, l: seqLeftBytes } = tlv.decode(0x30, data);\n        if (seqLeftBytes.length)\n            throw new E('invalid signature: left bytes after parsing');\n        const { v: rBytes, l: rLeftBytes } = tlv.decode(0x02, seqBytes);\n        const { v: sBytes, l: sLeftBytes } = tlv.decode(0x02, rLeftBytes);\n        if (sLeftBytes.length)\n            throw new E('invalid signature: left bytes after parsing');\n        return { r: int.decode(rBytes), s: int.decode(sBytes) };\n    },\n    hexFromSig(sig) {\n        const { _tlv: tlv, _int: int } = DER;\n        const rs = tlv.encode(0x02, int.encode(sig.r));\n        const ss = tlv.encode(0x02, int.encode(sig.s));\n        const seq = rs + ss;\n        return tlv.encode(0x30, seq);\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nfunction weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const Fn = (0,_modular_js__WEBPACK_IMPORTED_MODULE_2__.Field)(CURVE.n, CURVE.nBitLength);\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return _utils_js__WEBPACK_IMPORTED_MODULE_0__.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return _utils_js__WEBPACK_IMPORTED_MODULE_0__.inRange(num, _1n, CURVE.n);\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n: N } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (_utils_js__WEBPACK_IMPORTED_MODULE_0__.isBytes(key))\n                key = _utils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('invalid private key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : _utils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToNumberBE((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ensureBytes)('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error('invalid private key, expected hex or ' + nByteLength + ' bytes, got ' + typeof key);\n        }\n        if (wrapPrivateKey)\n            num = (0,_modular_js__WEBPACK_IMPORTED_MODULE_2__.mod)(num, N); // disabled by default, enabled for BLS\n        _utils_js__WEBPACK_IMPORTED_MODULE_0__.aInRange('private key', num, _1n, N); // num in range [1..N-1]\n        return num;\n    }\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    // Memoized toAffine / validity check. They are heavy. Points are immutable.\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    const toAffineMemo = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.memoized)((p, iz) => {\n        const { px: x, py: y, pz: z } = p;\n        // Fast-path for normalized points\n        if (Fp.eql(z, Fp.ONE))\n            return { x, y };\n        const is0 = p.is0();\n        // If invZ was 0, we return zero point. However we still want to execute\n        // all operations, so we replace invZ with a random number, 1.\n        if (iz == null)\n            iz = is0 ? Fp.ONE : Fp.inv(z);\n        const ax = Fp.mul(x, iz);\n        const ay = Fp.mul(y, iz);\n        const zz = Fp.mul(z, iz);\n        if (is0)\n            return { x: Fp.ZERO, y: Fp.ZERO };\n        if (!Fp.eql(zz, Fp.ONE))\n            throw new Error('invZ was invalid');\n        return { x: ax, y: ay };\n    });\n    // NOTE: on exception this will crash 'cached' and no value will be set.\n    // Otherwise true will be return\n    const assertValidMemo = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.memoized)((p) => {\n        if (p.is0()) {\n            // (0, 1, 0) aka ZERO is invalid in most contexts.\n            // In BLS, ZERO can be serialized, so we allow it.\n            // (0, 0, 0) is invalid representation of ZERO.\n            if (CURVE.allowInfinityPoint && !Fp.is0(p.py))\n                return;\n            throw new Error('bad point: ZERO');\n        }\n        // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n        const { x, y } = p.toAffine();\n        // Check if x, y are valid field elements\n        if (!Fp.isValid(x) || !Fp.isValid(y))\n            throw new Error('bad point: x or y not FE');\n        const left = Fp.sqr(y); // y²\n        const right = weierstrassEquation(x); // x³ + ax + b\n        if (!Fp.eql(left, right))\n            throw new Error('bad point: equation left != right');\n        if (!p.isTorsionFree())\n            throw new Error('bad point: not in prime-order subgroup');\n        return true;\n    });\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n            Object.freeze(this);\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ensureBytes)('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // Multiscalar Multiplication\n        static msm(points, scalars) {\n            return (0,_curve_js__WEBPACK_IMPORTED_MODULE_1__.pippenger)(Point, Fn, points, scalars);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            wnaf.setWindowSize(this, windowSize);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, n, Point.normalizeZ);\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(sc) {\n            const { endo, n: N } = CURVE;\n            _utils_js__WEBPACK_IMPORTED_MODULE_0__.aInRange('scalar', sc, _0n, N);\n            const I = Point.ZERO;\n            if (sc === _0n)\n                return I;\n            if (this.is0() || sc === _1n)\n                return this;\n            // Case a: no endomorphism. Case b: has precomputes.\n            if (!endo || wnaf.hasPrecomputes(this))\n                return wnaf.wNAFCachedUnsafe(this, sc, Point.normalizeZ);\n            // Case c: endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(sc);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            const { endo, n: N } = CURVE;\n            _utils_js__WEBPACK_IMPORTED_MODULE_0__.aInRange('scalar', scalar, _1n, N);\n            let point, fake; // Fake point is used to const-time mult\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(scalar);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(scalar);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            return toAffineMemo(this, iz);\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.abool)('isCompressed', isCompressed);\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.abool)('isCompressed', isCompressed);\n            return _utils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = (0,_curve_js__WEBPACK_IMPORTED_MODULE_1__.wNAF)(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = (0,_curve_js__WEBPACK_IMPORTED_MODULE_1__.validateBasic)(curve);\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\n/**\n * Creates short weierstrass curve and ECDSA signature methods for it.\n * @example\n * import { Field } from '@noble/curves/abstract/modular';\n * // Before that, define BigInt-s: a, b, p, n, Gx, Gy\n * const curve = weierstrass({ a, b, Fp: Field(p), n, Gx, Gy, h: 1n })\n */\nfunction weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function modN(a) {\n        return (0,_modular_js__WEBPACK_IMPORTED_MODULE_2__.mod)(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return (0,_modular_js__WEBPACK_IMPORTED_MODULE_2__.invert)(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = _utils_js__WEBPACK_IMPORTED_MODULE_0__.concatBytes;\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.abool)('isCompressed', isCompressed);\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = _utils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToNumberBE(tail);\n                if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__.inRange(x, _1n, Fp.ORDER))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y;\n                try {\n                    y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                }\n                catch (sqrtError) {\n                    const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                    throw new Error('Point is not on curve' + suffix);\n                }\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                const cl = compressedLen;\n                const ul = uncompressedLen;\n                throw new Error('invalid Point, expected length of ' + cl + ', or uncompressed ' + ul + ', got ' + len);\n            }\n        },\n    });\n    const numToNByteStr = (num) => _utils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToHex(_utils_js__WEBPACK_IMPORTED_MODULE_0__.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => _utils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ensureBytes)('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ensureBytes)('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            _utils_js__WEBPACK_IMPORTED_MODULE_0__.aInRange('r', this.r, _1n, CURVE_ORDER); // r in [1..N]\n            _utils_js__WEBPACK_IMPORTED_MODULE_0__.aInRange('s', this.s, _1n, CURVE_ORDER); // s in [1..N]\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ensureBytes)('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return _utils_js__WEBPACK_IMPORTED_MODULE_0__.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return _utils_js__WEBPACK_IMPORTED_MODULE_0__.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = (0,_modular_js__WEBPACK_IMPORTED_MODULE_2__.getMinHashLength)(CURVE.n);\n            return (0,_modular_js__WEBPACK_IMPORTED_MODULE_2__.mapHashToField)(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = _utils_js__WEBPACK_IMPORTED_MODULE_0__.isBytes(item);\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // Our custom check \"just in case\"\n            if (bytes.length > 8192)\n                throw new Error('input is too large');\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = _utils_js__WEBPACK_IMPORTED_MODULE_0__.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = _utils_js__WEBPACK_IMPORTED_MODULE_0__.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        _utils_js__WEBPACK_IMPORTED_MODULE_0__.aInRange('num < 2^' + CURVE.nBitLength, num, _0n, ORDER_MASK);\n        // works with order, can have different size than numToField!\n        return _utils_js__WEBPACK_IMPORTED_MODULE_0__.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order,\n    // this will be invalid at least for P521. Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ensureBytes)('msgHash', msgHash);\n        validateSigVerOpts(opts);\n        if (prehash)\n            msgHash = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ensureBytes)('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null && ent !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ensureBytes)('extraEntropy', e)); // check for being bytes\n        }\n        const seed = _utils_js__WEBPACK_IMPORTED_MODULE_0__.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = _utils_js__WEBPACK_IMPORTED_MODULE_0__.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ensureBytes)('msgHash', msgHash);\n        publicKey = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ensureBytes)('publicKey', publicKey);\n        const { lowS, prehash, format } = opts;\n        // Verify opts, deduce signature format\n        validateSigVerOpts(opts);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        if (format !== undefined && format !== 'compact' && format !== 'der')\n            throw new Error('format must be compact or der');\n        const isHex = typeof sg === 'string' || _utils_js__WEBPACK_IMPORTED_MODULE_0__.isBytes(sg);\n        const isObj = !isHex &&\n            !format &&\n            typeof sg === 'object' &&\n            sg !== null &&\n            typeof sg.r === 'bigint' &&\n            typeof sg.s === 'bigint';\n        if (!isHex && !isObj)\n            throw new Error('invalid signature, expected Uint8Array, hex string or Signature instance');\n        let _sig = undefined;\n        let P;\n        try {\n            if (isObj)\n                _sig = new Signature(sg.r, sg.s);\n            if (isHex) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    if (format !== 'compact')\n                        _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                }\n                if (!_sig && format !== 'der')\n                    _sig = Signature.fromCompact(sg);\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            return false;\n        }\n        if (!_sig)\n            return false;\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nfunction SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nfunction mapToCurveSimpleSWU(Fp, opts) {\n    (0,_modular_js__WEBPACK_IMPORTED_MODULE_2__.validateField)(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/weierstrass.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/curves/esm/ed25519.js":
/*!***************************************************!*\
  !*** ./node_modules/@noble/curves/esm/ed25519.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ED25519_TORSION_SUBGROUP: function() { return /* binding */ ED25519_TORSION_SUBGROUP; },\n/* harmony export */   RistrettoPoint: function() { return /* binding */ RistrettoPoint; },\n/* harmony export */   ed25519: function() { return /* binding */ ed25519; },\n/* harmony export */   ed25519ctx: function() { return /* binding */ ed25519ctx; },\n/* harmony export */   ed25519ph: function() { return /* binding */ ed25519ph; },\n/* harmony export */   edwardsToMontgomery: function() { return /* binding */ edwardsToMontgomery; },\n/* harmony export */   edwardsToMontgomeryPriv: function() { return /* binding */ edwardsToMontgomeryPriv; },\n/* harmony export */   edwardsToMontgomeryPub: function() { return /* binding */ edwardsToMontgomeryPub; },\n/* harmony export */   encodeToCurve: function() { return /* binding */ encodeToCurve; },\n/* harmony export */   hashToCurve: function() { return /* binding */ hashToCurve; },\n/* harmony export */   hashToRistretto255: function() { return /* binding */ hashToRistretto255; },\n/* harmony export */   hash_to_ristretto255: function() { return /* binding */ hash_to_ristretto255; },\n/* harmony export */   x25519: function() { return /* binding */ x25519; }\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/sha512 */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/sha512.js\");\n/* harmony import */ var _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/hashes/utils */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/utils.js\");\n/* harmony import */ var _abstract_curve_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./abstract/curve.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/curve.js\");\n/* harmony import */ var _abstract_edwards_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./abstract/edwards.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/edwards.js\");\n/* harmony import */ var _abstract_hash_to_curve_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./abstract/hash-to-curve.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/hash-to-curve.js\");\n/* harmony import */ var _abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract/modular.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/modular.js\");\n/* harmony import */ var _abstract_montgomery_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./abstract/montgomery.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/montgomery.js\");\n/* harmony import */ var _abstract_utils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./abstract/utils.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/utils.js\");\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n\n\n\n\n\n\n\nconst ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = /* @__PURE__ */ BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _5n = BigInt(5), _8n = BigInt(8);\nfunction ed25519_pow_2_252_3(x) {\n    // prettier-ignore\n    const _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\n    const P = ED25519_P;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.pow2)(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.pow2)(b4, _1n, P) * x) % P; // x^31\n    const b10 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.pow2)(b5, _5n, P) * b5) % P;\n    const b20 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.pow2)(b10, _10n, P) * b10) % P;\n    const b40 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.pow2)(b20, _20n, P) * b20) % P;\n    const b80 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.pow2)(b40, _40n, P) * b40) % P;\n    const b160 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.pow2)(b80, _80n, P) * b80) % P;\n    const b240 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.pow2)(b160, _80n, P) * b80) % P;\n    const b250 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.pow2)(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.pow2)(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ED25519_P;\n    const v3 = (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.mod)(v * v * v, P); // v³\n    const v7 = (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.mod)(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.mod)(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.mod)(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.mod)(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.mod)(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.mod)(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.isNegativeLE)(x, P))\n        x = (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.mod)(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\n// Just in case\nconst ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\nconst Fp = /* @__PURE__ */ (() => (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.Field)(ED25519_P, undefined, true))();\nconst ed25519Defaults = /* @__PURE__ */ (() => ({\n    // Param: a\n    a: BigInt(-1), // Fp.create(-1) is proper; our way still works and is faster\n    // d is equal to -121665/121666 over finite field.\n    // Negative number is P - number, and division is invert(number, P)\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    // Finite field 𝔽p over which we'll do calculations; 2n**255n - 19n\n    Fp,\n    // Subgroup order: how many points curve has\n    // 2n**252n + 27742317777372353535851937790883648493n;\n    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n    // Cofactor\n    h: _8n,\n    // Base point (x, y) aka generator point\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n    hash: _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_1__.sha512,\n    randomBytes: _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_2__.randomBytes,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n}))();\n/**\n * ed25519 curve with EdDSA signatures.\n * @example\n * import { ed25519 } from '@noble/curves/ed25519';\n * const priv = ed25519.utils.randomPrivateKey();\n * const pub = ed25519.getPublicKey(priv);\n * const msg = new TextEncoder().encode('hello');\n * const sig = ed25519.sign(msg, priv);\n * ed25519.verify(sig, msg, pub); // Default mode: follows ZIP215\n * ed25519.verify(sig, msg, pub, { zip215: false }); // RFC8032 / FIPS 186-5\n */\nconst ed25519 = /* @__PURE__ */ (() => (0,_abstract_edwards_js__WEBPACK_IMPORTED_MODULE_3__.twistedEdwards)(ed25519Defaults))();\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_2__.concatBytes)((0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_2__.utf8ToBytes)('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nconst ed25519ctx = /* @__PURE__ */ (() => (0,_abstract_edwards_js__WEBPACK_IMPORTED_MODULE_3__.twistedEdwards)({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n}))();\nconst ed25519ph = /* @__PURE__ */ (() => (0,_abstract_edwards_js__WEBPACK_IMPORTED_MODULE_3__.twistedEdwards)(Object.assign({}, ed25519Defaults, {\n    domain: ed25519_domain,\n    prehash: _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_1__.sha512,\n})))();\n/**\n * ECDH using curve25519 aka x25519.\n * @example\n * import { x25519 } from '@noble/curves/ed25519';\n * const priv = 'a546e36bf0527c9d3b16154b82465edd62144c0ac1fc5a18506a2244ba449ac4';\n * const pub = 'e6db6867583030db3594c1a424b15f7c726624ec26b3353b10a903a6d0ab1c4c';\n * x25519.getSharedSecret(priv, pub) === x25519.scalarMult(priv, pub); // aliases\n * x25519.getPublicKey(priv) === x25519.scalarMultBase(priv);\n * x25519.getPublicKey(x25519.utils.randomPrivateKey());\n */\nconst x25519 = /* @__PURE__ */ (() => (0,_abstract_montgomery_js__WEBPACK_IMPORTED_MODULE_4__.montgomery)({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255, // n is 253 bits\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x) => {\n        const P = ED25519_P;\n        // x^(p-2) aka x^(2^255-21)\n        const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n        return (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.mod)((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.pow2)(pow_p_5_8, _3n, P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes: _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_2__.randomBytes,\n}))();\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nfunction edwardsToMontgomeryPub(edwardsPub) {\n    const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n    const _1n = BigInt(1);\n    return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nconst edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nfunction edwardsToMontgomeryPriv(edwardsPriv) {\n    const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n    return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = /* @__PURE__ */ (() => (Fp.ORDER + _3n) / _8n)(); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = /* @__PURE__ */ (() => Fp.pow(_2n, ELL2_C1))(); // 2. c2 = 2^c1\nconst ELL2_C3 = /* @__PURE__ */ (() => Fp.sqrt(Fp.neg(Fp.ONE)))(); // 3. c3 = sqrt(-1)\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    const ELL2_C4 = (Fp.ORDER - _5n) / _8n; // 4. c4 = (q - 5) / 8       # Integer arithmetic\n    const ELL2_J = BigInt(486662);\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = /* @__PURE__ */ (() => (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.FpSqrtEven)(Fp, Fp.neg(BigInt(486664))))(); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const inv = Fp.invertBatch([xd, yd]); // batch division\n    return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\nconst htf = /* @__PURE__ */ (() => (0,_abstract_hash_to_curve_js__WEBPACK_IMPORTED_MODULE_5__.createHasher)(ed25519.ExtendedPoint, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_1__.sha512,\n}))();\nconst hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nconst encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistPoint))\n        throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = /* @__PURE__ */ BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = /* @__PURE__ */ BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = /* @__PURE__ */ BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = /* @__PURE__ */ BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = /* @__PURE__ */ BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => ed25519.CURVE.Fp.create((0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_6__.bytesToNumberLE)(bytes) & MAX_255B);\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!(0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.isNegativeLE)(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint {\n    // Private property to discourage combining ExtendedPoint + RistrettoPoint\n    // Always use Ristretto encoding/decoding instead.\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static fromAffine(ap) {\n        return new RistPoint(ed25519.ExtendedPoint.fromAffine(ap));\n    }\n    /**\n     * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n     * The hash-to-group operation applies Elligator twice and adds the results.\n     * **Note:** this is one-way map, there is no conversion from point to hash.\n     * https://ristretto.group/formulas/elligator.html\n     * @param hex 64-byte output of a hash function\n     */\n    static hashToCurve(hex) {\n        hex = (0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_6__.ensureBytes)('ristrettoHash', hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new RistPoint(R1.add(R2));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * https://ristretto.group/formulas/decoding.html\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        hex = (0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_6__.ensureBytes)('ristrettoHex', hex, 32);\n        const { a, d } = ed25519.CURVE;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!(0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_6__.equalBytes)((0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_6__.numberToBytesLE)(s, 32), hex) || (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.isNegativeLE)(s, P))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.isNegativeLE)(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.isNegativeLE)(t, P) || y === _0n)\n            throw new Error(emsg);\n        return new RistPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n    }\n    static msm(points, scalars) {\n        const Fn = (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.Field)(ed25519.CURVE.n, ed25519.CURVE.nBitLength);\n        return (0,_abstract_curve_js__WEBPACK_IMPORTED_MODULE_7__.pippenger)(RistPoint, Fn, points, scalars);\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * https://ristretto.group/formulas/encoding.html\n     */\n    toRawBytes() {\n        let { ex: x, ey: y, ez: z, et: t } = this.ep;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const u1 = mod(mod(z + y) * mod(z - y)); // 1\n        const u2 = mod(x * y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * t); // 6\n        let D; // 7\n        if ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.isNegativeLE)(t * zInv, P)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.isNegativeLE)(x * zInv, P))\n            y = mod(-y); // 9\n        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n        if ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.isNegativeLE)(s, P))\n            s = mod(-s);\n        return (0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_6__.numberToBytesLE)(s, 32); // 11\n    }\n    toHex() {\n        return (0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_6__.bytesToHex)(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    // Compare one point to another.\n    equals(other) {\n        assertRstPoint(other);\n        const { ex: X1, ey: Y1 } = this.ep;\n        const { ex: X2, ey: Y2 } = other.ep;\n        const mod = ed25519.CURVE.Fp.create;\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistPoint(this.ep.multiplyUnsafe(scalar));\n    }\n    double() {\n        return new RistPoint(this.ep.double());\n    }\n    negate() {\n        return new RistPoint(this.ep.negate());\n    }\n}\nconst RistrettoPoint = /* @__PURE__ */ (() => {\n    if (!RistPoint.BASE)\n        RistPoint.BASE = new RistPoint(ed25519.ExtendedPoint.BASE);\n    if (!RistPoint.ZERO)\n        RistPoint.ZERO = new RistPoint(ed25519.ExtendedPoint.ZERO);\n    return RistPoint;\n})();\n// Hashing to ristretto255. https://www.rfc-editor.org/rfc/rfc9380#appendix-B\nconst hashToRistretto255 = (msg, options) => {\n    const d = options.DST;\n    const DST = typeof d === 'string' ? (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_2__.utf8ToBytes)(d) : d;\n    const uniform_bytes = (0,_abstract_hash_to_curve_js__WEBPACK_IMPORTED_MODULE_5__.expand_message_xmd)(msg, DST, 64, _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_1__.sha512);\n    const P = RistPoint.hashToCurve(uniform_bytes);\n    return P;\n};\nconst hash_to_ristretto255 = hashToRistretto255; // legacy\n//# sourceMappingURL=ed25519.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/curves/esm/ed25519.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/curves/esm/secp256k1.js":
/*!*****************************************************!*\
  !*** ./node_modules/@noble/curves/esm/secp256k1.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeToCurve: function() { return /* binding */ encodeToCurve; },\n/* harmony export */   hashToCurve: function() { return /* binding */ hashToCurve; },\n/* harmony export */   schnorr: function() { return /* binding */ schnorr; },\n/* harmony export */   secp256k1: function() { return /* binding */ secp256k1; }\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @noble/hashes/utils */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/utils.js\");\n/* harmony import */ var _shortw_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_shortw_utils.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/_shortw_utils.js\");\n/* harmony import */ var _abstract_hash_to_curve_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./abstract/hash-to-curve.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/hash-to-curve.js\");\n/* harmony import */ var _abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract/modular.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/modular.js\");\n/* harmony import */ var _abstract_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./abstract/utils.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/utils.js\");\n/* harmony import */ var _abstract_weierstrass_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./abstract/weierstrass.js */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/abstract/weierstrass.js\");\n/**\n * NIST secp256k1. See [pdf](https://www.secg.org/sec2-v2.pdf).\n *\n * Seems to be rigid (not backdoored)\n * [as per discussion](https://bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975).\n *\n * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n * [See explanation](https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066).\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n\n\n\n\n\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.pow2)(b3, _3n, P) * b3) % P;\n    const b9 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.pow2)(b6, _3n, P) * b3) % P;\n    const b11 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.pow2)(b9, _2n, P) * b2) % P;\n    const b22 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.pow2)(b11, _11n, P) * b11) % P;\n    const b44 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.pow2)(b22, _22n, P) * b22) % P;\n    const b88 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.pow2)(b44, _44n, P) * b44) % P;\n    const b176 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.pow2)(b88, _88n, P) * b88) % P;\n    const b220 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.pow2)(b176, _44n, P) * b44) % P;\n    const b223 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.pow2)(b220, _3n, P) * b3) % P;\n    const t1 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.pow2)(b223, _23n, P) * b22) % P;\n    const t2 = ((0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.pow2)(t1, _6n, P) * b2) % P;\n    const root = (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.pow2)(t2, _2n, P);\n    if (!Fpk1.eql(Fpk1.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fpk1 = (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.Field)(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n/**\n * secp256k1 short weierstrass curve and ECDSA signatures over it.\n *\n * @example\n * import { secp256k1 } from '@noble/curves/secp256k1';\n *\n * const priv = secp256k1.utils.randomPrivateKey();\n * const pub = secp256k1.getPublicKey(priv);\n * const msg = new Uint8Array(32).fill(1); // message hash (not message) in ecdsa\n * const sig = secp256k1.sign(msg, priv); // `{prehash: true}` option is available\n * const isValid = secp256k1.verify(sig, msg, pub) === true;\n */\nconst secp256k1 = (0,_shortw_utils_js__WEBPACK_IMPORTED_MODULE_1__.createCurve)({\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7),\n    Fp: Fpk1, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    endo: {\n        // Endomorphism, see above\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.mod)(k - c1 * a1 - c2 * a2, n);\n            let k2 = (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.mod)(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256)(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = (0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_3__.concatBytes)(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256)((0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_3__.concatBytes)(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => (0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_3__.numberToBytesBE)(n, 32);\nconst modP = (x) => (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.mod)(x, secp256k1P);\nconst modN = (x) => (0,_abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.mod)(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    (0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_3__.aInRange)('x', x, _1n, secp256k1P); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\nconst num = _abstract_utils_js__WEBPACK_IMPORTED_MODULE_3__.bytesToNumberBE;\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(num(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_4__.randomBytes)(32)) {\n    const m = (0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_3__.ensureBytes)('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = (0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_3__.ensureBytes)('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ num(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(num(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = (0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_3__.ensureBytes)('signature', signature, 64);\n    const m = (0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_3__.ensureBytes)('message', message);\n    const pub = (0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_3__.ensureBytes)('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(num(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = num(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!(0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_3__.inRange)(r, _1n, secp256k1P))\n            return false;\n        const s = num(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!(0,_abstract_utils_js__WEBPACK_IMPORTED_MODULE_3__.inRange)(s, _1n, secp256k1N))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\n/**\n * Schnorr signatures over secp256k1.\n * https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n * @example\n * import { schnorr } from '@noble/curves/secp256k1';\n * const priv = schnorr.utils.randomPrivateKey();\n * const pub = schnorr.getPublicKey(priv);\n * const msg = new TextEncoder().encode('hello');\n * const sig = schnorr.sign(msg, priv);\n * const isValid = schnorr.verify(sig, msg, pub);\n */\nconst schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE: _abstract_utils_js__WEBPACK_IMPORTED_MODULE_3__.numberToBytesBE,\n        bytesToNumberBE: _abstract_utils_js__WEBPACK_IMPORTED_MODULE_3__.bytesToNumberBE,\n        taggedHash,\n        mod: _abstract_modular_js__WEBPACK_IMPORTED_MODULE_0__.mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => (0,_abstract_hash_to_curve_js__WEBPACK_IMPORTED_MODULE_5__.isogenyMap)(Fpk1, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => (0,_abstract_weierstrass_js__WEBPACK_IMPORTED_MODULE_6__.mapToCurveSimpleSWU)(Fpk1, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fpk1.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => (0,_abstract_hash_to_curve_js__WEBPACK_IMPORTED_MODULE_5__.createHasher)(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fpk1.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fpk1.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256,\n}))();\n/** secp256k1 hash-to-curve from [RFC 9380](https://www.rfc-editor.org/rfc/rfc9380). */\nconst hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\n/** secp256k1 encode-to-curve from [RFC 9380](https://www.rfc-editor.org/rfc/rfc9380). */\nconst encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/curves/esm/secp256k1.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/esm/_assert.js":
/*!***************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/_assert.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   abytes: function() { return /* binding */ abytes; },\n/* harmony export */   aexists: function() { return /* binding */ aexists; },\n/* harmony export */   ahash: function() { return /* binding */ ahash; },\n/* harmony export */   anumber: function() { return /* binding */ anumber; },\n/* harmony export */   aoutput: function() { return /* binding */ aoutput; }\n/* harmony export */ });\n/**\n * Internal assertion helpers.\n * @module\n */\n/** Asserts something is positive integer. */\nfunction anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n/** Is number an Uint8Array? Copied from utils for perf. */\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is Uint8Array. */\nfunction abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nfunction ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nfunction aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nfunction aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\n\n//# sourceMappingURL=_assert.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9fYXNzZXJ0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ29EO0FBQ3BEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9fYXNzZXJ0LmpzPzcwMWYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBJbnRlcm5hbCBhc3NlcnRpb24gaGVscGVycy5cbiAqIEBtb2R1bGVcbiAqL1xuLyoqIEFzc2VydHMgc29tZXRoaW5nIGlzIHBvc2l0aXZlIGludGVnZXIuICovXG5mdW5jdGlvbiBhbnVtYmVyKG4pIHtcbiAgICBpZiAoIU51bWJlci5pc1NhZmVJbnRlZ2VyKG4pIHx8IG4gPCAwKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3Bvc2l0aXZlIGludGVnZXIgZXhwZWN0ZWQsIGdvdCAnICsgbik7XG59XG4vKiogSXMgbnVtYmVyIGFuIFVpbnQ4QXJyYXk/IENvcGllZCBmcm9tIHV0aWxzIGZvciBwZXJmLiAqL1xuZnVuY3Rpb24gaXNCeXRlcyhhKSB7XG4gICAgcmV0dXJuIGEgaW5zdGFuY2VvZiBVaW50OEFycmF5IHx8IChBcnJheUJ1ZmZlci5pc1ZpZXcoYSkgJiYgYS5jb25zdHJ1Y3Rvci5uYW1lID09PSAnVWludDhBcnJheScpO1xufVxuLyoqIEFzc2VydHMgc29tZXRoaW5nIGlzIFVpbnQ4QXJyYXkuICovXG5mdW5jdGlvbiBhYnl0ZXMoYiwgLi4ubGVuZ3Rocykge1xuICAgIGlmICghaXNCeXRlcyhiKSlcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVaW50OEFycmF5IGV4cGVjdGVkJyk7XG4gICAgaWYgKGxlbmd0aHMubGVuZ3RoID4gMCAmJiAhbGVuZ3Rocy5pbmNsdWRlcyhiLmxlbmd0aCkpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVWludDhBcnJheSBleHBlY3RlZCBvZiBsZW5ndGggJyArIGxlbmd0aHMgKyAnLCBnb3QgbGVuZ3RoPScgKyBiLmxlbmd0aCk7XG59XG4vKiogQXNzZXJ0cyBzb21ldGhpbmcgaXMgaGFzaCAqL1xuZnVuY3Rpb24gYWhhc2goaCkge1xuICAgIGlmICh0eXBlb2YgaCAhPT0gJ2Z1bmN0aW9uJyB8fCB0eXBlb2YgaC5jcmVhdGUgIT09ICdmdW5jdGlvbicpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSGFzaCBzaG91bGQgYmUgd3JhcHBlZCBieSB1dGlscy53cmFwQ29uc3RydWN0b3InKTtcbiAgICBhbnVtYmVyKGgub3V0cHV0TGVuKTtcbiAgICBhbnVtYmVyKGguYmxvY2tMZW4pO1xufVxuLyoqIEFzc2VydHMgYSBoYXNoIGluc3RhbmNlIGhhcyBub3QgYmVlbiBkZXN0cm95ZWQgLyBmaW5pc2hlZCAqL1xuZnVuY3Rpb24gYWV4aXN0cyhpbnN0YW5jZSwgY2hlY2tGaW5pc2hlZCA9IHRydWUpIHtcbiAgICBpZiAoaW5zdGFuY2UuZGVzdHJveWVkKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0hhc2ggaW5zdGFuY2UgaGFzIGJlZW4gZGVzdHJveWVkJyk7XG4gICAgaWYgKGNoZWNrRmluaXNoZWQgJiYgaW5zdGFuY2UuZmluaXNoZWQpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSGFzaCNkaWdlc3QoKSBoYXMgYWxyZWFkeSBiZWVuIGNhbGxlZCcpO1xufVxuLyoqIEFzc2VydHMgb3V0cHV0IGlzIHByb3Blcmx5LXNpemVkIGJ5dGUgYXJyYXkgKi9cbmZ1bmN0aW9uIGFvdXRwdXQob3V0LCBpbnN0YW5jZSkge1xuICAgIGFieXRlcyhvdXQpO1xuICAgIGNvbnN0IG1pbiA9IGluc3RhbmNlLm91dHB1dExlbjtcbiAgICBpZiAob3V0Lmxlbmd0aCA8IG1pbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2RpZ2VzdEludG8oKSBleHBlY3RzIG91dHB1dCBidWZmZXIgb2YgbGVuZ3RoIGF0IGxlYXN0ICcgKyBtaW4pO1xuICAgIH1cbn1cbmV4cG9ydCB7IGFudW1iZXIsIGFieXRlcywgYWhhc2gsIGFleGlzdHMsIGFvdXRwdXQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPV9hc3NlcnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/esm/_assert.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/esm/_blake.js":
/*!**************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/_blake.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BLAKE: function() { return /* binding */ BLAKE; },\n/* harmony export */   SIGMA: function() { return /* binding */ SIGMA; }\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_assert.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/utils.js\");\n/**\n * Internal helpers for blake hash.\n * @module\n */\n\n\n/**\n * Internal blake variable.\n * For BLAKE2b, the two extra permutations for rounds 10 and 11 are SIGMA[10..11] = SIGMA[0..1].\n */\n// prettier-ignore\nconst SIGMA = /* @__PURE__ */ new Uint8Array([\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n    11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n    7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n    9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n    2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n    12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n    13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n    6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n    10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n    // Blake1, unused in others\n    11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n    7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n    9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n    2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n]);\n/** Class, from which others are subclassed. */\nclass BLAKE extends _utils_js__WEBPACK_IMPORTED_MODULE_0__.Hash {\n    constructor(blockLen, outputLen, opts = {}, keyLen, saltLen, persLen) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.length = 0;\n        this.pos = 0;\n        this.finished = false;\n        this.destroyed = false;\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.anumber)(blockLen);\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.anumber)(outputLen);\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.anumber)(keyLen);\n        if (outputLen < 0 || outputLen > keyLen)\n            throw new Error('outputLen bigger than keyLen');\n        if (opts.key !== undefined && (opts.key.length < 1 || opts.key.length > keyLen))\n            throw new Error('key length must be undefined or 1..' + keyLen);\n        if (opts.salt !== undefined && opts.salt.length !== saltLen)\n            throw new Error('salt must be undefined or ' + saltLen);\n        if (opts.personalization !== undefined && opts.personalization.length !== persLen)\n            throw new Error('personalization must be undefined or ' + persLen);\n        this.buffer = new Uint8Array(blockLen);\n        this.buffer32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(this.buffer);\n    }\n    update(data) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.aexists)(this);\n        // Main difference with other hashes: there is flag for last block,\n        // so we cannot process current block before we know that there\n        // is the next one. This significantly complicates logic and reduces ability\n        // to do zero-copy processing\n        const { blockLen, buffer, buffer32 } = this;\n        data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(data);\n        const len = data.length;\n        const offset = data.byteOffset;\n        const buf = data.buffer;\n        for (let pos = 0; pos < len;) {\n            // If buffer is full and we still have input (don't process last block, same as blake2s)\n            if (this.pos === blockLen) {\n                if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__.isLE)\n                    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.byteSwap32)(buffer32);\n                this.compress(buffer32, 0, false);\n                if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__.isLE)\n                    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.byteSwap32)(buffer32);\n                this.pos = 0;\n            }\n            const take = Math.min(blockLen - this.pos, len - pos);\n            const dataOffset = offset + pos;\n            // full block && aligned to 4 bytes && not last in input\n            if (take === blockLen && !(dataOffset % 4) && pos + take < len) {\n                const data32 = new Uint32Array(buf, dataOffset, Math.floor((len - pos) / 4));\n                if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__.isLE)\n                    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.byteSwap32)(data32);\n                for (let pos32 = 0; pos + blockLen < len; pos32 += buffer32.length, pos += blockLen) {\n                    this.length += blockLen;\n                    this.compress(data32, pos32, false);\n                }\n                if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__.isLE)\n                    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.byteSwap32)(data32);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            this.length += take;\n            pos += take;\n        }\n        return this;\n    }\n    digestInto(out) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.aexists)(this);\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.aoutput)(out, this);\n        const { pos, buffer32 } = this;\n        this.finished = true;\n        // Padding\n        this.buffer.subarray(pos).fill(0);\n        if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__.isLE)\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.byteSwap32)(buffer32);\n        this.compress(buffer32, 0, true);\n        if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__.isLE)\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.byteSwap32)(buffer32);\n        const out32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(out);\n        this.get().forEach((v, i) => (out32[i] = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.byteSwapIfBE)(v)));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        const { buffer, length, finished, destroyed, outputLen, pos } = this;\n        to || (to = new this.constructor({ dkLen: outputLen }));\n        to.set(...this.get());\n        to.length = length;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.outputLen = outputLen;\n        to.buffer.set(buffer);\n        to.pos = pos;\n        return to;\n    }\n}\n//# sourceMappingURL=_blake.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/esm/_blake.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/esm/_md.js":
/*!***********************************************!*\
  !*** ./node_modules/@noble/hashes/esm/_md.js ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Chi: function() { return /* binding */ Chi; },\n/* harmony export */   HashMD: function() { return /* binding */ HashMD; },\n/* harmony export */   Maj: function() { return /* binding */ Maj; },\n/* harmony export */   setBigUint64: function() { return /* binding */ setBigUint64; }\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_assert.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/utils.js\");\n/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\n\n\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/** Choice: a ? b : c */\nfunction Chi(a, b, c) {\n    return (a & b) ^ (~a & c);\n}\n/** Majority function, true if any two inputs is true. */\nfunction Maj(a, b, c) {\n    return (a & b) ^ (a & c) ^ (b & c);\n}\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nclass HashMD extends _utils_js__WEBPACK_IMPORTED_MODULE_0__.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createView)(this.buffer);\n    }\n    update(data) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.aexists)(this);\n        const { view, buffer, blockLen } = this;\n        data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.aexists)(this);\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.aoutput)(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createView)(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/esm/_md.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/esm/_u64.js":
/*!************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/_u64.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: function() { return /* binding */ add; },\n/* harmony export */   add3H: function() { return /* binding */ add3H; },\n/* harmony export */   add3L: function() { return /* binding */ add3L; },\n/* harmony export */   add4H: function() { return /* binding */ add4H; },\n/* harmony export */   add4L: function() { return /* binding */ add4L; },\n/* harmony export */   add5H: function() { return /* binding */ add5H; },\n/* harmony export */   add5L: function() { return /* binding */ add5L; },\n/* harmony export */   fromBig: function() { return /* binding */ fromBig; },\n/* harmony export */   rotlBH: function() { return /* binding */ rotlBH; },\n/* harmony export */   rotlBL: function() { return /* binding */ rotlBL; },\n/* harmony export */   rotlSH: function() { return /* binding */ rotlSH; },\n/* harmony export */   rotlSL: function() { return /* binding */ rotlSL; },\n/* harmony export */   rotr32H: function() { return /* binding */ rotr32H; },\n/* harmony export */   rotr32L: function() { return /* binding */ rotr32L; },\n/* harmony export */   rotrBH: function() { return /* binding */ rotrBH; },\n/* harmony export */   rotrBL: function() { return /* binding */ rotrBL; },\n/* harmony export */   rotrSH: function() { return /* binding */ rotrSH; },\n/* harmony export */   rotrSL: function() { return /* binding */ rotrSL; },\n/* harmony export */   shrSH: function() { return /* binding */ shrSH; },\n/* harmony export */   shrSL: function() { return /* binding */ shrSL; },\n/* harmony export */   split: function() { return /* binding */ split; },\n/* harmony export */   toBig: function() { return /* binding */ toBig; }\n/* harmony export */ });\n/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\n\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (u64);\n//# sourceMappingURL=_u64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9fdTY0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGdCQUFnQjtBQUNwQyxnQkFBZ0IsT0FBTztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2lMO0FBQ2pMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtEQUFlLEdBQUcsRUFBQztBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vX3U2NC5qcz8xNmJlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogSW50ZXJuYWwgaGVscGVycyBmb3IgdTY0LiBCaWdVaW50NjRBcnJheSBpcyB0b28gc2xvdyBhcyBwZXIgMjAyNSwgc28gd2UgaW1wbGVtZW50IGl0IHVzaW5nIFVpbnQzMkFycmF5LlxuICogQHRvZG8gcmUtY2hlY2sgaHR0cHM6Ly9pc3N1ZXMuY2hyb21pdW0ub3JnL2lzc3Vlcy80MjIxMjU4OFxuICogQG1vZHVsZVxuICovXG5jb25zdCBVMzJfTUFTSzY0ID0gLyogQF9fUFVSRV9fICovIEJpZ0ludCgyICoqIDMyIC0gMSk7XG5jb25zdCBfMzJuID0gLyogQF9fUFVSRV9fICovIEJpZ0ludCgzMik7XG5mdW5jdGlvbiBmcm9tQmlnKG4sIGxlID0gZmFsc2UpIHtcbiAgICBpZiAobGUpXG4gICAgICAgIHJldHVybiB7IGg6IE51bWJlcihuICYgVTMyX01BU0s2NCksIGw6IE51bWJlcigobiA+PiBfMzJuKSAmIFUzMl9NQVNLNjQpIH07XG4gICAgcmV0dXJuIHsgaDogTnVtYmVyKChuID4+IF8zMm4pICYgVTMyX01BU0s2NCkgfCAwLCBsOiBOdW1iZXIobiAmIFUzMl9NQVNLNjQpIHwgMCB9O1xufVxuZnVuY3Rpb24gc3BsaXQobHN0LCBsZSA9IGZhbHNlKSB7XG4gICAgbGV0IEFoID0gbmV3IFVpbnQzMkFycmF5KGxzdC5sZW5ndGgpO1xuICAgIGxldCBBbCA9IG5ldyBVaW50MzJBcnJheShsc3QubGVuZ3RoKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCB7IGgsIGwgfSA9IGZyb21CaWcobHN0W2ldLCBsZSk7XG4gICAgICAgIFtBaFtpXSwgQWxbaV1dID0gW2gsIGxdO1xuICAgIH1cbiAgICByZXR1cm4gW0FoLCBBbF07XG59XG5jb25zdCB0b0JpZyA9IChoLCBsKSA9PiAoQmlnSW50KGggPj4+IDApIDw8IF8zMm4pIHwgQmlnSW50KGwgPj4+IDApO1xuLy8gZm9yIFNoaWZ0IGluIFswLCAzMilcbmNvbnN0IHNoclNIID0gKGgsIF9sLCBzKSA9PiBoID4+PiBzO1xuY29uc3Qgc2hyU0wgPSAoaCwgbCwgcykgPT4gKGggPDwgKDMyIC0gcykpIHwgKGwgPj4+IHMpO1xuLy8gUmlnaHQgcm90YXRlIGZvciBTaGlmdCBpbiBbMSwgMzIpXG5jb25zdCByb3RyU0ggPSAoaCwgbCwgcykgPT4gKGggPj4+IHMpIHwgKGwgPDwgKDMyIC0gcykpO1xuY29uc3Qgcm90clNMID0gKGgsIGwsIHMpID0+IChoIDw8ICgzMiAtIHMpKSB8IChsID4+PiBzKTtcbi8vIFJpZ2h0IHJvdGF0ZSBmb3IgU2hpZnQgaW4gKDMyLCA2NCksIE5PVEU6IDMyIGlzIHNwZWNpYWwgY2FzZS5cbmNvbnN0IHJvdHJCSCA9IChoLCBsLCBzKSA9PiAoaCA8PCAoNjQgLSBzKSkgfCAobCA+Pj4gKHMgLSAzMikpO1xuY29uc3Qgcm90ckJMID0gKGgsIGwsIHMpID0+IChoID4+PiAocyAtIDMyKSkgfCAobCA8PCAoNjQgLSBzKSk7XG4vLyBSaWdodCByb3RhdGUgZm9yIHNoaWZ0PT09MzIgKGp1c3Qgc3dhcHMgbCZoKVxuY29uc3Qgcm90cjMySCA9IChfaCwgbCkgPT4gbDtcbmNvbnN0IHJvdHIzMkwgPSAoaCwgX2wpID0+IGg7XG4vLyBMZWZ0IHJvdGF0ZSBmb3IgU2hpZnQgaW4gWzEsIDMyKVxuY29uc3Qgcm90bFNIID0gKGgsIGwsIHMpID0+IChoIDw8IHMpIHwgKGwgPj4+ICgzMiAtIHMpKTtcbmNvbnN0IHJvdGxTTCA9IChoLCBsLCBzKSA9PiAobCA8PCBzKSB8IChoID4+PiAoMzIgLSBzKSk7XG4vLyBMZWZ0IHJvdGF0ZSBmb3IgU2hpZnQgaW4gKDMyLCA2NCksIE5PVEU6IDMyIGlzIHNwZWNpYWwgY2FzZS5cbmNvbnN0IHJvdGxCSCA9IChoLCBsLCBzKSA9PiAobCA8PCAocyAtIDMyKSkgfCAoaCA+Pj4gKDY0IC0gcykpO1xuY29uc3Qgcm90bEJMID0gKGgsIGwsIHMpID0+IChoIDw8IChzIC0gMzIpKSB8IChsID4+PiAoNjQgLSBzKSk7XG4vLyBKUyB1c2VzIDMyLWJpdCBzaWduZWQgaW50ZWdlcnMgZm9yIGJpdHdpc2Ugb3BlcmF0aW9ucyB3aGljaCBtZWFucyB3ZSBjYW5ub3Rcbi8vIHNpbXBsZSB0YWtlIGNhcnJ5IG91dCBvZiBsb3cgYml0IHN1bSBieSBzaGlmdCwgd2UgbmVlZCB0byB1c2UgZGl2aXNpb24uXG5mdW5jdGlvbiBhZGQoQWgsIEFsLCBCaCwgQmwpIHtcbiAgICBjb25zdCBsID0gKEFsID4+PiAwKSArIChCbCA+Pj4gMCk7XG4gICAgcmV0dXJuIHsgaDogKEFoICsgQmggKyAoKGwgLyAyICoqIDMyKSB8IDApKSB8IDAsIGw6IGwgfCAwIH07XG59XG4vLyBBZGRpdGlvbiB3aXRoIG1vcmUgdGhhbiAyIGVsZW1lbnRzXG5jb25zdCBhZGQzTCA9IChBbCwgQmwsIENsKSA9PiAoQWwgPj4+IDApICsgKEJsID4+PiAwKSArIChDbCA+Pj4gMCk7XG5jb25zdCBhZGQzSCA9IChsb3csIEFoLCBCaCwgQ2gpID0+IChBaCArIEJoICsgQ2ggKyAoKGxvdyAvIDIgKiogMzIpIHwgMCkpIHwgMDtcbmNvbnN0IGFkZDRMID0gKEFsLCBCbCwgQ2wsIERsKSA9PiAoQWwgPj4+IDApICsgKEJsID4+PiAwKSArIChDbCA+Pj4gMCkgKyAoRGwgPj4+IDApO1xuY29uc3QgYWRkNEggPSAobG93LCBBaCwgQmgsIENoLCBEaCkgPT4gKEFoICsgQmggKyBDaCArIERoICsgKChsb3cgLyAyICoqIDMyKSB8IDApKSB8IDA7XG5jb25zdCBhZGQ1TCA9IChBbCwgQmwsIENsLCBEbCwgRWwpID0+IChBbCA+Pj4gMCkgKyAoQmwgPj4+IDApICsgKENsID4+PiAwKSArIChEbCA+Pj4gMCkgKyAoRWwgPj4+IDApO1xuY29uc3QgYWRkNUggPSAobG93LCBBaCwgQmgsIENoLCBEaCwgRWgpID0+IChBaCArIEJoICsgQ2ggKyBEaCArIEVoICsgKChsb3cgLyAyICoqIDMyKSB8IDApKSB8IDA7XG4vLyBwcmV0dGllci1pZ25vcmVcbmV4cG9ydCB7IGZyb21CaWcsIHNwbGl0LCB0b0JpZywgc2hyU0gsIHNoclNMLCByb3RyU0gsIHJvdHJTTCwgcm90ckJILCByb3RyQkwsIHJvdHIzMkgsIHJvdHIzMkwsIHJvdGxTSCwgcm90bFNMLCByb3RsQkgsIHJvdGxCTCwgYWRkLCBhZGQzTCwgYWRkM0gsIGFkZDRMLCBhZGQ0SCwgYWRkNUgsIGFkZDVMLCB9O1xuLy8gcHJldHRpZXItaWdub3JlXG5jb25zdCB1NjQgPSB7XG4gICAgZnJvbUJpZywgc3BsaXQsIHRvQmlnLFxuICAgIHNoclNILCBzaHJTTCxcbiAgICByb3RyU0gsIHJvdHJTTCwgcm90ckJILCByb3RyQkwsXG4gICAgcm90cjMySCwgcm90cjMyTCxcbiAgICByb3RsU0gsIHJvdGxTTCwgcm90bEJILCByb3RsQkwsXG4gICAgYWRkLCBhZGQzTCwgYWRkM0gsIGFkZDRMLCBhZGQ0SCwgYWRkNUgsIGFkZDVMLFxufTtcbmV4cG9ydCBkZWZhdWx0IHU2NDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPV91NjQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/esm/_u64.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/esm/blake2b.js":
/*!***************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/blake2b.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BLAKE2b: function() { return /* binding */ BLAKE2b; },\n/* harmony export */   blake2b: function() { return /* binding */ blake2b; }\n/* harmony export */ });\n/* harmony import */ var _blake_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_blake.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/_blake.js\");\n/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_u64.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/_u64.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/utils.js\");\n/**\n * Blake2b hash function. Focuses on 64-bit platforms, but in JS speed different from Blake2s is negligible.\n * @module\n */\n\n\n\n// Same as SHA-512 but LE\n// prettier-ignore\nconst B2B_IV = /* @__PURE__ */ new Uint32Array([\n    0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372, 0x5f1d36f1, 0xa54ff53a,\n    0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c, 0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19\n]);\n// Temporary buffer\nconst BBUF = /* @__PURE__ */ new Uint32Array(32);\n// Mixing function G splitted in two halfs\nfunction G1b(a, b, c, d, msg, x) {\n    // NOTE: V is LE here\n    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n    let Al = BBUF[2 * a], Ah = BBUF[2 * a + 1]; // prettier-ignore\n    let Bl = BBUF[2 * b], Bh = BBUF[2 * b + 1]; // prettier-ignore\n    let Cl = BBUF[2 * c], Ch = BBUF[2 * c + 1]; // prettier-ignore\n    let Dl = BBUF[2 * d], Dh = BBUF[2 * d + 1]; // prettier-ignore\n    // v[a] = (v[a] + v[b] + x) | 0;\n    let ll = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add3L(Al, Bl, Xl);\n    Ah = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add3H(ll, Ah, Bh, Xh);\n    Al = ll | 0;\n    // v[d] = rotr(v[d] ^ v[a], 32)\n    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n    ({ Dh, Dl } = { Dh: _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotr32H(Dh, Dl), Dl: _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotr32L(Dh, Dl) });\n    // v[c] = (v[c] + v[d]) | 0;\n    ({ h: Ch, l: Cl } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(Ch, Cl, Dh, Dl));\n    // v[b] = rotr(v[b] ^ v[c], 24)\n    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n    ({ Bh, Bl } = { Bh: _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSH(Bh, Bl, 24), Bl: _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSL(Bh, Bl, 24) });\n    (BBUF[2 * a] = Al), (BBUF[2 * a + 1] = Ah);\n    (BBUF[2 * b] = Bl), (BBUF[2 * b + 1] = Bh);\n    (BBUF[2 * c] = Cl), (BBUF[2 * c + 1] = Ch);\n    (BBUF[2 * d] = Dl), (BBUF[2 * d + 1] = Dh);\n}\nfunction G2b(a, b, c, d, msg, x) {\n    // NOTE: V is LE here\n    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n    let Al = BBUF[2 * a], Ah = BBUF[2 * a + 1]; // prettier-ignore\n    let Bl = BBUF[2 * b], Bh = BBUF[2 * b + 1]; // prettier-ignore\n    let Cl = BBUF[2 * c], Ch = BBUF[2 * c + 1]; // prettier-ignore\n    let Dl = BBUF[2 * d], Dh = BBUF[2 * d + 1]; // prettier-ignore\n    // v[a] = (v[a] + v[b] + x) | 0;\n    let ll = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add3L(Al, Bl, Xl);\n    Ah = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add3H(ll, Ah, Bh, Xh);\n    Al = ll | 0;\n    // v[d] = rotr(v[d] ^ v[a], 16)\n    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n    ({ Dh, Dl } = { Dh: _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSH(Dh, Dl, 16), Dl: _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSL(Dh, Dl, 16) });\n    // v[c] = (v[c] + v[d]) | 0;\n    ({ h: Ch, l: Cl } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(Ch, Cl, Dh, Dl));\n    // v[b] = rotr(v[b] ^ v[c], 63)\n    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n    ({ Bh, Bl } = { Bh: _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBH(Bh, Bl, 63), Bl: _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBL(Bh, Bl, 63) });\n    (BBUF[2 * a] = Al), (BBUF[2 * a + 1] = Ah);\n    (BBUF[2 * b] = Bl), (BBUF[2 * b + 1] = Bh);\n    (BBUF[2 * c] = Cl), (BBUF[2 * c + 1] = Ch);\n    (BBUF[2 * d] = Dl), (BBUF[2 * d + 1] = Dh);\n}\nclass BLAKE2b extends _blake_js__WEBPACK_IMPORTED_MODULE_1__.BLAKE {\n    constructor(opts = {}) {\n        super(128, opts.dkLen === undefined ? 64 : opts.dkLen, opts, 64, 16, 16);\n        // Same as SHA-512, but LE\n        this.v0l = B2B_IV[0] | 0;\n        this.v0h = B2B_IV[1] | 0;\n        this.v1l = B2B_IV[2] | 0;\n        this.v1h = B2B_IV[3] | 0;\n        this.v2l = B2B_IV[4] | 0;\n        this.v2h = B2B_IV[5] | 0;\n        this.v3l = B2B_IV[6] | 0;\n        this.v3h = B2B_IV[7] | 0;\n        this.v4l = B2B_IV[8] | 0;\n        this.v4h = B2B_IV[9] | 0;\n        this.v5l = B2B_IV[10] | 0;\n        this.v5h = B2B_IV[11] | 0;\n        this.v6l = B2B_IV[12] | 0;\n        this.v6h = B2B_IV[13] | 0;\n        this.v7l = B2B_IV[14] | 0;\n        this.v7h = B2B_IV[15] | 0;\n        const keyLength = opts.key ? opts.key.length : 0;\n        this.v0l ^= this.outputLen | (keyLength << 8) | (0x01 << 16) | (0x01 << 24);\n        if (opts.salt) {\n            const salt = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.u32)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(opts.salt));\n            this.v4l ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.byteSwapIfBE)(salt[0]);\n            this.v4h ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.byteSwapIfBE)(salt[1]);\n            this.v5l ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.byteSwapIfBE)(salt[2]);\n            this.v5h ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.byteSwapIfBE)(salt[3]);\n        }\n        if (opts.personalization) {\n            const pers = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.u32)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(opts.personalization));\n            this.v6l ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.byteSwapIfBE)(pers[0]);\n            this.v6h ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.byteSwapIfBE)(pers[1]);\n            this.v7l ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.byteSwapIfBE)(pers[2]);\n            this.v7h ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.byteSwapIfBE)(pers[3]);\n        }\n        if (opts.key) {\n            // Pad to blockLen and update\n            const tmp = new Uint8Array(this.blockLen);\n            tmp.set((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(opts.key));\n            this.update(tmp);\n        }\n    }\n    // prettier-ignore\n    get() {\n        let { v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h } = this;\n        return [v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h];\n    }\n    // prettier-ignore\n    set(v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h) {\n        this.v0l = v0l | 0;\n        this.v0h = v0h | 0;\n        this.v1l = v1l | 0;\n        this.v1h = v1h | 0;\n        this.v2l = v2l | 0;\n        this.v2h = v2h | 0;\n        this.v3l = v3l | 0;\n        this.v3h = v3h | 0;\n        this.v4l = v4l | 0;\n        this.v4h = v4h | 0;\n        this.v5l = v5l | 0;\n        this.v5h = v5h | 0;\n        this.v6l = v6l | 0;\n        this.v6h = v6h | 0;\n        this.v7l = v7l | 0;\n        this.v7h = v7h | 0;\n    }\n    compress(msg, offset, isLast) {\n        this.get().forEach((v, i) => (BBUF[i] = v)); // First half from state.\n        BBUF.set(B2B_IV, 16); // Second half from IV.\n        let { h, l } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromBig(BigInt(this.length));\n        BBUF[24] = B2B_IV[8] ^ l; // Low word of the offset.\n        BBUF[25] = B2B_IV[9] ^ h; // High word.\n        // Invert all bits for last block\n        if (isLast) {\n            BBUF[28] = ~BBUF[28];\n            BBUF[29] = ~BBUF[29];\n        }\n        let j = 0;\n        const s = _blake_js__WEBPACK_IMPORTED_MODULE_1__.SIGMA;\n        for (let i = 0; i < 12; i++) {\n            G1b(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n            G2b(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n            G1b(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n            G2b(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n            G1b(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n            G2b(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n            G1b(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n            G2b(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n            G1b(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n            G2b(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n            G1b(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n            G2b(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n            G1b(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n            G2b(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n            G1b(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n            G2b(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n        }\n        this.v0l ^= BBUF[0] ^ BBUF[16];\n        this.v0h ^= BBUF[1] ^ BBUF[17];\n        this.v1l ^= BBUF[2] ^ BBUF[18];\n        this.v1h ^= BBUF[3] ^ BBUF[19];\n        this.v2l ^= BBUF[4] ^ BBUF[20];\n        this.v2h ^= BBUF[5] ^ BBUF[21];\n        this.v3l ^= BBUF[6] ^ BBUF[22];\n        this.v3h ^= BBUF[7] ^ BBUF[23];\n        this.v4l ^= BBUF[8] ^ BBUF[24];\n        this.v4h ^= BBUF[9] ^ BBUF[25];\n        this.v5l ^= BBUF[10] ^ BBUF[26];\n        this.v5h ^= BBUF[11] ^ BBUF[27];\n        this.v6l ^= BBUF[12] ^ BBUF[28];\n        this.v6h ^= BBUF[13] ^ BBUF[29];\n        this.v7l ^= BBUF[14] ^ BBUF[30];\n        this.v7h ^= BBUF[15] ^ BBUF[31];\n        BBUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer32.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\n/**\n * Blake2b hash function. Focuses on 64-bit platforms, but in JS speed different from Blake2s is negligible.\n * @param msg - message that would be hashed\n * @param opts - dkLen output length, key for MAC mode, salt, personalization\n */\nconst blake2b = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructorWithOpts)((opts) => new BLAKE2b(opts));\n//# sourceMappingURL=blake2b.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/esm/blake2b.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/esm/crypto.js":
/*!**************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/crypto.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   crypto: function() { return /* binding */ crypto; }\n/* harmony export */ });\nconst crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9jcnlwdG8uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvZXNtL2NyeXB0by5qcz83NDliIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBjcnlwdG8gPSB0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcgJiYgJ2NyeXB0bycgaW4gZ2xvYmFsVGhpcyA/IGdsb2JhbFRoaXMuY3J5cHRvIDogdW5kZWZpbmVkO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3J5cHRvLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/esm/crypto.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/esm/hmac.js":
/*!************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/hmac.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HMAC: function() { return /* binding */ HMAC; },\n/* harmony export */   hmac: function() { return /* binding */ hmac; }\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_assert.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/utils.js\");\n/**\n * HMAC: RFC2104 message authentication code.\n * @module\n */\n\n\nclass HMAC extends _utils_js__WEBPACK_IMPORTED_MODULE_0__.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.ahash)(hash);\n        const key = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.aexists)(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.aexists)(this);\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.abytes)(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n * @example\n * import { hmac } from '@noble/hashes/hmac';\n * import { sha256 } from '@noble/hashes/sha2';\n * const mac1 = hmac(sha256, 'key', 'message');\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9obWFjLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNzRDtBQUNYO0FBQ3BDLG1CQUFtQiwyQ0FBSTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaURBQUs7QUFDYixvQkFBb0Isa0RBQU87QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdCQUFnQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdCQUFnQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxtREFBTztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxtREFBTztBQUNmLFFBQVEsa0RBQU07QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFpRTtBQUNqRSxnQkFBZ0IseURBQXlEO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksT0FBTztBQUNuQixZQUFZLFNBQVM7QUFDckI7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vaG1hYy5qcz8zNzlkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogSE1BQzogUkZDMjEwNCBtZXNzYWdlIGF1dGhlbnRpY2F0aW9uIGNvZGUuXG4gKiBAbW9kdWxlXG4gKi9cbmltcG9ydCB7IGFieXRlcywgYWV4aXN0cywgYWhhc2ggfSBmcm9tICcuL19hc3NlcnQuanMnO1xuaW1wb3J0IHsgSGFzaCwgdG9CeXRlcyB9IGZyb20gJy4vdXRpbHMuanMnO1xuZXhwb3J0IGNsYXNzIEhNQUMgZXh0ZW5kcyBIYXNoIHtcbiAgICBjb25zdHJ1Y3RvcihoYXNoLCBfa2V5KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuZmluaXNoZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5kZXN0cm95ZWQgPSBmYWxzZTtcbiAgICAgICAgYWhhc2goaGFzaCk7XG4gICAgICAgIGNvbnN0IGtleSA9IHRvQnl0ZXMoX2tleSk7XG4gICAgICAgIHRoaXMuaUhhc2ggPSBoYXNoLmNyZWF0ZSgpO1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMuaUhhc2gudXBkYXRlICE9PSAnZnVuY3Rpb24nKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCBpbnN0YW5jZSBvZiBjbGFzcyB3aGljaCBleHRlbmRzIHV0aWxzLkhhc2gnKTtcbiAgICAgICAgdGhpcy5ibG9ja0xlbiA9IHRoaXMuaUhhc2guYmxvY2tMZW47XG4gICAgICAgIHRoaXMub3V0cHV0TGVuID0gdGhpcy5pSGFzaC5vdXRwdXRMZW47XG4gICAgICAgIGNvbnN0IGJsb2NrTGVuID0gdGhpcy5ibG9ja0xlbjtcbiAgICAgICAgY29uc3QgcGFkID0gbmV3IFVpbnQ4QXJyYXkoYmxvY2tMZW4pO1xuICAgICAgICAvLyBibG9ja0xlbiBjYW4gYmUgYmlnZ2VyIHRoYW4gb3V0cHV0TGVuXG4gICAgICAgIHBhZC5zZXQoa2V5Lmxlbmd0aCA+IGJsb2NrTGVuID8gaGFzaC5jcmVhdGUoKS51cGRhdGUoa2V5KS5kaWdlc3QoKSA6IGtleSk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGFkLmxlbmd0aDsgaSsrKVxuICAgICAgICAgICAgcGFkW2ldIF49IDB4MzY7XG4gICAgICAgIHRoaXMuaUhhc2gudXBkYXRlKHBhZCk7XG4gICAgICAgIC8vIEJ5IGRvaW5nIHVwZGF0ZSAocHJvY2Vzc2luZyBvZiBmaXJzdCBibG9jaykgb2Ygb3V0ZXIgaGFzaCBoZXJlIHdlIGNhbiByZS11c2UgaXQgYmV0d2VlbiBtdWx0aXBsZSBjYWxscyB2aWEgY2xvbmVcbiAgICAgICAgdGhpcy5vSGFzaCA9IGhhc2guY3JlYXRlKCk7XG4gICAgICAgIC8vIFVuZG8gaW50ZXJuYWwgWE9SICYmIGFwcGx5IG91dGVyIFhPUlxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBhZC5sZW5ndGg7IGkrKylcbiAgICAgICAgICAgIHBhZFtpXSBePSAweDM2IF4gMHg1YztcbiAgICAgICAgdGhpcy5vSGFzaC51cGRhdGUocGFkKTtcbiAgICAgICAgcGFkLmZpbGwoMCk7XG4gICAgfVxuICAgIHVwZGF0ZShidWYpIHtcbiAgICAgICAgYWV4aXN0cyh0aGlzKTtcbiAgICAgICAgdGhpcy5pSGFzaC51cGRhdGUoYnVmKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGRpZ2VzdEludG8ob3V0KSB7XG4gICAgICAgIGFleGlzdHModGhpcyk7XG4gICAgICAgIGFieXRlcyhvdXQsIHRoaXMub3V0cHV0TGVuKTtcbiAgICAgICAgdGhpcy5maW5pc2hlZCA9IHRydWU7XG4gICAgICAgIHRoaXMuaUhhc2guZGlnZXN0SW50byhvdXQpO1xuICAgICAgICB0aGlzLm9IYXNoLnVwZGF0ZShvdXQpO1xuICAgICAgICB0aGlzLm9IYXNoLmRpZ2VzdEludG8ob3V0KTtcbiAgICAgICAgdGhpcy5kZXN0cm95KCk7XG4gICAgfVxuICAgIGRpZ2VzdCgpIHtcbiAgICAgICAgY29uc3Qgb3V0ID0gbmV3IFVpbnQ4QXJyYXkodGhpcy5vSGFzaC5vdXRwdXRMZW4pO1xuICAgICAgICB0aGlzLmRpZ2VzdEludG8ob3V0KTtcbiAgICAgICAgcmV0dXJuIG91dDtcbiAgICB9XG4gICAgX2Nsb25lSW50byh0bykge1xuICAgICAgICAvLyBDcmVhdGUgbmV3IGluc3RhbmNlIHdpdGhvdXQgY2FsbGluZyBjb25zdHJ1Y3RvciBzaW5jZSBrZXkgYWxyZWFkeSBpbiBzdGF0ZSBhbmQgd2UgZG9uJ3Qga25vdyBpdC5cbiAgICAgICAgdG8gfHwgKHRvID0gT2JqZWN0LmNyZWF0ZShPYmplY3QuZ2V0UHJvdG90eXBlT2YodGhpcyksIHt9KSk7XG4gICAgICAgIGNvbnN0IHsgb0hhc2gsIGlIYXNoLCBmaW5pc2hlZCwgZGVzdHJveWVkLCBibG9ja0xlbiwgb3V0cHV0TGVuIH0gPSB0aGlzO1xuICAgICAgICB0byA9IHRvO1xuICAgICAgICB0by5maW5pc2hlZCA9IGZpbmlzaGVkO1xuICAgICAgICB0by5kZXN0cm95ZWQgPSBkZXN0cm95ZWQ7XG4gICAgICAgIHRvLmJsb2NrTGVuID0gYmxvY2tMZW47XG4gICAgICAgIHRvLm91dHB1dExlbiA9IG91dHB1dExlbjtcbiAgICAgICAgdG8ub0hhc2ggPSBvSGFzaC5fY2xvbmVJbnRvKHRvLm9IYXNoKTtcbiAgICAgICAgdG8uaUhhc2ggPSBpSGFzaC5fY2xvbmVJbnRvKHRvLmlIYXNoKTtcbiAgICAgICAgcmV0dXJuIHRvO1xuICAgIH1cbiAgICBkZXN0cm95KCkge1xuICAgICAgICB0aGlzLmRlc3Ryb3llZCA9IHRydWU7XG4gICAgICAgIHRoaXMub0hhc2guZGVzdHJveSgpO1xuICAgICAgICB0aGlzLmlIYXNoLmRlc3Ryb3koKTtcbiAgICB9XG59XG4vKipcbiAqIEhNQUM6IFJGQzIxMDQgbWVzc2FnZSBhdXRoZW50aWNhdGlvbiBjb2RlLlxuICogQHBhcmFtIGhhc2ggLSBmdW5jdGlvbiB0aGF0IHdvdWxkIGJlIHVzZWQgZS5nLiBzaGEyNTZcbiAqIEBwYXJhbSBrZXkgLSBtZXNzYWdlIGtleVxuICogQHBhcmFtIG1lc3NhZ2UgLSBtZXNzYWdlIGRhdGFcbiAqIEBleGFtcGxlXG4gKiBpbXBvcnQgeyBobWFjIH0gZnJvbSAnQG5vYmxlL2hhc2hlcy9obWFjJztcbiAqIGltcG9ydCB7IHNoYTI1NiB9IGZyb20gJ0Bub2JsZS9oYXNoZXMvc2hhMic7XG4gKiBjb25zdCBtYWMxID0gaG1hYyhzaGEyNTYsICdrZXknLCAnbWVzc2FnZScpO1xuICovXG5leHBvcnQgY29uc3QgaG1hYyA9IChoYXNoLCBrZXksIG1lc3NhZ2UpID0+IG5ldyBITUFDKGhhc2gsIGtleSkudXBkYXRlKG1lc3NhZ2UpLmRpZ2VzdCgpO1xuaG1hYy5jcmVhdGUgPSAoaGFzaCwga2V5KSA9PiBuZXcgSE1BQyhoYXNoLCBrZXkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aG1hYy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/esm/hmac.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/esm/pbkdf2.js":
/*!**************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/pbkdf2.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pbkdf2: function() { return /* binding */ pbkdf2; },\n/* harmony export */   pbkdf2Async: function() { return /* binding */ pbkdf2Async; }\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_assert.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _hmac_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hmac.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/hmac.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/utils.js\");\n/**\n * PBKDF (RFC 2898). Can be used to create a key from password and salt.\n * @module\n */\n\n\n\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.ahash)(hash);\n    const opts = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.checkOpts)({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.anumber)(c);\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.anumber)(dkLen);\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.anumber)(asyncTick);\n    if (c < 1)\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\n    const password = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.toBytes)(_password);\n    const salt = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.toBytes)(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = _hmac_js__WEBPACK_IMPORTED_MODULE_2__.hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    u.fill(0);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n * @example\n * const key = pbkdf2(sha256, 'password', 'salt', { dkLen: 32, c: 2 ** 18 });\n */\nfunction pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function. Async version.\n * @example\n * await pbkdf2Async(sha256, 'password', 'salt', { dkLen: 32, c: 500_000 });\n */\nasync function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.asyncLoop)(c - 1, asyncTick, () => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n//# sourceMappingURL=pbkdf2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9wYmtkZjIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUM4QztBQUNiO0FBQzZDO0FBQzlFO0FBQ0E7QUFDQSxJQUFJLGlEQUFLO0FBQ1QsaUJBQWlCLG9EQUFTLEdBQUcsMEJBQTBCO0FBQ3ZELFlBQVksc0JBQXNCO0FBQ2xDLElBQUksbURBQU87QUFDWCxJQUFJLG1EQUFPO0FBQ1gsSUFBSSxtREFBTztBQUNYO0FBQ0E7QUFDQSxxQkFBcUIsa0RBQU87QUFDNUIsaUJBQWlCLGtEQUFPO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwQ0FBSTtBQUNwQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLFVBQVU7QUFDNUI7QUFDQSxvREFBb0QsdUJBQXVCO0FBQzNFO0FBQ087QUFDUCxZQUFZLDZCQUE2QjtBQUN6QyxjQUFjO0FBQ2Q7QUFDQSxpQkFBaUIscURBQVU7QUFDM0I7QUFDQTtBQUNBLDhCQUE4QixhQUFhO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFFBQVE7QUFDakM7QUFDQTtBQUNBLDRCQUE0QixlQUFlO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsdUJBQXVCO0FBQzFFO0FBQ087QUFDUCxZQUFZLHdDQUF3QztBQUNwRCxjQUFjO0FBQ2Q7QUFDQSxpQkFBaUIscURBQVU7QUFDM0I7QUFDQTtBQUNBLDhCQUE4QixhQUFhO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxvREFBUztBQUN2QjtBQUNBO0FBQ0EsNEJBQTRCLGVBQWU7QUFDM0M7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvZXNtL3Bia2RmMi5qcz9iZWQ5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUEJLREYgKFJGQyAyODk4KS4gQ2FuIGJlIHVzZWQgdG8gY3JlYXRlIGEga2V5IGZyb20gcGFzc3dvcmQgYW5kIHNhbHQuXG4gKiBAbW9kdWxlXG4gKi9cbmltcG9ydCB7IGFoYXNoLCBhbnVtYmVyIH0gZnJvbSAnLi9fYXNzZXJ0LmpzJztcbmltcG9ydCB7IGhtYWMgfSBmcm9tICcuL2htYWMuanMnO1xuaW1wb3J0IHsgYXN5bmNMb29wLCBjaGVja09wdHMsIGNyZWF0ZVZpZXcsIEhhc2gsIHRvQnl0ZXMsIH0gZnJvbSAnLi91dGlscy5qcyc7XG4vLyBDb21tb24gcHJvbG9ndWUgYW5kIGVwaWxvZ3VlIGZvciBzeW5jL2FzeW5jIGZ1bmN0aW9uc1xuZnVuY3Rpb24gcGJrZGYySW5pdChoYXNoLCBfcGFzc3dvcmQsIF9zYWx0LCBfb3B0cykge1xuICAgIGFoYXNoKGhhc2gpO1xuICAgIGNvbnN0IG9wdHMgPSBjaGVja09wdHMoeyBka0xlbjogMzIsIGFzeW5jVGljazogMTAgfSwgX29wdHMpO1xuICAgIGNvbnN0IHsgYywgZGtMZW4sIGFzeW5jVGljayB9ID0gb3B0cztcbiAgICBhbnVtYmVyKGMpO1xuICAgIGFudW1iZXIoZGtMZW4pO1xuICAgIGFudW1iZXIoYXN5bmNUaWNrKTtcbiAgICBpZiAoYyA8IDEpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUEJLREYyOiBpdGVyYXRpb25zIChjKSBzaG91bGQgYmUgPj0gMScpO1xuICAgIGNvbnN0IHBhc3N3b3JkID0gdG9CeXRlcyhfcGFzc3dvcmQpO1xuICAgIGNvbnN0IHNhbHQgPSB0b0J5dGVzKF9zYWx0KTtcbiAgICAvLyBESyA9IFBCS0RGMihQUkYsIFBhc3N3b3JkLCBTYWx0LCBjLCBka0xlbik7XG4gICAgY29uc3QgREsgPSBuZXcgVWludDhBcnJheShka0xlbik7XG4gICAgLy8gVTEgPSBQUkYoUGFzc3dvcmQsIFNhbHQgKyBJTlRfMzJfQkUoaSkpXG4gICAgY29uc3QgUFJGID0gaG1hYy5jcmVhdGUoaGFzaCwgcGFzc3dvcmQpO1xuICAgIGNvbnN0IFBSRlNhbHQgPSBQUkYuX2Nsb25lSW50bygpLnVwZGF0ZShzYWx0KTtcbiAgICByZXR1cm4geyBjLCBka0xlbiwgYXN5bmNUaWNrLCBESywgUFJGLCBQUkZTYWx0IH07XG59XG5mdW5jdGlvbiBwYmtkZjJPdXRwdXQoUFJGLCBQUkZTYWx0LCBESywgcHJmVywgdSkge1xuICAgIFBSRi5kZXN0cm95KCk7XG4gICAgUFJGU2FsdC5kZXN0cm95KCk7XG4gICAgaWYgKHByZlcpXG4gICAgICAgIHByZlcuZGVzdHJveSgpO1xuICAgIHUuZmlsbCgwKTtcbiAgICByZXR1cm4gREs7XG59XG4vKipcbiAqIFBCS0RGMi1ITUFDOiBSRkMgMjg5OCBrZXkgZGVyaXZhdGlvbiBmdW5jdGlvblxuICogQHBhcmFtIGhhc2ggLSBoYXNoIGZ1bmN0aW9uIHRoYXQgd291bGQgYmUgdXNlZCBlLmcuIHNoYTI1NlxuICogQHBhcmFtIHBhc3N3b3JkIC0gcGFzc3dvcmQgZnJvbSB3aGljaCBhIGRlcml2ZWQga2V5IGlzIGdlbmVyYXRlZFxuICogQHBhcmFtIHNhbHQgLSBjcnlwdG9ncmFwaGljIHNhbHRcbiAqIEBwYXJhbSBvcHRzIC0ge2MsIGRrTGVufSB3aGVyZSBjIGlzIHdvcmsgZmFjdG9yIGFuZCBka0xlbiBpcyBvdXRwdXQgbWVzc2FnZSBzaXplXG4gKiBAZXhhbXBsZVxuICogY29uc3Qga2V5ID0gcGJrZGYyKHNoYTI1NiwgJ3Bhc3N3b3JkJywgJ3NhbHQnLCB7IGRrTGVuOiAzMiwgYzogMiAqKiAxOCB9KTtcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBia2RmMihoYXNoLCBwYXNzd29yZCwgc2FsdCwgb3B0cykge1xuICAgIGNvbnN0IHsgYywgZGtMZW4sIERLLCBQUkYsIFBSRlNhbHQgfSA9IHBia2RmMkluaXQoaGFzaCwgcGFzc3dvcmQsIHNhbHQsIG9wdHMpO1xuICAgIGxldCBwcmZXOyAvLyBXb3JraW5nIGNvcHlcbiAgICBjb25zdCBhcnIgPSBuZXcgVWludDhBcnJheSg0KTtcbiAgICBjb25zdCB2aWV3ID0gY3JlYXRlVmlldyhhcnIpO1xuICAgIGNvbnN0IHUgPSBuZXcgVWludDhBcnJheShQUkYub3V0cHV0TGVuKTtcbiAgICAvLyBESyA9IFQxICsgVDIgKyDii68gKyBUZGtsZW4vaGxlblxuICAgIGZvciAobGV0IHRpID0gMSwgcG9zID0gMDsgcG9zIDwgZGtMZW47IHRpKyssIHBvcyArPSBQUkYub3V0cHV0TGVuKSB7XG4gICAgICAgIC8vIFRpID0gRihQYXNzd29yZCwgU2FsdCwgYywgaSlcbiAgICAgICAgY29uc3QgVGkgPSBESy5zdWJhcnJheShwb3MsIHBvcyArIFBSRi5vdXRwdXRMZW4pO1xuICAgICAgICB2aWV3LnNldEludDMyKDAsIHRpLCBmYWxzZSk7XG4gICAgICAgIC8vIEYoUGFzc3dvcmQsIFNhbHQsIGMsIGkpID0gVTEgXiBVMiBeIOKLryBeIFVjXG4gICAgICAgIC8vIFUxID0gUFJGKFBhc3N3b3JkLCBTYWx0ICsgSU5UXzMyX0JFKGkpKVxuICAgICAgICAocHJmVyA9IFBSRlNhbHQuX2Nsb25lSW50byhwcmZXKSkudXBkYXRlKGFycikuZGlnZXN0SW50byh1KTtcbiAgICAgICAgVGkuc2V0KHUuc3ViYXJyYXkoMCwgVGkubGVuZ3RoKSk7XG4gICAgICAgIGZvciAobGV0IHVpID0gMTsgdWkgPCBjOyB1aSsrKSB7XG4gICAgICAgICAgICAvLyBVYyA9IFBSRihQYXNzd29yZCwgVWPiiJIxKVxuICAgICAgICAgICAgUFJGLl9jbG9uZUludG8ocHJmVykudXBkYXRlKHUpLmRpZ2VzdEludG8odSk7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IFRpLmxlbmd0aDsgaSsrKVxuICAgICAgICAgICAgICAgIFRpW2ldIF49IHVbaV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHBia2RmMk91dHB1dChQUkYsIFBSRlNhbHQsIERLLCBwcmZXLCB1KTtcbn1cbi8qKlxuICogUEJLREYyLUhNQUM6IFJGQyAyODk4IGtleSBkZXJpdmF0aW9uIGZ1bmN0aW9uLiBBc3luYyB2ZXJzaW9uLlxuICogQGV4YW1wbGVcbiAqIGF3YWl0IHBia2RmMkFzeW5jKHNoYTI1NiwgJ3Bhc3N3b3JkJywgJ3NhbHQnLCB7IGRrTGVuOiAzMiwgYzogNTAwXzAwMCB9KTtcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHBia2RmMkFzeW5jKGhhc2gsIHBhc3N3b3JkLCBzYWx0LCBvcHRzKSB7XG4gICAgY29uc3QgeyBjLCBka0xlbiwgYXN5bmNUaWNrLCBESywgUFJGLCBQUkZTYWx0IH0gPSBwYmtkZjJJbml0KGhhc2gsIHBhc3N3b3JkLCBzYWx0LCBvcHRzKTtcbiAgICBsZXQgcHJmVzsgLy8gV29ya2luZyBjb3B5XG4gICAgY29uc3QgYXJyID0gbmV3IFVpbnQ4QXJyYXkoNCk7XG4gICAgY29uc3QgdmlldyA9IGNyZWF0ZVZpZXcoYXJyKTtcbiAgICBjb25zdCB1ID0gbmV3IFVpbnQ4QXJyYXkoUFJGLm91dHB1dExlbik7XG4gICAgLy8gREsgPSBUMSArIFQyICsg4ouvICsgVGRrbGVuL2hsZW5cbiAgICBmb3IgKGxldCB0aSA9IDEsIHBvcyA9IDA7IHBvcyA8IGRrTGVuOyB0aSsrLCBwb3MgKz0gUFJGLm91dHB1dExlbikge1xuICAgICAgICAvLyBUaSA9IEYoUGFzc3dvcmQsIFNhbHQsIGMsIGkpXG4gICAgICAgIGNvbnN0IFRpID0gREsuc3ViYXJyYXkocG9zLCBwb3MgKyBQUkYub3V0cHV0TGVuKTtcbiAgICAgICAgdmlldy5zZXRJbnQzMigwLCB0aSwgZmFsc2UpO1xuICAgICAgICAvLyBGKFBhc3N3b3JkLCBTYWx0LCBjLCBpKSA9IFUxIF4gVTIgXiDii68gXiBVY1xuICAgICAgICAvLyBVMSA9IFBSRihQYXNzd29yZCwgU2FsdCArIElOVF8zMl9CRShpKSlcbiAgICAgICAgKHByZlcgPSBQUkZTYWx0Ll9jbG9uZUludG8ocHJmVykpLnVwZGF0ZShhcnIpLmRpZ2VzdEludG8odSk7XG4gICAgICAgIFRpLnNldCh1LnN1YmFycmF5KDAsIFRpLmxlbmd0aCkpO1xuICAgICAgICBhd2FpdCBhc3luY0xvb3AoYyAtIDEsIGFzeW5jVGljaywgKCkgPT4ge1xuICAgICAgICAgICAgLy8gVWMgPSBQUkYoUGFzc3dvcmQsIFVj4oiSMSlcbiAgICAgICAgICAgIFBSRi5fY2xvbmVJbnRvKHByZlcpLnVwZGF0ZSh1KS5kaWdlc3RJbnRvKHUpO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBUaS5sZW5ndGg7IGkrKylcbiAgICAgICAgICAgICAgICBUaVtpXSBePSB1W2ldO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHBia2RmMk91dHB1dChQUkYsIFBSRlNhbHQsIERLLCBwcmZXLCB1KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBia2RmMi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/esm/pbkdf2.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/esm/scrypt.js":
/*!**************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/scrypt.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   scrypt: function() { return /* binding */ scrypt; },\n/* harmony export */   scryptAsync: function() { return /* binding */ scryptAsync; }\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_assert.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _pbkdf2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pbkdf2.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/pbkdf2.js\");\n/* harmony import */ var _sha256_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sha256.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/utils.js\");\n/**\n * RFC 7914 Scrypt KDF. Can be used to create a key from password and salt.\n * @module\n */\n\n\n\n\n// The main Scrypt loop: uses Salsa extensively.\n// Six versions of the function were tried, this is the fastest one.\n// prettier-ignore\nfunction XorAndSalsa(prev, pi, input, ii, out, oi) {\n    // Based on https://cr.yp.to/salsa20.html\n    // Xor blocks\n    let y00 = prev[pi++] ^ input[ii++], y01 = prev[pi++] ^ input[ii++];\n    let y02 = prev[pi++] ^ input[ii++], y03 = prev[pi++] ^ input[ii++];\n    let y04 = prev[pi++] ^ input[ii++], y05 = prev[pi++] ^ input[ii++];\n    let y06 = prev[pi++] ^ input[ii++], y07 = prev[pi++] ^ input[ii++];\n    let y08 = prev[pi++] ^ input[ii++], y09 = prev[pi++] ^ input[ii++];\n    let y10 = prev[pi++] ^ input[ii++], y11 = prev[pi++] ^ input[ii++];\n    let y12 = prev[pi++] ^ input[ii++], y13 = prev[pi++] ^ input[ii++];\n    let y14 = prev[pi++] ^ input[ii++], y15 = prev[pi++] ^ input[ii++];\n    // Save state to temporary variables (salsa)\n    let x00 = y00, x01 = y01, x02 = y02, x03 = y03, x04 = y04, x05 = y05, x06 = y06, x07 = y07, x08 = y08, x09 = y09, x10 = y10, x11 = y11, x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n    // Main loop (salsa)\n    for (let i = 0; i < 8; i += 2) {\n        x04 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x00 + x12 | 0, 7);\n        x08 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x04 + x00 | 0, 9);\n        x12 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x08 + x04 | 0, 13);\n        x00 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x12 + x08 | 0, 18);\n        x09 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x05 + x01 | 0, 7);\n        x13 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x09 + x05 | 0, 9);\n        x01 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x13 + x09 | 0, 13);\n        x05 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x01 + x13 | 0, 18);\n        x14 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x10 + x06 | 0, 7);\n        x02 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x14 + x10 | 0, 9);\n        x06 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x02 + x14 | 0, 13);\n        x10 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x06 + x02 | 0, 18);\n        x03 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x15 + x11 | 0, 7);\n        x07 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x03 + x15 | 0, 9);\n        x11 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x07 + x03 | 0, 13);\n        x15 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x11 + x07 | 0, 18);\n        x01 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x00 + x03 | 0, 7);\n        x02 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x01 + x00 | 0, 9);\n        x03 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x02 + x01 | 0, 13);\n        x00 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x03 + x02 | 0, 18);\n        x06 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x05 + x04 | 0, 7);\n        x07 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x06 + x05 | 0, 9);\n        x04 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x07 + x06 | 0, 13);\n        x05 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x04 + x07 | 0, 18);\n        x11 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x10 + x09 | 0, 7);\n        x08 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x11 + x10 | 0, 9);\n        x09 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x08 + x11 | 0, 13);\n        x10 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x09 + x08 | 0, 18);\n        x12 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x15 + x14 | 0, 7);\n        x13 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x12 + x15 | 0, 9);\n        x14 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x13 + x12 | 0, 13);\n        x15 ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x14 + x13 | 0, 18);\n    }\n    // Write output (salsa)\n    out[oi++] = (y00 + x00) | 0;\n    out[oi++] = (y01 + x01) | 0;\n    out[oi++] = (y02 + x02) | 0;\n    out[oi++] = (y03 + x03) | 0;\n    out[oi++] = (y04 + x04) | 0;\n    out[oi++] = (y05 + x05) | 0;\n    out[oi++] = (y06 + x06) | 0;\n    out[oi++] = (y07 + x07) | 0;\n    out[oi++] = (y08 + x08) | 0;\n    out[oi++] = (y09 + x09) | 0;\n    out[oi++] = (y10 + x10) | 0;\n    out[oi++] = (y11 + x11) | 0;\n    out[oi++] = (y12 + x12) | 0;\n    out[oi++] = (y13 + x13) | 0;\n    out[oi++] = (y14 + x14) | 0;\n    out[oi++] = (y15 + x15) | 0;\n}\nfunction BlockMix(input, ii, out, oi, r) {\n    // The block B is r 128-byte chunks (which is equivalent of 2r 64-byte chunks)\n    let head = oi + 0;\n    let tail = oi + 16 * r;\n    for (let i = 0; i < 16; i++)\n        out[tail + i] = input[ii + (2 * r - 1) * 16 + i]; // X ← B[2r−1]\n    for (let i = 0; i < r; i++, head += 16, ii += 16) {\n        // We write odd & even Yi at same time. Even: 0bXXXXX0 Odd:  0bXXXXX1\n        XorAndSalsa(out, tail, input, ii, out, head); // head[i] = Salsa(blockIn[2*i] ^ tail[i-1])\n        if (i > 0)\n            tail += 16; // First iteration overwrites tmp value in tail\n        XorAndSalsa(out, head, input, (ii += 16), out, tail); // tail[i] = Salsa(blockIn[2*i+1] ^ head[i])\n    }\n}\n// Common prologue and epilogue for sync/async functions\nfunction scryptInit(password, salt, _opts) {\n    // Maxmem - 1GB+1KB by default\n    const opts = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.checkOpts)({\n        dkLen: 32,\n        asyncTick: 10,\n        maxmem: 1024 ** 3 + 1024,\n    }, _opts);\n    const { N, r, p, dkLen, asyncTick, maxmem, onProgress } = opts;\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.anumber)(N);\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.anumber)(r);\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.anumber)(p);\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.anumber)(dkLen);\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.anumber)(asyncTick);\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.anumber)(maxmem);\n    if (onProgress !== undefined && typeof onProgress !== 'function')\n        throw new Error('progressCb should be function');\n    const blockSize = 128 * r;\n    const blockSize32 = blockSize / 4;\n    // Max N is 2^32 (Integrify is 32-bit). Real limit is 2^22: JS engines Uint8Array limit is 4GB in 2024.\n    // Spec check `N >= 2 ** (blockSize / 8)` is not done for compat with popular libs,\n    // which used incorrect r: 1, p: 8. Also, the check seems to be a spec error:\n    // https://www.rfc-editor.org/errata_search.php?rfc=7914\n    if (N <= 1 || (N & (N - 1)) !== 0 || N > 2 ** 32) {\n        throw new Error('Scrypt: N must be larger than 1, a power of 2, and less than 2^32');\n    }\n    if (p < 0 || p > ((2 ** 32 - 1) * 32) / blockSize) {\n        throw new Error('Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)');\n    }\n    if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {\n        throw new Error('Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32');\n    }\n    const memUsed = blockSize * (N + p);\n    if (memUsed > maxmem) {\n        throw new Error('Scrypt: memused is bigger than maxMem. Expected 128 * r * (N + p) > maxmem of ' + maxmem);\n    }\n    // [B0...Bp−1] ← PBKDF2HMAC-SHA256(Passphrase, Salt, 1, blockSize*ParallelizationFactor)\n    // Since it has only one iteration there is no reason to use async variant\n    const B = (0,_pbkdf2_js__WEBPACK_IMPORTED_MODULE_2__.pbkdf2)(_sha256_js__WEBPACK_IMPORTED_MODULE_3__.sha256, password, salt, { c: 1, dkLen: blockSize * p });\n    const B32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(B);\n    // Re-used between parallel iterations. Array(iterations) of B\n    const V = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(new Uint8Array(blockSize * N));\n    const tmp = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(new Uint8Array(blockSize));\n    let blockMixCb = () => { };\n    if (onProgress) {\n        const totalBlockMix = 2 * N * p;\n        // Invoke callback if progress changes from 10.01 to 10.02\n        // Allows to draw smooth progress bar on up to 8K screen\n        const callbackPer = Math.max(Math.floor(totalBlockMix / 10000), 1);\n        let blockMixCnt = 0;\n        blockMixCb = () => {\n            blockMixCnt++;\n            if (onProgress && (!(blockMixCnt % callbackPer) || blockMixCnt === totalBlockMix))\n                onProgress(blockMixCnt / totalBlockMix);\n        };\n    }\n    return { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick };\n}\nfunction scryptOutput(password, dkLen, B, V, tmp) {\n    const res = (0,_pbkdf2_js__WEBPACK_IMPORTED_MODULE_2__.pbkdf2)(_sha256_js__WEBPACK_IMPORTED_MODULE_3__.sha256, password, B, { c: 1, dkLen });\n    B.fill(0);\n    V.fill(0);\n    tmp.fill(0);\n    return res;\n}\n/**\n * Scrypt KDF from RFC 7914.\n * @param password - pass\n * @param salt - salt\n * @param opts - parameters\n * - `N` is cpu/mem work factor (power of 2 e.g. 2**18)\n * - `r` is block size (8 is common), fine-tunes sequential memory read size and performance\n * - `p` is parallelization factor (1 is common)\n * - `dkLen` is output key length in bytes e.g. 32.\n * - `asyncTick` - (default: 10) max time in ms for which async function can block execution\n * - `maxmem` - (default: `1024 ** 3 + 1024` aka 1GB+1KB). A limit that the app could use for scrypt\n * - `onProgress` - callback function that would be executed for progress report\n * @returns Derived key\n * @example\n * scrypt('password', 'salt', { N: 2**18, r: 8, p: 1, dkLen: 32 });\n */\nfunction scrypt(password, salt, opts) {\n    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb } = scryptInit(password, salt, opts);\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__.isLE)\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.byteSwap32)(B32);\n    for (let pi = 0; pi < p; pi++) {\n        const Pi = blockSize32 * pi;\n        for (let i = 0; i < blockSize32; i++)\n            V[i] = B32[Pi + i]; // V[0] = B[i]\n        for (let i = 0, pos = 0; i < N - 1; i++) {\n            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n            blockMixCb();\n        }\n        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n        blockMixCb();\n        for (let i = 0; i < N; i++) {\n            // First u32 of the last 64-byte block (u32 is LE)\n            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n            for (let k = 0; k < blockSize32; k++)\n                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n            blockMixCb();\n        }\n    }\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__.isLE)\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.byteSwap32)(B32);\n    return scryptOutput(password, dkLen, B, V, tmp);\n}\n/**\n * Scrypt KDF from RFC 7914. Async version.\n * @example\n * await scryptAsync('password', 'salt', { N: 2**18, r: 8, p: 1, dkLen: 32 });\n */\nasync function scryptAsync(password, salt, opts) {\n    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick } = scryptInit(password, salt, opts);\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__.isLE)\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.byteSwap32)(B32);\n    for (let pi = 0; pi < p; pi++) {\n        const Pi = blockSize32 * pi;\n        for (let i = 0; i < blockSize32; i++)\n            V[i] = B32[Pi + i]; // V[0] = B[i]\n        let pos = 0;\n        await (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.asyncLoop)(N - 1, asyncTick, () => {\n            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n            blockMixCb();\n        });\n        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n        blockMixCb();\n        await (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.asyncLoop)(N, asyncTick, () => {\n            // First u32 of the last 64-byte block (u32 is LE)\n            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n            for (let k = 0; k < blockSize32; k++)\n                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n            blockMixCb();\n        });\n    }\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__.isLE)\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.byteSwap32)(B32);\n    return scryptOutput(password, dkLen, B, V, tmp);\n}\n//# sourceMappingURL=scrypt.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/esm/scrypt.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/esm/sha256.js":
/*!**************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/sha256.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SHA256: function() { return /* binding */ SHA256; },\n/* harmony export */   sha224: function() { return /* binding */ sha224; },\n/* harmony export */   sha256: function() { return /* binding */ sha256; }\n/* harmony export */ });\n/* harmony import */ var _md_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_md.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/_md.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/utils.js\");\n/**\n * SHA2-256 a.k.a. sha256. In JS, it is the fastest hash, even faster than Blake3.\n *\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n *\n * Check out [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\n\n\n/** Round constants: first 32 bits of fractional parts of the cube roots of the first 64 primes 2..311). */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n/** Initial state: first 32 bits of fractional parts of the square roots of the first 8 primes 2..19. */\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n/**\n * Temporary buffer, not used to store anything between runs.\n * Named this way because it matches specification.\n */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends _md_js__WEBPACK_IMPORTED_MODULE_0__.HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W15, 7) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W2, 17) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(E, 6) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(E, 11) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(E, 25);\n            const T1 = (H + sigma1 + (0,_md_js__WEBPACK_IMPORTED_MODULE_0__.Chi)(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(A, 2) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(A, 13) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(A, 22);\n            const T2 = (sigma0 + (0,_md_js__WEBPACK_IMPORTED_MODULE_0__.Maj)(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * Constants taken from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf.\n */\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/** SHA2-256 hash function */\nconst sha256 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapConstructor)(() => new SHA256());\n/** SHA2-224 hash function */\nconst sha224 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapConstructor)(() => new SHA224());\n//# sourceMappingURL=sha256.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/esm/sha256.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/esm/sha3.js":
/*!************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/sha3.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Keccak: function() { return /* binding */ Keccak; },\n/* harmony export */   keccakP: function() { return /* binding */ keccakP; },\n/* harmony export */   keccak_224: function() { return /* binding */ keccak_224; },\n/* harmony export */   keccak_256: function() { return /* binding */ keccak_256; },\n/* harmony export */   keccak_384: function() { return /* binding */ keccak_384; },\n/* harmony export */   keccak_512: function() { return /* binding */ keccak_512; },\n/* harmony export */   sha3_224: function() { return /* binding */ sha3_224; },\n/* harmony export */   sha3_256: function() { return /* binding */ sha3_256; },\n/* harmony export */   sha3_384: function() { return /* binding */ sha3_384; },\n/* harmony export */   sha3_512: function() { return /* binding */ sha3_512; },\n/* harmony export */   shake128: function() { return /* binding */ shake128; },\n/* harmony export */   shake256: function() { return /* binding */ shake256; }\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_assert.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_u64.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/_u64.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/utils.js\");\n/**\n * SHA3 (keccak) hash function, based on a new \"Sponge function\" design.\n * Different from older hashes, the internal state is bigger than output size.\n *\n * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),\n * [Website](https://keccak.team/keccak.html),\n * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).\n *\n * Check out `sha3-addons` module for cSHAKE, k12, and others.\n * @module\n */\n\n\n\n// Various per round constants calculations\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.split)(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlBH)(h, l, s) : (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlSH)(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlBL)(h, l, s) : (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlSL)(h, l, s));\n/** `keccakf1600` internal function, additionally allows to adjust round count. */\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\n/** Keccak sponge function. */\nclass Keccak extends _utils_js__WEBPACK_IMPORTED_MODULE_1__.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.anumber)(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        // 0 < blockLen < 200\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.u32)(this.state);\n    }\n    keccak() {\n        if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__.isLE)\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.byteSwap32)(this.state32);\n        keccakP(this.state32, this.rounds);\n        if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__.isLE)\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.byteSwap32)(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.aexists)(this);\n        const { blockLen, state } = this;\n        data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.aexists)(this, false);\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.abytes)(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.anumber)(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.aoutput)(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\n/** SHA3-224 hash function. */\nconst sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/** SHA3-256 hash function. Different from keccak-256. */\nconst sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\n/** SHA3-384 hash function. */\nconst sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\n/** SHA3-512 hash function. */\nconst sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\n/** keccak-224 hash function. */\nconst keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/** keccak-256 hash function. Different from SHA3-256. */\nconst keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\n/** keccak-384 hash function. */\nconst keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\n/** keccak-512 hash function. */\nconst keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapXOFConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\n/** SHAKE128 XOF with 128-bit security. */\nconst shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\n/** SHAKE256 XOF with 256-bit security. */\nconst shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9zaGEzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDaUU7QUFDQztBQUM4QztBQUNoSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxZQUFZO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLE9BQU87QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELDhDQUFLO0FBQ3hEO0FBQ0EscUNBQXFDLCtDQUFNLFlBQVksK0NBQU07QUFDN0QscUNBQXFDLCtDQUFNLFlBQVksK0NBQU07QUFDN0Q7QUFDTztBQUNQO0FBQ0E7QUFDQSxrQ0FBa0MsWUFBWTtBQUM5QztBQUNBLHdCQUF3QixRQUFRO0FBQ2hDO0FBQ0Esd0JBQXdCLFFBQVE7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLFFBQVE7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsUUFBUTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixRQUFRO0FBQ2hDLDRCQUE0QixRQUFRO0FBQ3BDO0FBQ0EsNEJBQTRCLFFBQVE7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08scUJBQXFCLDJDQUFJO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxtREFBTztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsOENBQUc7QUFDMUI7QUFDQTtBQUNBLGFBQWEsMkNBQUk7QUFDakIsWUFBWSxxREFBVTtBQUN0QjtBQUNBLGFBQWEsMkNBQUk7QUFDakIsWUFBWSxxREFBVTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsbURBQU87QUFDZixnQkFBZ0Isa0JBQWtCO0FBQ2xDLGVBQWUsa0RBQU87QUFDdEI7QUFDQSwwQkFBMEIsVUFBVTtBQUNwQztBQUNBLDRCQUE0QixVQUFVO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLCtCQUErQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxtREFBTztBQUNmLFFBQVEsa0RBQU07QUFDZDtBQUNBO0FBQ0EsZ0JBQWdCLFdBQVc7QUFDM0IsNENBQTRDLFVBQVU7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLG1EQUFPO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsUUFBUSxtREFBTztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsaURBQWlEO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsMERBQWU7QUFDNUQ7QUFDTztBQUNQO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ087QUFDUCxrREFBa0QscUVBQTBCLFdBQVc7QUFDdkY7QUFDTztBQUNQO0FBQ087QUFDUCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vc2hhMy5qcz82NjcwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU0hBMyAoa2VjY2FrKSBoYXNoIGZ1bmN0aW9uLCBiYXNlZCBvbiBhIG5ldyBcIlNwb25nZSBmdW5jdGlvblwiIGRlc2lnbi5cbiAqIERpZmZlcmVudCBmcm9tIG9sZGVyIGhhc2hlcywgdGhlIGludGVybmFsIHN0YXRlIGlzIGJpZ2dlciB0aGFuIG91dHB1dCBzaXplLlxuICpcbiAqIENoZWNrIG91dCBbRklQUy0yMDJdKGh0dHBzOi8vbnZscHVicy5uaXN0Lmdvdi9uaXN0cHVicy9GSVBTL05JU1QuRklQUy4yMDIucGRmKSxcbiAqIFtXZWJzaXRlXShodHRwczovL2tlY2Nhay50ZWFtL2tlY2Nhay5odG1sKSxcbiAqIFt0aGUgZGlmZmVyZW5jZXMgYmV0d2VlbiBTSEEtMyBhbmQgS2VjY2FrXShodHRwczovL2NyeXB0by5zdGFja2V4Y2hhbmdlLmNvbS9xdWVzdGlvbnMvMTU3Mjcvd2hhdC1hcmUtdGhlLWtleS1kaWZmZXJlbmNlcy1iZXR3ZWVuLXRoZS1kcmFmdC1zaGEtMy1zdGFuZGFyZC1hbmQtdGhlLWtlY2Nhay1zdWIpLlxuICpcbiAqIENoZWNrIG91dCBgc2hhMy1hZGRvbnNgIG1vZHVsZSBmb3IgY1NIQUtFLCBrMTIsIGFuZCBvdGhlcnMuXG4gKiBAbW9kdWxlXG4gKi9cbmltcG9ydCB7IGFieXRlcywgYWV4aXN0cywgYW51bWJlciwgYW91dHB1dCB9IGZyb20gJy4vX2Fzc2VydC5qcyc7XG5pbXBvcnQgeyByb3RsQkgsIHJvdGxCTCwgcm90bFNILCByb3RsU0wsIHNwbGl0IH0gZnJvbSAnLi9fdTY0LmpzJztcbmltcG9ydCB7IGJ5dGVTd2FwMzIsIEhhc2gsIGlzTEUsIHRvQnl0ZXMsIHUzMiwgd3JhcENvbnN0cnVjdG9yLCB3cmFwWE9GQ29uc3RydWN0b3JXaXRoT3B0cywgfSBmcm9tICcuL3V0aWxzLmpzJztcbi8vIFZhcmlvdXMgcGVyIHJvdW5kIGNvbnN0YW50cyBjYWxjdWxhdGlvbnNcbmNvbnN0IFNIQTNfUEkgPSBbXTtcbmNvbnN0IFNIQTNfUk9UTCA9IFtdO1xuY29uc3QgX1NIQTNfSU9UQSA9IFtdO1xuY29uc3QgXzBuID0gLyogQF9fUFVSRV9fICovIEJpZ0ludCgwKTtcbmNvbnN0IF8xbiA9IC8qIEBfX1BVUkVfXyAqLyBCaWdJbnQoMSk7XG5jb25zdCBfMm4gPSAvKiBAX19QVVJFX18gKi8gQmlnSW50KDIpO1xuY29uc3QgXzduID0gLyogQF9fUFVSRV9fICovIEJpZ0ludCg3KTtcbmNvbnN0IF8yNTZuID0gLyogQF9fUFVSRV9fICovIEJpZ0ludCgyNTYpO1xuY29uc3QgXzB4NzFuID0gLyogQF9fUFVSRV9fICovIEJpZ0ludCgweDcxKTtcbmZvciAobGV0IHJvdW5kID0gMCwgUiA9IF8xbiwgeCA9IDEsIHkgPSAwOyByb3VuZCA8IDI0OyByb3VuZCsrKSB7XG4gICAgLy8gUGlcbiAgICBbeCwgeV0gPSBbeSwgKDIgKiB4ICsgMyAqIHkpICUgNV07XG4gICAgU0hBM19QSS5wdXNoKDIgKiAoNSAqIHkgKyB4KSk7XG4gICAgLy8gUm90YXRpb25hbFxuICAgIFNIQTNfUk9UTC5wdXNoKCgoKHJvdW5kICsgMSkgKiAocm91bmQgKyAyKSkgLyAyKSAlIDY0KTtcbiAgICAvLyBJb3RhXG4gICAgbGV0IHQgPSBfMG47XG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCA3OyBqKyspIHtcbiAgICAgICAgUiA9ICgoUiA8PCBfMW4pIF4gKChSID4+IF83bikgKiBfMHg3MW4pKSAlIF8yNTZuO1xuICAgICAgICBpZiAoUiAmIF8ybilcbiAgICAgICAgICAgIHQgXj0gXzFuIDw8ICgoXzFuIDw8IC8qIEBfX1BVUkVfXyAqLyBCaWdJbnQoaikpIC0gXzFuKTtcbiAgICB9XG4gICAgX1NIQTNfSU9UQS5wdXNoKHQpO1xufVxuY29uc3QgW1NIQTNfSU9UQV9ILCBTSEEzX0lPVEFfTF0gPSAvKiBAX19QVVJFX18gKi8gc3BsaXQoX1NIQTNfSU9UQSwgdHJ1ZSk7XG4vLyBMZWZ0IHJvdGF0aW9uICh3aXRob3V0IDAsIDMyLCA2NClcbmNvbnN0IHJvdGxIID0gKGgsIGwsIHMpID0+IChzID4gMzIgPyByb3RsQkgoaCwgbCwgcykgOiByb3RsU0goaCwgbCwgcykpO1xuY29uc3Qgcm90bEwgPSAoaCwgbCwgcykgPT4gKHMgPiAzMiA/IHJvdGxCTChoLCBsLCBzKSA6IHJvdGxTTChoLCBsLCBzKSk7XG4vKiogYGtlY2Nha2YxNjAwYCBpbnRlcm5hbCBmdW5jdGlvbiwgYWRkaXRpb25hbGx5IGFsbG93cyB0byBhZGp1c3Qgcm91bmQgY291bnQuICovXG5leHBvcnQgZnVuY3Rpb24ga2VjY2FrUChzLCByb3VuZHMgPSAyNCkge1xuICAgIGNvbnN0IEIgPSBuZXcgVWludDMyQXJyYXkoNSAqIDIpO1xuICAgIC8vIE5PVEU6IGFsbCBpbmRpY2VzIGFyZSB4MiBzaW5jZSB3ZSBzdG9yZSBzdGF0ZSBhcyB1MzIgaW5zdGVhZCBvZiB1NjQgKGJpZ2ludHMgdG8gc2xvdyBpbiBqcylcbiAgICBmb3IgKGxldCByb3VuZCA9IDI0IC0gcm91bmRzOyByb3VuZCA8IDI0OyByb3VuZCsrKSB7XG4gICAgICAgIC8vIFRoZXRhIM64XG4gICAgICAgIGZvciAobGV0IHggPSAwOyB4IDwgMTA7IHgrKylcbiAgICAgICAgICAgIEJbeF0gPSBzW3hdIF4gc1t4ICsgMTBdIF4gc1t4ICsgMjBdIF4gc1t4ICsgMzBdIF4gc1t4ICsgNDBdO1xuICAgICAgICBmb3IgKGxldCB4ID0gMDsgeCA8IDEwOyB4ICs9IDIpIHtcbiAgICAgICAgICAgIGNvbnN0IGlkeDEgPSAoeCArIDgpICUgMTA7XG4gICAgICAgICAgICBjb25zdCBpZHgwID0gKHggKyAyKSAlIDEwO1xuICAgICAgICAgICAgY29uc3QgQjAgPSBCW2lkeDBdO1xuICAgICAgICAgICAgY29uc3QgQjEgPSBCW2lkeDAgKyAxXTtcbiAgICAgICAgICAgIGNvbnN0IFRoID0gcm90bEgoQjAsIEIxLCAxKSBeIEJbaWR4MV07XG4gICAgICAgICAgICBjb25zdCBUbCA9IHJvdGxMKEIwLCBCMSwgMSkgXiBCW2lkeDEgKyAxXTtcbiAgICAgICAgICAgIGZvciAobGV0IHkgPSAwOyB5IDwgNTA7IHkgKz0gMTApIHtcbiAgICAgICAgICAgICAgICBzW3ggKyB5XSBePSBUaDtcbiAgICAgICAgICAgICAgICBzW3ggKyB5ICsgMV0gXj0gVGw7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gUmhvICjPgSkgYW5kIFBpICjPgClcbiAgICAgICAgbGV0IGN1ckggPSBzWzJdO1xuICAgICAgICBsZXQgY3VyTCA9IHNbM107XG4gICAgICAgIGZvciAobGV0IHQgPSAwOyB0IDwgMjQ7IHQrKykge1xuICAgICAgICAgICAgY29uc3Qgc2hpZnQgPSBTSEEzX1JPVExbdF07XG4gICAgICAgICAgICBjb25zdCBUaCA9IHJvdGxIKGN1ckgsIGN1ckwsIHNoaWZ0KTtcbiAgICAgICAgICAgIGNvbnN0IFRsID0gcm90bEwoY3VySCwgY3VyTCwgc2hpZnQpO1xuICAgICAgICAgICAgY29uc3QgUEkgPSBTSEEzX1BJW3RdO1xuICAgICAgICAgICAgY3VySCA9IHNbUEldO1xuICAgICAgICAgICAgY3VyTCA9IHNbUEkgKyAxXTtcbiAgICAgICAgICAgIHNbUEldID0gVGg7XG4gICAgICAgICAgICBzW1BJICsgMV0gPSBUbDtcbiAgICAgICAgfVxuICAgICAgICAvLyBDaGkgKM+HKVxuICAgICAgICBmb3IgKGxldCB5ID0gMDsgeSA8IDUwOyB5ICs9IDEwKSB7XG4gICAgICAgICAgICBmb3IgKGxldCB4ID0gMDsgeCA8IDEwOyB4KyspXG4gICAgICAgICAgICAgICAgQlt4XSA9IHNbeSArIHhdO1xuICAgICAgICAgICAgZm9yIChsZXQgeCA9IDA7IHggPCAxMDsgeCsrKVxuICAgICAgICAgICAgICAgIHNbeSArIHhdIF49IH5CWyh4ICsgMikgJSAxMF0gJiBCWyh4ICsgNCkgJSAxMF07XG4gICAgICAgIH1cbiAgICAgICAgLy8gSW90YSAozrkpXG4gICAgICAgIHNbMF0gXj0gU0hBM19JT1RBX0hbcm91bmRdO1xuICAgICAgICBzWzFdIF49IFNIQTNfSU9UQV9MW3JvdW5kXTtcbiAgICB9XG4gICAgQi5maWxsKDApO1xufVxuLyoqIEtlY2NhayBzcG9uZ2UgZnVuY3Rpb24uICovXG5leHBvcnQgY2xhc3MgS2VjY2FrIGV4dGVuZHMgSGFzaCB7XG4gICAgLy8gTk9URTogd2UgYWNjZXB0IGFyZ3VtZW50cyBpbiBieXRlcyBpbnN0ZWFkIG9mIGJpdHMgaGVyZS5cbiAgICBjb25zdHJ1Y3RvcihibG9ja0xlbiwgc3VmZml4LCBvdXRwdXRMZW4sIGVuYWJsZVhPRiA9IGZhbHNlLCByb3VuZHMgPSAyNCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLmJsb2NrTGVuID0gYmxvY2tMZW47XG4gICAgICAgIHRoaXMuc3VmZml4ID0gc3VmZml4O1xuICAgICAgICB0aGlzLm91dHB1dExlbiA9IG91dHB1dExlbjtcbiAgICAgICAgdGhpcy5lbmFibGVYT0YgPSBlbmFibGVYT0Y7XG4gICAgICAgIHRoaXMucm91bmRzID0gcm91bmRzO1xuICAgICAgICB0aGlzLnBvcyA9IDA7XG4gICAgICAgIHRoaXMucG9zT3V0ID0gMDtcbiAgICAgICAgdGhpcy5maW5pc2hlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmRlc3Ryb3llZCA9IGZhbHNlO1xuICAgICAgICAvLyBDYW4gYmUgcGFzc2VkIGZyb20gdXNlciBhcyBka0xlblxuICAgICAgICBhbnVtYmVyKG91dHB1dExlbik7XG4gICAgICAgIC8vIDE2MDAgPSA1eDUgbWF0cml4IG9mIDY0Yml0LiAgMTYwMCBiaXRzID09PSAyMDAgYnl0ZXNcbiAgICAgICAgLy8gMCA8IGJsb2NrTGVuIDwgMjAwXG4gICAgICAgIGlmICgwID49IHRoaXMuYmxvY2tMZW4gfHwgdGhpcy5ibG9ja0xlbiA+PSAyMDApXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1NoYTMgc3VwcG9ydHMgb25seSBrZWNjYWstZjE2MDAgZnVuY3Rpb24nKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IG5ldyBVaW50OEFycmF5KDIwMCk7XG4gICAgICAgIHRoaXMuc3RhdGUzMiA9IHUzMih0aGlzLnN0YXRlKTtcbiAgICB9XG4gICAga2VjY2FrKCkge1xuICAgICAgICBpZiAoIWlzTEUpXG4gICAgICAgICAgICBieXRlU3dhcDMyKHRoaXMuc3RhdGUzMik7XG4gICAgICAgIGtlY2Nha1AodGhpcy5zdGF0ZTMyLCB0aGlzLnJvdW5kcyk7XG4gICAgICAgIGlmICghaXNMRSlcbiAgICAgICAgICAgIGJ5dGVTd2FwMzIodGhpcy5zdGF0ZTMyKTtcbiAgICAgICAgdGhpcy5wb3NPdXQgPSAwO1xuICAgICAgICB0aGlzLnBvcyA9IDA7XG4gICAgfVxuICAgIHVwZGF0ZShkYXRhKSB7XG4gICAgICAgIGFleGlzdHModGhpcyk7XG4gICAgICAgIGNvbnN0IHsgYmxvY2tMZW4sIHN0YXRlIH0gPSB0aGlzO1xuICAgICAgICBkYXRhID0gdG9CeXRlcyhkYXRhKTtcbiAgICAgICAgY29uc3QgbGVuID0gZGF0YS5sZW5ndGg7XG4gICAgICAgIGZvciAobGV0IHBvcyA9IDA7IHBvcyA8IGxlbjspIHtcbiAgICAgICAgICAgIGNvbnN0IHRha2UgPSBNYXRoLm1pbihibG9ja0xlbiAtIHRoaXMucG9zLCBsZW4gLSBwb3MpO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0YWtlOyBpKyspXG4gICAgICAgICAgICAgICAgc3RhdGVbdGhpcy5wb3MrK10gXj0gZGF0YVtwb3MrK107XG4gICAgICAgICAgICBpZiAodGhpcy5wb3MgPT09IGJsb2NrTGVuKVxuICAgICAgICAgICAgICAgIHRoaXMua2VjY2FrKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGZpbmlzaCgpIHtcbiAgICAgICAgaWYgKHRoaXMuZmluaXNoZWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMuZmluaXNoZWQgPSB0cnVlO1xuICAgICAgICBjb25zdCB7IHN0YXRlLCBzdWZmaXgsIHBvcywgYmxvY2tMZW4gfSA9IHRoaXM7XG4gICAgICAgIC8vIERvIHRoZSBwYWRkaW5nXG4gICAgICAgIHN0YXRlW3Bvc10gXj0gc3VmZml4O1xuICAgICAgICBpZiAoKHN1ZmZpeCAmIDB4ODApICE9PSAwICYmIHBvcyA9PT0gYmxvY2tMZW4gLSAxKVxuICAgICAgICAgICAgdGhpcy5rZWNjYWsoKTtcbiAgICAgICAgc3RhdGVbYmxvY2tMZW4gLSAxXSBePSAweDgwO1xuICAgICAgICB0aGlzLmtlY2NhaygpO1xuICAgIH1cbiAgICB3cml0ZUludG8ob3V0KSB7XG4gICAgICAgIGFleGlzdHModGhpcywgZmFsc2UpO1xuICAgICAgICBhYnl0ZXMob3V0KTtcbiAgICAgICAgdGhpcy5maW5pc2goKTtcbiAgICAgICAgY29uc3QgYnVmZmVyT3V0ID0gdGhpcy5zdGF0ZTtcbiAgICAgICAgY29uc3QgeyBibG9ja0xlbiB9ID0gdGhpcztcbiAgICAgICAgZm9yIChsZXQgcG9zID0gMCwgbGVuID0gb3V0Lmxlbmd0aDsgcG9zIDwgbGVuOykge1xuICAgICAgICAgICAgaWYgKHRoaXMucG9zT3V0ID49IGJsb2NrTGVuKVxuICAgICAgICAgICAgICAgIHRoaXMua2VjY2FrKCk7XG4gICAgICAgICAgICBjb25zdCB0YWtlID0gTWF0aC5taW4oYmxvY2tMZW4gLSB0aGlzLnBvc091dCwgbGVuIC0gcG9zKTtcbiAgICAgICAgICAgIG91dC5zZXQoYnVmZmVyT3V0LnN1YmFycmF5KHRoaXMucG9zT3V0LCB0aGlzLnBvc091dCArIHRha2UpLCBwb3MpO1xuICAgICAgICAgICAgdGhpcy5wb3NPdXQgKz0gdGFrZTtcbiAgICAgICAgICAgIHBvcyArPSB0YWtlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBvdXQ7XG4gICAgfVxuICAgIHhvZkludG8ob3V0KSB7XG4gICAgICAgIC8vIFNoYTMvS2VjY2FrIHVzYWdlIHdpdGggWE9GIGlzIHByb2JhYmx5IG1pc3Rha2UsIG9ubHkgU0hBS0UgaW5zdGFuY2VzIGNhbiBkbyBYT0ZcbiAgICAgICAgaWYgKCF0aGlzLmVuYWJsZVhPRilcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignWE9GIGlzIG5vdCBwb3NzaWJsZSBmb3IgdGhpcyBpbnN0YW5jZScpO1xuICAgICAgICByZXR1cm4gdGhpcy53cml0ZUludG8ob3V0KTtcbiAgICB9XG4gICAgeG9mKGJ5dGVzKSB7XG4gICAgICAgIGFudW1iZXIoYnl0ZXMpO1xuICAgICAgICByZXR1cm4gdGhpcy54b2ZJbnRvKG5ldyBVaW50OEFycmF5KGJ5dGVzKSk7XG4gICAgfVxuICAgIGRpZ2VzdEludG8ob3V0KSB7XG4gICAgICAgIGFvdXRwdXQob3V0LCB0aGlzKTtcbiAgICAgICAgaWYgKHRoaXMuZmluaXNoZWQpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2RpZ2VzdCgpIHdhcyBhbHJlYWR5IGNhbGxlZCcpO1xuICAgICAgICB0aGlzLndyaXRlSW50byhvdXQpO1xuICAgICAgICB0aGlzLmRlc3Ryb3koKTtcbiAgICAgICAgcmV0dXJuIG91dDtcbiAgICB9XG4gICAgZGlnZXN0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kaWdlc3RJbnRvKG5ldyBVaW50OEFycmF5KHRoaXMub3V0cHV0TGVuKSk7XG4gICAgfVxuICAgIGRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMuZGVzdHJveWVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5zdGF0ZS5maWxsKDApO1xuICAgIH1cbiAgICBfY2xvbmVJbnRvKHRvKSB7XG4gICAgICAgIGNvbnN0IHsgYmxvY2tMZW4sIHN1ZmZpeCwgb3V0cHV0TGVuLCByb3VuZHMsIGVuYWJsZVhPRiB9ID0gdGhpcztcbiAgICAgICAgdG8gfHwgKHRvID0gbmV3IEtlY2NhayhibG9ja0xlbiwgc3VmZml4LCBvdXRwdXRMZW4sIGVuYWJsZVhPRiwgcm91bmRzKSk7XG4gICAgICAgIHRvLnN0YXRlMzIuc2V0KHRoaXMuc3RhdGUzMik7XG4gICAgICAgIHRvLnBvcyA9IHRoaXMucG9zO1xuICAgICAgICB0by5wb3NPdXQgPSB0aGlzLnBvc091dDtcbiAgICAgICAgdG8uZmluaXNoZWQgPSB0aGlzLmZpbmlzaGVkO1xuICAgICAgICB0by5yb3VuZHMgPSByb3VuZHM7XG4gICAgICAgIC8vIFN1ZmZpeCBjYW4gY2hhbmdlIGluIGNTSEFLRVxuICAgICAgICB0by5zdWZmaXggPSBzdWZmaXg7XG4gICAgICAgIHRvLm91dHB1dExlbiA9IG91dHB1dExlbjtcbiAgICAgICAgdG8uZW5hYmxlWE9GID0gZW5hYmxlWE9GO1xuICAgICAgICB0by5kZXN0cm95ZWQgPSB0aGlzLmRlc3Ryb3llZDtcbiAgICAgICAgcmV0dXJuIHRvO1xuICAgIH1cbn1cbmNvbnN0IGdlbiA9IChzdWZmaXgsIGJsb2NrTGVuLCBvdXRwdXRMZW4pID0+IHdyYXBDb25zdHJ1Y3RvcigoKSA9PiBuZXcgS2VjY2FrKGJsb2NrTGVuLCBzdWZmaXgsIG91dHB1dExlbikpO1xuLyoqIFNIQTMtMjI0IGhhc2ggZnVuY3Rpb24uICovXG5leHBvcnQgY29uc3Qgc2hhM18yMjQgPSAvKiBAX19QVVJFX18gKi8gZ2VuKDB4MDYsIDE0NCwgMjI0IC8gOCk7XG4vKiogU0hBMy0yNTYgaGFzaCBmdW5jdGlvbi4gRGlmZmVyZW50IGZyb20ga2VjY2FrLTI1Ni4gKi9cbmV4cG9ydCBjb25zdCBzaGEzXzI1NiA9IC8qIEBfX1BVUkVfXyAqLyBnZW4oMHgwNiwgMTM2LCAyNTYgLyA4KTtcbi8qKiBTSEEzLTM4NCBoYXNoIGZ1bmN0aW9uLiAqL1xuZXhwb3J0IGNvbnN0IHNoYTNfMzg0ID0gLyogQF9fUFVSRV9fICovIGdlbigweDA2LCAxMDQsIDM4NCAvIDgpO1xuLyoqIFNIQTMtNTEyIGhhc2ggZnVuY3Rpb24uICovXG5leHBvcnQgY29uc3Qgc2hhM181MTIgPSAvKiBAX19QVVJFX18gKi8gZ2VuKDB4MDYsIDcyLCA1MTIgLyA4KTtcbi8qKiBrZWNjYWstMjI0IGhhc2ggZnVuY3Rpb24uICovXG5leHBvcnQgY29uc3Qga2VjY2FrXzIyNCA9IC8qIEBfX1BVUkVfXyAqLyBnZW4oMHgwMSwgMTQ0LCAyMjQgLyA4KTtcbi8qKiBrZWNjYWstMjU2IGhhc2ggZnVuY3Rpb24uIERpZmZlcmVudCBmcm9tIFNIQTMtMjU2LiAqL1xuZXhwb3J0IGNvbnN0IGtlY2Nha18yNTYgPSAvKiBAX19QVVJFX18gKi8gZ2VuKDB4MDEsIDEzNiwgMjU2IC8gOCk7XG4vKioga2VjY2FrLTM4NCBoYXNoIGZ1bmN0aW9uLiAqL1xuZXhwb3J0IGNvbnN0IGtlY2Nha18zODQgPSAvKiBAX19QVVJFX18gKi8gZ2VuKDB4MDEsIDEwNCwgMzg0IC8gOCk7XG4vKioga2VjY2FrLTUxMiBoYXNoIGZ1bmN0aW9uLiAqL1xuZXhwb3J0IGNvbnN0IGtlY2Nha181MTIgPSAvKiBAX19QVVJFX18gKi8gZ2VuKDB4MDEsIDcyLCA1MTIgLyA4KTtcbmNvbnN0IGdlblNoYWtlID0gKHN1ZmZpeCwgYmxvY2tMZW4sIG91dHB1dExlbikgPT4gd3JhcFhPRkNvbnN0cnVjdG9yV2l0aE9wdHMoKG9wdHMgPSB7fSkgPT4gbmV3IEtlY2NhayhibG9ja0xlbiwgc3VmZml4LCBvcHRzLmRrTGVuID09PSB1bmRlZmluZWQgPyBvdXRwdXRMZW4gOiBvcHRzLmRrTGVuLCB0cnVlKSk7XG4vKiogU0hBS0UxMjggWE9GIHdpdGggMTI4LWJpdCBzZWN1cml0eS4gKi9cbmV4cG9ydCBjb25zdCBzaGFrZTEyOCA9IC8qIEBfX1BVUkVfXyAqLyBnZW5TaGFrZSgweDFmLCAxNjgsIDEyOCAvIDgpO1xuLyoqIFNIQUtFMjU2IFhPRiB3aXRoIDI1Ni1iaXQgc2VjdXJpdHkuICovXG5leHBvcnQgY29uc3Qgc2hha2UyNTYgPSAvKiBAX19QVVJFX18gKi8gZ2VuU2hha2UoMHgxZiwgMTM2LCAyNTYgLyA4KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNoYTMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/esm/sha3.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/esm/sha512.js":
/*!**************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/sha512.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SHA384: function() { return /* binding */ SHA384; },\n/* harmony export */   SHA512: function() { return /* binding */ SHA512; },\n/* harmony export */   SHA512_224: function() { return /* binding */ SHA512_224; },\n/* harmony export */   SHA512_256: function() { return /* binding */ SHA512_256; },\n/* harmony export */   sha384: function() { return /* binding */ sha384; },\n/* harmony export */   sha512: function() { return /* binding */ sha512; },\n/* harmony export */   sha512_224: function() { return /* binding */ sha512_224; },\n/* harmony export */   sha512_256: function() { return /* binding */ sha512_256; }\n/* harmony export */ });\n/* harmony import */ var _md_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_md.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/_md.js\");\n/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_u64.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/_u64.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/utils.js\");\n/**\n * SHA2-512 a.k.a. sha512 and sha384. It is slower than sha256 in js because u64 operations are slow.\n *\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [the paper on truncated SHA512/256](https://eprint.iacr.org/2010/548.pdf).\n * @module\n */\n\n\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nclass SHA512 extends _md_js__WEBPACK_IMPORTED_MODULE_1__.HashMD {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSH(W15h, W15l, 1) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSH(W15h, W15l, 8) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].shrSH(W15h, W15l, 7);\n            const s0l = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSL(W15h, W15l, 1) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSL(W15h, W15l, 8) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSH(W2h, W2l, 19) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBH(W2h, W2l, 61) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].shrSH(W2h, W2l, 6);\n            const s1l = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSL(W2h, W2l, 19) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBL(W2h, W2l, 61) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSH(Eh, El, 14) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSH(Eh, El, 18) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSL(Eh, El, 14) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSL(Eh, El, 18) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSH(Ah, Al, 28) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBH(Ah, Al, 34) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSL(Ah, Al, 28) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBL(Ah, Al, 34) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\n/** SHA2-512 hash function. */\nconst sha512 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new SHA512());\n/** SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks. */\nconst sha512_224 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new SHA512_224());\n/** SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks. */\nconst sha512_256 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new SHA512_256());\n/** SHA2-384 hash function. */\nconst sha384 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new SHA384());\n//# sourceMappingURL=sha512.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/esm/sha512.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@noble/hashes/esm/utils.js":
/*!*************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/utils.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hash: function() { return /* binding */ Hash; },\n/* harmony export */   asyncLoop: function() { return /* binding */ asyncLoop; },\n/* harmony export */   byteSwap: function() { return /* binding */ byteSwap; },\n/* harmony export */   byteSwap32: function() { return /* binding */ byteSwap32; },\n/* harmony export */   byteSwapIfBE: function() { return /* binding */ byteSwapIfBE; },\n/* harmony export */   bytesToHex: function() { return /* binding */ bytesToHex; },\n/* harmony export */   checkOpts: function() { return /* binding */ checkOpts; },\n/* harmony export */   concatBytes: function() { return /* binding */ concatBytes; },\n/* harmony export */   createView: function() { return /* binding */ createView; },\n/* harmony export */   hexToBytes: function() { return /* binding */ hexToBytes; },\n/* harmony export */   isBytes: function() { return /* binding */ isBytes; },\n/* harmony export */   isLE: function() { return /* binding */ isLE; },\n/* harmony export */   nextTick: function() { return /* binding */ nextTick; },\n/* harmony export */   randomBytes: function() { return /* binding */ randomBytes; },\n/* harmony export */   rotl: function() { return /* binding */ rotl; },\n/* harmony export */   rotr: function() { return /* binding */ rotr; },\n/* harmony export */   toBytes: function() { return /* binding */ toBytes; },\n/* harmony export */   u32: function() { return /* binding */ u32; },\n/* harmony export */   u8: function() { return /* binding */ u8; },\n/* harmony export */   utf8ToBytes: function() { return /* binding */ utf8ToBytes; },\n/* harmony export */   wrapConstructor: function() { return /* binding */ wrapConstructor; },\n/* harmony export */   wrapConstructorWithOpts: function() { return /* binding */ wrapConstructorWithOpts; },\n/* harmony export */   wrapXOFConstructorWithOpts: function() { return /* binding */ wrapXOFConstructorWithOpts; }\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/crypto */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/crypto.js\");\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_assert.js */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/_assert.js\");\n/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\n\n\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n// Cast array to different type\nfunction u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\nfunction u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n// Cast array to view\nfunction createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nfunction rotr(word, shift) {\n    return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nfunction rotl(word, shift) {\n    return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nconst isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n// The byte swap operation for uint32\nfunction byteSwap(word) {\n    return (((word << 24) & 0xff000000) |\n        ((word << 8) & 0xff0000) |\n        ((word >>> 8) & 0xff00) |\n        ((word >>> 24) & 0xff));\n}\n/** Conditionally byte swap if on a big-endian platform */\nconst byteSwapIfBE = isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** In place byte swap for Uint32Array */\nfunction byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.abytes)(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nconst nextTick = async () => { };\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * Convert JS string to byte array.\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('utf8ToBytes expected string, got ' + typeof str);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.abytes)(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.abytes)(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n/** For runtime check if class implements interface */\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** Wraps hash function, creating an interface on top of it */\nfunction wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nfunction wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nfunction randomBytes(bytesLength = 32) {\n    if (_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_1__.crypto && typeof _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_1__.crypto.getRandomValues === 'function') {\n        return _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_1__.crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_1__.crypto && typeof _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_1__.crypto.randomBytes === 'function') {\n        return _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_1__.crypto.randomBytes(bytesLength);\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@noble/hashes/esm/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/addressToEvm.js":
/*!********************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/addressToEvm.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addressToEvm: function() { return /* binding */ addressToEvm; }\n/* harmony export */ });\n/* harmony import */ var _decode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decode.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/decode.js\");\n\n/**\n * @name addressToEvm\n * @summary Converts an SS58 address to its corresponding EVM address.\n */ function addressToEvm(address, ignoreChecksum) {\n    return (0,_decode_js__WEBPACK_IMPORTED_MODULE_0__.decodeAddress)(address, ignoreChecksum).subarray(0, 20);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9hZGRyZXNzVG9Fdm0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNEM7QUFDNUM7OztDQUdDLEdBQ00sU0FBU0MsYUFBYUMsT0FBTyxFQUFFQyxjQUFjO0lBQ2hELE9BQU9ILHlEQUFhQSxDQUFDRSxTQUFTQyxnQkFBZ0JDLFFBQVEsQ0FBQyxHQUFHO0FBQzlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9hZGRyZXNzVG9Fdm0uanM/NjVhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWNvZGVBZGRyZXNzIH0gZnJvbSAnLi9kZWNvZGUuanMnO1xuLyoqXG4gKiBAbmFtZSBhZGRyZXNzVG9Fdm1cbiAqIEBzdW1tYXJ5IENvbnZlcnRzIGFuIFNTNTggYWRkcmVzcyB0byBpdHMgY29ycmVzcG9uZGluZyBFVk0gYWRkcmVzcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFkZHJlc3NUb0V2bShhZGRyZXNzLCBpZ25vcmVDaGVja3N1bSkge1xuICAgIHJldHVybiBkZWNvZGVBZGRyZXNzKGFkZHJlc3MsIGlnbm9yZUNoZWNrc3VtKS5zdWJhcnJheSgwLCAyMCk7XG59XG4iXSwibmFtZXMiOlsiZGVjb2RlQWRkcmVzcyIsImFkZHJlc3NUb0V2bSIsImFkZHJlc3MiLCJpZ25vcmVDaGVja3N1bSIsInN1YmFycmF5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/addressToEvm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/check.js":
/*!*************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/check.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkAddress: function() { return /* binding */ checkAddress; }\n/* harmony export */ });\n/* harmony import */ var _base58_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base58/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/base58/bs58.js\");\n/* harmony import */ var _checksum_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./checksum.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/checksum.js\");\n/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaults.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/defaults.js\");\n\n\n\n/**\n * @name checkAddress\n * @summary Validates an ss58 address.\n * @description\n * From the provided input, validate that the address is a valid input.\n */ function checkAddress(address, prefix) {\n    let decoded;\n    try {\n        decoded = (0,_base58_index_js__WEBPACK_IMPORTED_MODULE_0__.base58Decode)(address);\n    } catch (error) {\n        return [\n            false,\n            error.message\n        ];\n    }\n    const [isValid, , , ss58Decoded] = (0,_checksum_js__WEBPACK_IMPORTED_MODULE_1__.checkAddressChecksum)(decoded);\n    if (ss58Decoded !== prefix) {\n        return [\n            false,\n            \"Prefix mismatch, expected \".concat(prefix, \", found \").concat(ss58Decoded)\n        ];\n    } else if (!_defaults_js__WEBPACK_IMPORTED_MODULE_2__.defaults.allowedEncodedLengths.includes(decoded.length)) {\n        return [\n            false,\n            \"Invalid decoded address length\"\n        ];\n    }\n    return [\n        isValid,\n        isValid ? null : \"Invalid decoded address checksum\"\n    ];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9jaGVjay5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWtEO0FBQ0c7QUFDWjtBQUN6Qzs7Ozs7Q0FLQyxHQUNNLFNBQVNHLGFBQWFDLE9BQU8sRUFBRUMsTUFBTTtJQUN4QyxJQUFJQztJQUNKLElBQUk7UUFDQUEsVUFBVU4sOERBQVlBLENBQUNJO0lBQzNCLEVBQ0EsT0FBT0csT0FBTztRQUNWLE9BQU87WUFBQztZQUFPQSxNQUFNQyxPQUFPO1NBQUM7SUFDakM7SUFDQSxNQUFNLENBQUNDLGFBQWFDLFlBQVksR0FBR1Qsa0VBQW9CQSxDQUFDSztJQUN4RCxJQUFJSSxnQkFBZ0JMLFFBQVE7UUFDeEIsT0FBTztZQUFDO1lBQVEsNkJBQTZDSyxPQUFqQkwsUUFBTyxZQUFzQixPQUFaSztTQUFjO0lBQy9FLE9BQ0ssSUFBSSxDQUFDUixrREFBUUEsQ0FBQ1MscUJBQXFCLENBQUNDLFFBQVEsQ0FBQ04sUUFBUU8sTUFBTSxHQUFHO1FBQy9ELE9BQU87WUFBQztZQUFPO1NBQWlDO0lBQ3BEO0lBQ0EsT0FBTztRQUFDSjtRQUFTQSxVQUFVLE9BQU87S0FBbUM7QUFDekUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9hZGRyZXNzL2NoZWNrLmpzPzIzYzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZTU4RGVjb2RlIH0gZnJvbSAnLi4vYmFzZTU4L2luZGV4LmpzJztcbmltcG9ydCB7IGNoZWNrQWRkcmVzc0NoZWNrc3VtIH0gZnJvbSAnLi9jaGVja3N1bS5qcyc7XG5pbXBvcnQgeyBkZWZhdWx0cyB9IGZyb20gJy4vZGVmYXVsdHMuanMnO1xuLyoqXG4gKiBAbmFtZSBjaGVja0FkZHJlc3NcbiAqIEBzdW1tYXJ5IFZhbGlkYXRlcyBhbiBzczU4IGFkZHJlc3MuXG4gKiBAZGVzY3JpcHRpb25cbiAqIEZyb20gdGhlIHByb3ZpZGVkIGlucHV0LCB2YWxpZGF0ZSB0aGF0IHRoZSBhZGRyZXNzIGlzIGEgdmFsaWQgaW5wdXQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjaGVja0FkZHJlc3MoYWRkcmVzcywgcHJlZml4KSB7XG4gICAgbGV0IGRlY29kZWQ7XG4gICAgdHJ5IHtcbiAgICAgICAgZGVjb2RlZCA9IGJhc2U1OERlY29kZShhZGRyZXNzKTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJldHVybiBbZmFsc2UsIGVycm9yLm1lc3NhZ2VdO1xuICAgIH1cbiAgICBjb25zdCBbaXNWYWxpZCwgLCAsIHNzNThEZWNvZGVkXSA9IGNoZWNrQWRkcmVzc0NoZWNrc3VtKGRlY29kZWQpO1xuICAgIGlmIChzczU4RGVjb2RlZCAhPT0gcHJlZml4KSB7XG4gICAgICAgIHJldHVybiBbZmFsc2UsIGBQcmVmaXggbWlzbWF0Y2gsIGV4cGVjdGVkICR7cHJlZml4fSwgZm91bmQgJHtzczU4RGVjb2RlZH1gXTtcbiAgICB9XG4gICAgZWxzZSBpZiAoIWRlZmF1bHRzLmFsbG93ZWRFbmNvZGVkTGVuZ3Rocy5pbmNsdWRlcyhkZWNvZGVkLmxlbmd0aCkpIHtcbiAgICAgICAgcmV0dXJuIFtmYWxzZSwgJ0ludmFsaWQgZGVjb2RlZCBhZGRyZXNzIGxlbmd0aCddO1xuICAgIH1cbiAgICByZXR1cm4gW2lzVmFsaWQsIGlzVmFsaWQgPyBudWxsIDogJ0ludmFsaWQgZGVjb2RlZCBhZGRyZXNzIGNoZWNrc3VtJ107XG59XG4iXSwibmFtZXMiOlsiYmFzZTU4RGVjb2RlIiwiY2hlY2tBZGRyZXNzQ2hlY2tzdW0iLCJkZWZhdWx0cyIsImNoZWNrQWRkcmVzcyIsImFkZHJlc3MiLCJwcmVmaXgiLCJkZWNvZGVkIiwiZXJyb3IiLCJtZXNzYWdlIiwiaXNWYWxpZCIsInNzNThEZWNvZGVkIiwiYWxsb3dlZEVuY29kZWRMZW5ndGhzIiwiaW5jbHVkZXMiLCJsZW5ndGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/check.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/checksum.js":
/*!****************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/checksum.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkAddressChecksum: function() { return /* binding */ checkAddressChecksum; }\n/* harmony export */ });\n/* harmony import */ var _sshash_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sshash.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/sshash.js\");\n\nfunction checkAddressChecksum(decoded) {\n    const ss58Length = decoded[0] & 64 ? 2 : 1;\n    const ss58Decoded = ss58Length === 1 ? decoded[0] : (decoded[0] & 63) << 2 | decoded[1] >> 6 | (decoded[1] & 63) << 8;\n    // 32/33 bytes public + 2 bytes checksum + prefix\n    const isPublicKey = [\n        34 + ss58Length,\n        35 + ss58Length\n    ].includes(decoded.length);\n    const length = decoded.length - (isPublicKey ? 2 : 1);\n    // calculate the hash and do the checksum byte checks\n    const hash = (0,_sshash_js__WEBPACK_IMPORTED_MODULE_0__.sshash)(decoded.subarray(0, length));\n    const isValid = (decoded[0] & 128) === 0 && ![\n        46,\n        47\n    ].includes(decoded[0]) && (isPublicKey ? decoded[decoded.length - 2] === hash[0] && decoded[decoded.length - 1] === hash[1] : decoded[decoded.length - 1] === hash[0]);\n    return [\n        isValid,\n        length,\n        ss58Length,\n        ss58Decoded\n    ];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9jaGVja3N1bS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxQztBQUM5QixTQUFTQyxxQkFBcUJDLE9BQU87SUFDeEMsTUFBTUMsYUFBYSxPQUFRLENBQUMsRUFBRSxHQUFHLEtBQWUsSUFBSTtJQUNwRCxNQUFNQyxjQUFjRCxlQUFlLElBQzdCRCxPQUFPLENBQUMsRUFBRSxHQUNWLENBQUVBLE9BQU8sQ0FBQyxFQUFFLEdBQUcsRUFBVSxLQUFNLElBQU1BLE9BQU8sQ0FBQyxFQUFFLElBQUksSUFBTSxDQUFDQSxPQUFPLENBQUMsRUFBRSxHQUFHLEVBQVUsS0FBTTtJQUM3RixpREFBaUQ7SUFDakQsTUFBTUcsY0FBYztRQUFDLEtBQUtGO1FBQVksS0FBS0E7S0FBVyxDQUFDRyxRQUFRLENBQUNKLFFBQVFLLE1BQU07SUFDOUUsTUFBTUEsU0FBU0wsUUFBUUssTUFBTSxHQUFJRixDQUFBQSxjQUFjLElBQUk7SUFDbkQscURBQXFEO0lBQ3JELE1BQU1HLE9BQU9SLGtEQUFNQSxDQUFDRSxRQUFRTyxRQUFRLENBQUMsR0FBR0Y7SUFDeEMsTUFBTUcsVUFBVSxDQUFDUixPQUFPLENBQUMsRUFBRSxHQUFHLEdBQVUsTUFBTyxLQUFLLENBQUM7UUFBQztRQUFJO0tBQUcsQ0FBQ0ksUUFBUSxDQUFDSixPQUFPLENBQUMsRUFBRSxLQUFNRyxDQUFBQSxjQUNqRkgsT0FBTyxDQUFDQSxRQUFRSyxNQUFNLEdBQUcsRUFBRSxLQUFLQyxJQUFJLENBQUMsRUFBRSxJQUFJTixPQUFPLENBQUNBLFFBQVFLLE1BQU0sR0FBRyxFQUFFLEtBQUtDLElBQUksQ0FBQyxFQUFFLEdBQ2xGTixPQUFPLENBQUNBLFFBQVFLLE1BQU0sR0FBRyxFQUFFLEtBQUtDLElBQUksQ0FBQyxFQUFFO0lBQzdDLE9BQU87UUFBQ0U7UUFBU0g7UUFBUUo7UUFBWUM7S0FBWTtBQUNyRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2FkZHJlc3MvY2hlY2tzdW0uanM/YjNiZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzc2hhc2ggfSBmcm9tICcuL3NzaGFzaC5qcyc7XG5leHBvcnQgZnVuY3Rpb24gY2hlY2tBZGRyZXNzQ2hlY2tzdW0oZGVjb2RlZCkge1xuICAgIGNvbnN0IHNzNThMZW5ndGggPSAoZGVjb2RlZFswXSAmIDBiMDEwMF8wMDAwKSA/IDIgOiAxO1xuICAgIGNvbnN0IHNzNThEZWNvZGVkID0gc3M1OExlbmd0aCA9PT0gMVxuICAgICAgICA/IGRlY29kZWRbMF1cbiAgICAgICAgOiAoKGRlY29kZWRbMF0gJiAwYjAwMTFfMTExMSkgPDwgMikgfCAoZGVjb2RlZFsxXSA+PiA2KSB8ICgoZGVjb2RlZFsxXSAmIDBiMDAxMV8xMTExKSA8PCA4KTtcbiAgICAvLyAzMi8zMyBieXRlcyBwdWJsaWMgKyAyIGJ5dGVzIGNoZWNrc3VtICsgcHJlZml4XG4gICAgY29uc3QgaXNQdWJsaWNLZXkgPSBbMzQgKyBzczU4TGVuZ3RoLCAzNSArIHNzNThMZW5ndGhdLmluY2x1ZGVzKGRlY29kZWQubGVuZ3RoKTtcbiAgICBjb25zdCBsZW5ndGggPSBkZWNvZGVkLmxlbmd0aCAtIChpc1B1YmxpY0tleSA/IDIgOiAxKTtcbiAgICAvLyBjYWxjdWxhdGUgdGhlIGhhc2ggYW5kIGRvIHRoZSBjaGVja3N1bSBieXRlIGNoZWNrc1xuICAgIGNvbnN0IGhhc2ggPSBzc2hhc2goZGVjb2RlZC5zdWJhcnJheSgwLCBsZW5ndGgpKTtcbiAgICBjb25zdCBpc1ZhbGlkID0gKGRlY29kZWRbMF0gJiAwYjEwMDBfMDAwMCkgPT09IDAgJiYgIVs0NiwgNDddLmluY2x1ZGVzKGRlY29kZWRbMF0pICYmIChpc1B1YmxpY0tleVxuICAgICAgICA/IGRlY29kZWRbZGVjb2RlZC5sZW5ndGggLSAyXSA9PT0gaGFzaFswXSAmJiBkZWNvZGVkW2RlY29kZWQubGVuZ3RoIC0gMV0gPT09IGhhc2hbMV1cbiAgICAgICAgOiBkZWNvZGVkW2RlY29kZWQubGVuZ3RoIC0gMV0gPT09IGhhc2hbMF0pO1xuICAgIHJldHVybiBbaXNWYWxpZCwgbGVuZ3RoLCBzczU4TGVuZ3RoLCBzczU4RGVjb2RlZF07XG59XG4iXSwibmFtZXMiOlsic3NoYXNoIiwiY2hlY2tBZGRyZXNzQ2hlY2tzdW0iLCJkZWNvZGVkIiwic3M1OExlbmd0aCIsInNzNThEZWNvZGVkIiwiaXNQdWJsaWNLZXkiLCJpbmNsdWRlcyIsImxlbmd0aCIsImhhc2giLCJzdWJhcnJheSIsImlzVmFsaWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/checksum.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/decode.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/decode.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeAddress: function() { return /* binding */ decodeAddress; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/u8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/hex.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _base58_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base58/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/base58/bs58.js\");\n/* harmony import */ var _checksum_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./checksum.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/checksum.js\");\n/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaults.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/defaults.js\");\n\n\n\n\nfunction decodeAddress(encoded, ignoreChecksum) {\n    let ss58Format = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : -1;\n    if (!encoded) {\n        throw new Error(\"Invalid empty address passed\");\n    }\n    if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isU8a)(encoded) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isHex)(encoded)) {\n        return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aToU8a)(encoded);\n    }\n    try {\n        const decoded = (0,_base58_index_js__WEBPACK_IMPORTED_MODULE_3__.base58Decode)(encoded);\n        if (!_defaults_js__WEBPACK_IMPORTED_MODULE_4__.defaults.allowedEncodedLengths.includes(decoded.length)) {\n            throw new Error(\"Invalid decoded address length\");\n        }\n        const [isValid, endPos, ss58Length, ss58Decoded] = (0,_checksum_js__WEBPACK_IMPORTED_MODULE_5__.checkAddressChecksum)(decoded);\n        if (!isValid && !ignoreChecksum) {\n            throw new Error(\"Invalid decoded address checksum\");\n        } else if (ss58Format !== -1 && ss58Format !== ss58Decoded) {\n            throw new Error(\"Expected ss58Format \".concat(ss58Format, \", received \").concat(ss58Decoded));\n        }\n        return decoded.slice(ss58Length, endPos);\n    } catch (error) {\n        throw new Error(\"Decoding \".concat(encoded, \": \").concat(error.message));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9kZWNvZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUF3RDtBQUNOO0FBQ0c7QUFDWjtBQUNsQyxTQUFTTSxjQUFjQyxPQUFPLEVBQUVDLGNBQWM7UUFBRUMsYUFBQUEsaUVBQWEsQ0FBQztJQUNqRSxJQUFJLENBQUNGLFNBQVM7UUFDVixNQUFNLElBQUlHLE1BQU07SUFDcEI7SUFDQSxJQUFJVCxxREFBS0EsQ0FBQ00sWUFBWVAscURBQUtBLENBQUNPLFVBQVU7UUFDbEMsT0FBT0wsd0RBQVFBLENBQUNLO0lBQ3BCO0lBQ0EsSUFBSTtRQUNBLE1BQU1JLFVBQVVSLDhEQUFZQSxDQUFDSTtRQUM3QixJQUFJLENBQUNGLGtEQUFRQSxDQUFDTyxxQkFBcUIsQ0FBQ0MsUUFBUSxDQUFDRixRQUFRRyxNQUFNLEdBQUc7WUFDMUQsTUFBTSxJQUFJSixNQUFNO1FBQ3BCO1FBQ0EsTUFBTSxDQUFDSyxTQUFTQyxRQUFRQyxZQUFZQyxZQUFZLEdBQUdkLGtFQUFvQkEsQ0FBQ087UUFDeEUsSUFBSSxDQUFDSSxXQUFXLENBQUNQLGdCQUFnQjtZQUM3QixNQUFNLElBQUlFLE1BQU07UUFDcEIsT0FDSyxJQUFJRCxlQUFlLENBQUMsS0FBS0EsZUFBZVMsYUFBYTtZQUN0RCxNQUFNLElBQUlSLE1BQU0sdUJBQStDUSxPQUF4QlQsWUFBVyxlQUF5QixPQUFaUztRQUNuRTtRQUNBLE9BQU9QLFFBQVFRLEtBQUssQ0FBQ0YsWUFBWUQ7SUFDckMsRUFDQSxPQUFPSSxPQUFPO1FBQ1YsTUFBTSxJQUFJVixNQUFNLFlBQXdCVSxPQUFaYixTQUFRLE1BQWtCLE9BQWRhLE1BQU1DLE9BQU87SUFDekQ7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2FkZHJlc3MvZGVjb2RlLmpzPzkwY2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNIZXgsIGlzVThhLCB1OGFUb1U4YSB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbmltcG9ydCB7IGJhc2U1OERlY29kZSB9IGZyb20gJy4uL2Jhc2U1OC9pbmRleC5qcyc7XG5pbXBvcnQgeyBjaGVja0FkZHJlc3NDaGVja3N1bSB9IGZyb20gJy4vY2hlY2tzdW0uanMnO1xuaW1wb3J0IHsgZGVmYXVsdHMgfSBmcm9tICcuL2RlZmF1bHRzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVBZGRyZXNzKGVuY29kZWQsIGlnbm9yZUNoZWNrc3VtLCBzczU4Rm9ybWF0ID0gLTEpIHtcbiAgICBpZiAoIWVuY29kZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGVtcHR5IGFkZHJlc3MgcGFzc2VkJyk7XG4gICAgfVxuICAgIGlmIChpc1U4YShlbmNvZGVkKSB8fCBpc0hleChlbmNvZGVkKSkge1xuICAgICAgICByZXR1cm4gdThhVG9VOGEoZW5jb2RlZCk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGRlY29kZWQgPSBiYXNlNThEZWNvZGUoZW5jb2RlZCk7XG4gICAgICAgIGlmICghZGVmYXVsdHMuYWxsb3dlZEVuY29kZWRMZW5ndGhzLmluY2x1ZGVzKGRlY29kZWQubGVuZ3RoKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGRlY29kZWQgYWRkcmVzcyBsZW5ndGgnKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBbaXNWYWxpZCwgZW5kUG9zLCBzczU4TGVuZ3RoLCBzczU4RGVjb2RlZF0gPSBjaGVja0FkZHJlc3NDaGVja3N1bShkZWNvZGVkKTtcbiAgICAgICAgaWYgKCFpc1ZhbGlkICYmICFpZ25vcmVDaGVja3N1bSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGRlY29kZWQgYWRkcmVzcyBjaGVja3N1bScpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHNzNThGb3JtYXQgIT09IC0xICYmIHNzNThGb3JtYXQgIT09IHNzNThEZWNvZGVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEV4cGVjdGVkIHNzNThGb3JtYXQgJHtzczU4Rm9ybWF0fSwgcmVjZWl2ZWQgJHtzczU4RGVjb2RlZH1gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZGVjb2RlZC5zbGljZShzczU4TGVuZ3RoLCBlbmRQb3MpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBEZWNvZGluZyAke2VuY29kZWR9OiAke2Vycm9yLm1lc3NhZ2V9YCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbImlzSGV4IiwiaXNVOGEiLCJ1OGFUb1U4YSIsImJhc2U1OERlY29kZSIsImNoZWNrQWRkcmVzc0NoZWNrc3VtIiwiZGVmYXVsdHMiLCJkZWNvZGVBZGRyZXNzIiwiZW5jb2RlZCIsImlnbm9yZUNoZWNrc3VtIiwic3M1OEZvcm1hdCIsIkVycm9yIiwiZGVjb2RlZCIsImFsbG93ZWRFbmNvZGVkTGVuZ3RocyIsImluY2x1ZGVzIiwibGVuZ3RoIiwiaXNWYWxpZCIsImVuZFBvcyIsInNzNThMZW5ndGgiLCJzczU4RGVjb2RlZCIsInNsaWNlIiwiZXJyb3IiLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/decode.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/defaults.js":
/*!****************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/defaults.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaults: function() { return /* binding */ defaults; }\n/* harmony export */ });\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../networks.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/interfaces.js\");\n\nconst defaults = {\n    allowedDecodedLengths: [\n        1,\n        2,\n        4,\n        8,\n        32,\n        33\n    ],\n    // publicKey has prefix + 2 checksum bytes, short only prefix + 1 checksum byte\n    allowedEncodedLengths: [\n        3,\n        4,\n        6,\n        10,\n        35,\n        36,\n        37,\n        38\n    ],\n    allowedPrefix: _networks_js__WEBPACK_IMPORTED_MODULE_0__.availableNetworks.map((param)=>{\n        let { prefix } = param;\n        return prefix;\n    }),\n    prefix: 42\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9kZWZhdWx0cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFtRDtBQUM1QyxNQUFNQyxXQUFXO0lBQ3BCQyx1QkFBdUI7UUFBQztRQUFHO1FBQUc7UUFBRztRQUFHO1FBQUk7S0FBRztJQUMzQywrRUFBK0U7SUFDL0VDLHVCQUF1QjtRQUFDO1FBQUc7UUFBRztRQUFHO1FBQUk7UUFBSTtRQUFJO1FBQUk7S0FBRztJQUNwREMsZUFBZUosMkRBQWlCQSxDQUFDSyxHQUFHLENBQUM7WUFBQyxFQUFFQyxNQUFNLEVBQUU7ZUFBS0E7O0lBQ3JEQSxRQUFRO0FBQ1osRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2FkZHJlc3MvZGVmYXVsdHMuanM/NzFiYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhdmFpbGFibGVOZXR3b3JrcyB9IGZyb20gJy4uL25ldHdvcmtzLmpzJztcbmV4cG9ydCBjb25zdCBkZWZhdWx0cyA9IHtcbiAgICBhbGxvd2VkRGVjb2RlZExlbmd0aHM6IFsxLCAyLCA0LCA4LCAzMiwgMzNdLFxuICAgIC8vIHB1YmxpY0tleSBoYXMgcHJlZml4ICsgMiBjaGVja3N1bSBieXRlcywgc2hvcnQgb25seSBwcmVmaXggKyAxIGNoZWNrc3VtIGJ5dGVcbiAgICBhbGxvd2VkRW5jb2RlZExlbmd0aHM6IFszLCA0LCA2LCAxMCwgMzUsIDM2LCAzNywgMzhdLFxuICAgIGFsbG93ZWRQcmVmaXg6IGF2YWlsYWJsZU5ldHdvcmtzLm1hcCgoeyBwcmVmaXggfSkgPT4gcHJlZml4KSxcbiAgICBwcmVmaXg6IDQyXG59O1xuIl0sIm5hbWVzIjpbImF2YWlsYWJsZU5ldHdvcmtzIiwiZGVmYXVsdHMiLCJhbGxvd2VkRGVjb2RlZExlbmd0aHMiLCJhbGxvd2VkRW5jb2RlZExlbmd0aHMiLCJhbGxvd2VkUHJlZml4IiwibWFwIiwicHJlZml4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/defaults.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/derive.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/derive.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deriveAddress: function() { return /* binding */ deriveAddress; }\n/* harmony export */ });\n/* harmony import */ var _key_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../key/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/extractPath.js\");\n/* harmony import */ var _sr25519_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../sr25519/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/derivePublic.js\");\n/* harmony import */ var _decode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decode.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/decode.js\");\n/* harmony import */ var _encode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./encode.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/encode.js\");\n\n\n\n\nfunction filterHard(param) {\n    let { isHard } = param;\n    return isHard;\n}\n/**\n * @name deriveAddress\n * @summary Creates a sr25519 derived address from the supplied and path.\n * @description\n * Creates a sr25519 derived address based on the input address/publicKey and the uri supplied.\n */ function deriveAddress(who, suri, ss58Format) {\n    const { path } = (0,_key_index_js__WEBPACK_IMPORTED_MODULE_0__.keyExtractPath)(suri);\n    if (!path.length || path.every(filterHard)) {\n        throw new Error(\"Expected suri to contain a combination of non-hard paths\");\n    }\n    let publicKey = (0,_decode_js__WEBPACK_IMPORTED_MODULE_1__.decodeAddress)(who);\n    for (const { chainCode } of path){\n        publicKey = (0,_sr25519_index_js__WEBPACK_IMPORTED_MODULE_2__.sr25519DerivePublic)(publicKey, chainCode);\n    }\n    return (0,_encode_js__WEBPACK_IMPORTED_MODULE_3__.encodeAddress)(publicKey, ss58Format);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9kZXJpdmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBaUQ7QUFDUztBQUNkO0FBQ0E7QUFDNUMsU0FBU0ksV0FBVyxLQUFVO1FBQVYsRUFBRUMsTUFBTSxFQUFFLEdBQVY7SUFDaEIsT0FBT0E7QUFDWDtBQUNBOzs7OztDQUtDLEdBQ00sU0FBU0MsY0FBY0MsR0FBRyxFQUFFQyxJQUFJLEVBQUVDLFVBQVU7SUFDL0MsTUFBTSxFQUFFQyxJQUFJLEVBQUUsR0FBR1YsNkRBQWNBLENBQUNRO0lBQ2hDLElBQUksQ0FBQ0UsS0FBS0MsTUFBTSxJQUFJRCxLQUFLRSxLQUFLLENBQUNSLGFBQWE7UUFDeEMsTUFBTSxJQUFJUyxNQUFNO0lBQ3BCO0lBQ0EsSUFBSUMsWUFBWVoseURBQWFBLENBQUNLO0lBQzlCLEtBQUssTUFBTSxFQUFFUSxTQUFTLEVBQUUsSUFBSUwsS0FBTTtRQUM5QkksWUFBWWIsc0VBQW1CQSxDQUFDYSxXQUFXQztJQUMvQztJQUNBLE9BQU9aLHlEQUFhQSxDQUFDVyxXQUFXTDtBQUNwQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2FkZHJlc3MvZGVyaXZlLmpzPzg1YjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsga2V5RXh0cmFjdFBhdGggfSBmcm9tICcuLi9rZXkvaW5kZXguanMnO1xuaW1wb3J0IHsgc3IyNTUxOURlcml2ZVB1YmxpYyB9IGZyb20gJy4uL3NyMjU1MTkvaW5kZXguanMnO1xuaW1wb3J0IHsgZGVjb2RlQWRkcmVzcyB9IGZyb20gJy4vZGVjb2RlLmpzJztcbmltcG9ydCB7IGVuY29kZUFkZHJlc3MgfSBmcm9tICcuL2VuY29kZS5qcyc7XG5mdW5jdGlvbiBmaWx0ZXJIYXJkKHsgaXNIYXJkIH0pIHtcbiAgICByZXR1cm4gaXNIYXJkO1xufVxuLyoqXG4gKiBAbmFtZSBkZXJpdmVBZGRyZXNzXG4gKiBAc3VtbWFyeSBDcmVhdGVzIGEgc3IyNTUxOSBkZXJpdmVkIGFkZHJlc3MgZnJvbSB0aGUgc3VwcGxpZWQgYW5kIHBhdGguXG4gKiBAZGVzY3JpcHRpb25cbiAqIENyZWF0ZXMgYSBzcjI1NTE5IGRlcml2ZWQgYWRkcmVzcyBiYXNlZCBvbiB0aGUgaW5wdXQgYWRkcmVzcy9wdWJsaWNLZXkgYW5kIHRoZSB1cmkgc3VwcGxpZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZXJpdmVBZGRyZXNzKHdobywgc3VyaSwgc3M1OEZvcm1hdCkge1xuICAgIGNvbnN0IHsgcGF0aCB9ID0ga2V5RXh0cmFjdFBhdGgoc3VyaSk7XG4gICAgaWYgKCFwYXRoLmxlbmd0aCB8fCBwYXRoLmV2ZXJ5KGZpbHRlckhhcmQpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgc3VyaSB0byBjb250YWluIGEgY29tYmluYXRpb24gb2Ygbm9uLWhhcmQgcGF0aHMnKTtcbiAgICB9XG4gICAgbGV0IHB1YmxpY0tleSA9IGRlY29kZUFkZHJlc3Mod2hvKTtcbiAgICBmb3IgKGNvbnN0IHsgY2hhaW5Db2RlIH0gb2YgcGF0aCkge1xuICAgICAgICBwdWJsaWNLZXkgPSBzcjI1NTE5RGVyaXZlUHVibGljKHB1YmxpY0tleSwgY2hhaW5Db2RlKTtcbiAgICB9XG4gICAgcmV0dXJuIGVuY29kZUFkZHJlc3MocHVibGljS2V5LCBzczU4Rm9ybWF0KTtcbn1cbiJdLCJuYW1lcyI6WyJrZXlFeHRyYWN0UGF0aCIsInNyMjU1MTlEZXJpdmVQdWJsaWMiLCJkZWNvZGVBZGRyZXNzIiwiZW5jb2RlQWRkcmVzcyIsImZpbHRlckhhcmQiLCJpc0hhcmQiLCJkZXJpdmVBZGRyZXNzIiwid2hvIiwic3VyaSIsInNzNThGb3JtYXQiLCJwYXRoIiwibGVuZ3RoIiwiZXZlcnkiLCJFcnJvciIsInB1YmxpY0tleSIsImNoYWluQ29kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/derive.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/encode.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/encode.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeAddress: function() { return /* binding */ encodeAddress; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/concat.js\");\n/* harmony import */ var _base58_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base58/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/base58/bs58.js\");\n/* harmony import */ var _decode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decode.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/decode.js\");\n/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaults.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/defaults.js\");\n/* harmony import */ var _sshash_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sshash.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/sshash.js\");\n\n\n\n\n\nfunction encodeAddress(key) {\n    let ss58Format = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : _defaults_js__WEBPACK_IMPORTED_MODULE_0__.defaults.prefix;\n    // decode it, this means we can re-encode an address\n    const u8a = (0,_decode_js__WEBPACK_IMPORTED_MODULE_1__.decodeAddress)(key);\n    if (ss58Format < 0 || ss58Format > 16383 || [\n        46,\n        47\n    ].includes(ss58Format)) {\n        throw new Error(\"Out of range ss58Format specified\");\n    } else if (!_defaults_js__WEBPACK_IMPORTED_MODULE_0__.defaults.allowedDecodedLengths.includes(u8a.length)) {\n        throw new Error(\"Expected a valid key to convert, with length \".concat(_defaults_js__WEBPACK_IMPORTED_MODULE_0__.defaults.allowedDecodedLengths.join(\", \")));\n    }\n    const input = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aConcat)(ss58Format < 64 ? [\n        ss58Format\n    ] : [\n        (ss58Format & 252) >> 2 | 64,\n        ss58Format >> 8 | (ss58Format & 3) << 6\n    ], u8a);\n    return (0,_base58_index_js__WEBPACK_IMPORTED_MODULE_3__.base58Encode)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aConcat)(input, (0,_sshash_js__WEBPACK_IMPORTED_MODULE_4__.sshash)(input).subarray(0, [\n        32,\n        33\n    ].includes(u8a.length) ? 2 : 1)));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9lbmNvZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTJDO0FBQ087QUFDTjtBQUNIO0FBQ0o7QUFDOUIsU0FBU0ssY0FBY0MsR0FBRztRQUFFQyxhQUFBQSxpRUFBYUosa0RBQVFBLENBQUNLLE1BQU07SUFDM0Qsb0RBQW9EO0lBQ3BELE1BQU1DLE1BQU1QLHlEQUFhQSxDQUFDSTtJQUMxQixJQUFJLGFBQWMsS0FBT0MsYUFBYSxTQUFVO1FBQUM7UUFBSTtLQUFHLENBQUNHLFFBQVEsQ0FBQ0gsYUFBYTtRQUMzRSxNQUFNLElBQUlJLE1BQU07SUFDcEIsT0FDSyxJQUFJLENBQUNSLGtEQUFRQSxDQUFDUyxxQkFBcUIsQ0FBQ0YsUUFBUSxDQUFDRCxJQUFJSSxNQUFNLEdBQUc7UUFDM0QsTUFBTSxJQUFJRixNQUFNLGdEQUEwRixPQUExQ1Isa0RBQVFBLENBQUNTLHFCQUFxQixDQUFDRSxJQUFJLENBQUM7SUFDeEc7SUFDQSxNQUFNQyxRQUFRZix5REFBU0EsQ0FBQ08sYUFBYSxLQUMvQjtRQUFDQTtLQUFXLEdBQ1o7UUFDSUEsQ0FBQUEsYUFBYSxHQUFvQixLQUFNLElBQUs7UUFDN0NBLGNBQWMsSUFBTSxDQUFDQSxhQUFhLENBQW9CLEtBQU07S0FDaEUsRUFBRUU7SUFDUCxPQUFPUiw4REFBWUEsQ0FBQ0QseURBQVNBLENBQUNlLE9BQU9YLGtEQUFNQSxDQUFDVyxPQUFPQyxRQUFRLENBQUMsR0FBRztRQUFDO1FBQUk7S0FBRyxDQUFDTixRQUFRLENBQUNELElBQUlJLE1BQU0sSUFBSSxJQUFJO0FBQ3ZHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9lbmNvZGUuanM/MmRlZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1OGFDb25jYXQgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG5pbXBvcnQgeyBiYXNlNThFbmNvZGUgfSBmcm9tICcuLi9iYXNlNTgvaW5kZXguanMnO1xuaW1wb3J0IHsgZGVjb2RlQWRkcmVzcyB9IGZyb20gJy4vZGVjb2RlLmpzJztcbmltcG9ydCB7IGRlZmF1bHRzIH0gZnJvbSAnLi9kZWZhdWx0cy5qcyc7XG5pbXBvcnQgeyBzc2hhc2ggfSBmcm9tICcuL3NzaGFzaC5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlQWRkcmVzcyhrZXksIHNzNThGb3JtYXQgPSBkZWZhdWx0cy5wcmVmaXgpIHtcbiAgICAvLyBkZWNvZGUgaXQsIHRoaXMgbWVhbnMgd2UgY2FuIHJlLWVuY29kZSBhbiBhZGRyZXNzXG4gICAgY29uc3QgdThhID0gZGVjb2RlQWRkcmVzcyhrZXkpO1xuICAgIGlmICgoc3M1OEZvcm1hdCA8IDApIHx8IChzczU4Rm9ybWF0ID4gMTYzODMpIHx8IFs0NiwgNDddLmluY2x1ZGVzKHNzNThGb3JtYXQpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignT3V0IG9mIHJhbmdlIHNzNThGb3JtYXQgc3BlY2lmaWVkJyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKCFkZWZhdWx0cy5hbGxvd2VkRGVjb2RlZExlbmd0aHMuaW5jbHVkZXModThhLmxlbmd0aCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBFeHBlY3RlZCBhIHZhbGlkIGtleSB0byBjb252ZXJ0LCB3aXRoIGxlbmd0aCAke2RlZmF1bHRzLmFsbG93ZWREZWNvZGVkTGVuZ3Rocy5qb2luKCcsICcpfWApO1xuICAgIH1cbiAgICBjb25zdCBpbnB1dCA9IHU4YUNvbmNhdChzczU4Rm9ybWF0IDwgNjRcbiAgICAgICAgPyBbc3M1OEZvcm1hdF1cbiAgICAgICAgOiBbXG4gICAgICAgICAgICAoKHNzNThGb3JtYXQgJiAwYjAwMDBfMDAwMF8xMTExXzExMDApID4+IDIpIHwgMGIwMTAwXzAwMDAsXG4gICAgICAgICAgICAoc3M1OEZvcm1hdCA+PiA4KSB8ICgoc3M1OEZvcm1hdCAmIDBiMDAwMF8wMDAwXzAwMDBfMDAxMSkgPDwgNilcbiAgICAgICAgXSwgdThhKTtcbiAgICByZXR1cm4gYmFzZTU4RW5jb2RlKHU4YUNvbmNhdChpbnB1dCwgc3NoYXNoKGlucHV0KS5zdWJhcnJheSgwLCBbMzIsIDMzXS5pbmNsdWRlcyh1OGEubGVuZ3RoKSA/IDIgOiAxKSkpO1xufVxuIl0sIm5hbWVzIjpbInU4YUNvbmNhdCIsImJhc2U1OEVuY29kZSIsImRlY29kZUFkZHJlc3MiLCJkZWZhdWx0cyIsInNzaGFzaCIsImVuY29kZUFkZHJlc3MiLCJrZXkiLCJzczU4Rm9ybWF0IiwicHJlZml4IiwidThhIiwiaW5jbHVkZXMiLCJFcnJvciIsImFsbG93ZWREZWNvZGVkTGVuZ3RocyIsImxlbmd0aCIsImpvaW4iLCJpbnB1dCIsInN1YmFycmF5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/encode.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/encodeDerived.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/encodeDerived.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeDerivedAddress: function() { return /* binding */ encodeDerivedAddress; }\n/* harmony export */ });\n/* harmony import */ var _decode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./decode.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/decode.js\");\n/* harmony import */ var _encode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encode.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/encode.js\");\n/* harmony import */ var _keyDerived_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./keyDerived.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/keyDerived.js\");\n\n\n\n/**\n * @name encodeDerivedAddress\n * @summary Creates a derived address as used in Substrate utility.\n * @description\n * Creates a Substrate derived address based on the input address/publicKey and the index supplied.\n */ function encodeDerivedAddress(who, index, ss58Format) {\n    return (0,_encode_js__WEBPACK_IMPORTED_MODULE_0__.encodeAddress)((0,_keyDerived_js__WEBPACK_IMPORTED_MODULE_1__.createKeyDerived)((0,_decode_js__WEBPACK_IMPORTED_MODULE_2__.decodeAddress)(who), index), ss58Format);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9lbmNvZGVEZXJpdmVkLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNEM7QUFDQTtBQUNPO0FBQ25EOzs7OztDQUtDLEdBQ00sU0FBU0cscUJBQXFCQyxHQUFHLEVBQUVDLEtBQUssRUFBRUMsVUFBVTtJQUN2RCxPQUFPTCx5REFBYUEsQ0FBQ0MsZ0VBQWdCQSxDQUFDRix5REFBYUEsQ0FBQ0ksTUFBTUMsUUFBUUM7QUFDdEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9hZGRyZXNzL2VuY29kZURlcml2ZWQuanM/YzcxMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWNvZGVBZGRyZXNzIH0gZnJvbSAnLi9kZWNvZGUuanMnO1xuaW1wb3J0IHsgZW5jb2RlQWRkcmVzcyB9IGZyb20gJy4vZW5jb2RlLmpzJztcbmltcG9ydCB7IGNyZWF0ZUtleURlcml2ZWQgfSBmcm9tICcuL2tleURlcml2ZWQuanMnO1xuLyoqXG4gKiBAbmFtZSBlbmNvZGVEZXJpdmVkQWRkcmVzc1xuICogQHN1bW1hcnkgQ3JlYXRlcyBhIGRlcml2ZWQgYWRkcmVzcyBhcyB1c2VkIGluIFN1YnN0cmF0ZSB1dGlsaXR5LlxuICogQGRlc2NyaXB0aW9uXG4gKiBDcmVhdGVzIGEgU3Vic3RyYXRlIGRlcml2ZWQgYWRkcmVzcyBiYXNlZCBvbiB0aGUgaW5wdXQgYWRkcmVzcy9wdWJsaWNLZXkgYW5kIHRoZSBpbmRleCBzdXBwbGllZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZURlcml2ZWRBZGRyZXNzKHdobywgaW5kZXgsIHNzNThGb3JtYXQpIHtcbiAgICByZXR1cm4gZW5jb2RlQWRkcmVzcyhjcmVhdGVLZXlEZXJpdmVkKGRlY29kZUFkZHJlc3Mod2hvKSwgaW5kZXgpLCBzczU4Rm9ybWF0KTtcbn1cbiJdLCJuYW1lcyI6WyJkZWNvZGVBZGRyZXNzIiwiZW5jb2RlQWRkcmVzcyIsImNyZWF0ZUtleURlcml2ZWQiLCJlbmNvZGVEZXJpdmVkQWRkcmVzcyIsIndobyIsImluZGV4Iiwic3M1OEZvcm1hdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/encodeDerived.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/encodeMulti.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/encodeMulti.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeMultiAddress: function() { return /* binding */ encodeMultiAddress; }\n/* harmony export */ });\n/* harmony import */ var _encode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encode.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/encode.js\");\n/* harmony import */ var _keyMulti_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./keyMulti.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/keyMulti.js\");\n\n\n/**\n * @name encodeMultiAddress\n * @summary Creates a multisig address.\n * @description\n * Creates a Substrate multisig address based on the input address and the required threshold.\n */ function encodeMultiAddress(who, threshold, ss58Format) {\n    return (0,_encode_js__WEBPACK_IMPORTED_MODULE_0__.encodeAddress)((0,_keyMulti_js__WEBPACK_IMPORTED_MODULE_1__.createKeyMulti)(who, threshold), ss58Format);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9lbmNvZGVNdWx0aS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEM7QUFDRztBQUMvQzs7Ozs7Q0FLQyxHQUNNLFNBQVNFLG1CQUFtQkMsR0FBRyxFQUFFQyxTQUFTLEVBQUVDLFVBQVU7SUFDekQsT0FBT0wseURBQWFBLENBQUNDLDREQUFjQSxDQUFDRSxLQUFLQyxZQUFZQztBQUN6RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2FkZHJlc3MvZW5jb2RlTXVsdGkuanM/YmQ4NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlbmNvZGVBZGRyZXNzIH0gZnJvbSAnLi9lbmNvZGUuanMnO1xuaW1wb3J0IHsgY3JlYXRlS2V5TXVsdGkgfSBmcm9tICcuL2tleU11bHRpLmpzJztcbi8qKlxuICogQG5hbWUgZW5jb2RlTXVsdGlBZGRyZXNzXG4gKiBAc3VtbWFyeSBDcmVhdGVzIGEgbXVsdGlzaWcgYWRkcmVzcy5cbiAqIEBkZXNjcmlwdGlvblxuICogQ3JlYXRlcyBhIFN1YnN0cmF0ZSBtdWx0aXNpZyBhZGRyZXNzIGJhc2VkIG9uIHRoZSBpbnB1dCBhZGRyZXNzIGFuZCB0aGUgcmVxdWlyZWQgdGhyZXNob2xkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlTXVsdGlBZGRyZXNzKHdobywgdGhyZXNob2xkLCBzczU4Rm9ybWF0KSB7XG4gICAgcmV0dXJuIGVuY29kZUFkZHJlc3MoY3JlYXRlS2V5TXVsdGkod2hvLCB0aHJlc2hvbGQpLCBzczU4Rm9ybWF0KTtcbn1cbiJdLCJuYW1lcyI6WyJlbmNvZGVBZGRyZXNzIiwiY3JlYXRlS2V5TXVsdGkiLCJlbmNvZGVNdWx0aUFkZHJlc3MiLCJ3aG8iLCJ0aHJlc2hvbGQiLCJzczU4Rm9ybWF0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/encodeMulti.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/eq.js":
/*!**********************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/eq.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addressEq: function() { return /* binding */ addressEq; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/eq.js\");\n/* harmony import */ var _decode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decode.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/decode.js\");\n\n\n/**\n * @name addressEq\n * @summary Compares two addresses, either in ss58, Uint8Array or hex format.\n * @description\n * For the input values, return true is the underlying public keys do match.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aEq } from '@polkadot/util';\n *\n * u8aEq(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // true\n * ```\n */ function addressEq(a, b) {\n    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aEq)((0,_decode_js__WEBPACK_IMPORTED_MODULE_1__.decodeAddress)(a), (0,_decode_js__WEBPACK_IMPORTED_MODULE_1__.decodeAddress)(b));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9lcS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBdUM7QUFDSztBQUM1Qzs7Ozs7Ozs7Ozs7OztDQWFDLEdBQ00sU0FBU0UsVUFBVUMsQ0FBQyxFQUFFQyxDQUFDO0lBQzFCLE9BQU9KLHFEQUFLQSxDQUFDQyx5REFBYUEsQ0FBQ0UsSUFBSUYseURBQWFBLENBQUNHO0FBQ2pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9lcS5qcz9iM2YxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHU4YUVxIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgZGVjb2RlQWRkcmVzcyB9IGZyb20gJy4vZGVjb2RlLmpzJztcbi8qKlxuICogQG5hbWUgYWRkcmVzc0VxXG4gKiBAc3VtbWFyeSBDb21wYXJlcyB0d28gYWRkcmVzc2VzLCBlaXRoZXIgaW4gc3M1OCwgVWludDhBcnJheSBvciBoZXggZm9ybWF0LlxuICogQGRlc2NyaXB0aW9uXG4gKiBGb3IgdGhlIGlucHV0IHZhbHVlcywgcmV0dXJuIHRydWUgaXMgdGhlIHVuZGVybHlpbmcgcHVibGljIGtleXMgZG8gbWF0Y2guXG4gKiBAZXhhbXBsZVxuICogPEJSPlxuICpcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGltcG9ydCB7IHU4YUVxIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuICpcbiAqIHU4YUVxKG5ldyBVaW50OEFycmF5KFsweDY4LCAweDY1XSksIG5ldyBVaW50OEFycmF5KFsweDY4LCAweDY1XSkpOyAvLyB0cnVlXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFkZHJlc3NFcShhLCBiKSB7XG4gICAgcmV0dXJuIHU4YUVxKGRlY29kZUFkZHJlc3MoYSksIGRlY29kZUFkZHJlc3MoYikpO1xufVxuIl0sIm5hbWVzIjpbInU4YUVxIiwiZGVjb2RlQWRkcmVzcyIsImFkZHJlc3NFcSIsImEiLCJiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/eq.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/evmToAddress.js":
/*!********************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/evmToAddress.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   evmToAddress: function() { return /* binding */ evmToAddress; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/concat.js\");\n/* harmony import */ var _secp256k1_hasher_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../secp256k1/hasher.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/hasher.js\");\n/* harmony import */ var _encode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./encode.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/encode.js\");\n\n\n\n/**\n * @name evmToAddress\n * @summary Converts an EVM address to its corresponding SS58 address.\n */ function evmToAddress(evmAddress, ss58Format) {\n    let hashType = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"blake2\";\n    const message = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aConcat)(\"evm:\", evmAddress);\n    if (message.length !== 24) {\n        throw new Error(\"Converting \".concat(evmAddress, \": Invalid evm address length\"));\n    }\n    return (0,_encode_js__WEBPACK_IMPORTED_MODULE_1__.encodeAddress)((0,_secp256k1_hasher_js__WEBPACK_IMPORTED_MODULE_2__.hasher)(hashType, message), ss58Format);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9ldm1Ub0FkZHJlc3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEyQztBQUNLO0FBQ0o7QUFDNUM7OztDQUdDLEdBQ00sU0FBU0csYUFBYUMsVUFBVSxFQUFFQyxVQUFVO1FBQUVDLFdBQUFBLGlFQUFXO0lBQzVELE1BQU1DLFVBQVVQLHlEQUFTQSxDQUFDLFFBQVFJO0lBQ2xDLElBQUlHLFFBQVFDLE1BQU0sS0FBSyxJQUFJO1FBQ3ZCLE1BQU0sSUFBSUMsTUFBTSxjQUF5QixPQUFYTCxZQUFXO0lBQzdDO0lBQ0EsT0FBT0YseURBQWFBLENBQUNELDREQUFNQSxDQUFDSyxVQUFVQyxVQUFVRjtBQUNwRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2FkZHJlc3MvZXZtVG9BZGRyZXNzLmpzPzFkNDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdThhQ29uY2F0IH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgaGFzaGVyIH0gZnJvbSAnLi4vc2VjcDI1NmsxL2hhc2hlci5qcyc7XG5pbXBvcnQgeyBlbmNvZGVBZGRyZXNzIH0gZnJvbSAnLi9lbmNvZGUuanMnO1xuLyoqXG4gKiBAbmFtZSBldm1Ub0FkZHJlc3NcbiAqIEBzdW1tYXJ5IENvbnZlcnRzIGFuIEVWTSBhZGRyZXNzIHRvIGl0cyBjb3JyZXNwb25kaW5nIFNTNTggYWRkcmVzcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV2bVRvQWRkcmVzcyhldm1BZGRyZXNzLCBzczU4Rm9ybWF0LCBoYXNoVHlwZSA9ICdibGFrZTInKSB7XG4gICAgY29uc3QgbWVzc2FnZSA9IHU4YUNvbmNhdCgnZXZtOicsIGV2bUFkZHJlc3MpO1xuICAgIGlmIChtZXNzYWdlLmxlbmd0aCAhPT0gMjQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDb252ZXJ0aW5nICR7ZXZtQWRkcmVzc306IEludmFsaWQgZXZtIGFkZHJlc3MgbGVuZ3RoYCk7XG4gICAgfVxuICAgIHJldHVybiBlbmNvZGVBZGRyZXNzKGhhc2hlcihoYXNoVHlwZSwgbWVzc2FnZSksIHNzNThGb3JtYXQpO1xufVxuIl0sIm5hbWVzIjpbInU4YUNvbmNhdCIsImhhc2hlciIsImVuY29kZUFkZHJlc3MiLCJldm1Ub0FkZHJlc3MiLCJldm1BZGRyZXNzIiwic3M1OEZvcm1hdCIsImhhc2hUeXBlIiwibWVzc2FnZSIsImxlbmd0aCIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/evmToAddress.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addressEq: function() { return /* reexport safe */ _eq_js__WEBPACK_IMPORTED_MODULE_8__.addressEq; },\n/* harmony export */   addressToEvm: function() { return /* reexport safe */ _addressToEvm_js__WEBPACK_IMPORTED_MODULE_0__.addressToEvm; },\n/* harmony export */   checkAddress: function() { return /* reexport safe */ _check_js__WEBPACK_IMPORTED_MODULE_1__.checkAddress; },\n/* harmony export */   checkAddressChecksum: function() { return /* reexport safe */ _checksum_js__WEBPACK_IMPORTED_MODULE_2__.checkAddressChecksum; },\n/* harmony export */   createKeyDerived: function() { return /* reexport safe */ _keyDerived_js__WEBPACK_IMPORTED_MODULE_11__.createKeyDerived; },\n/* harmony export */   createKeyMulti: function() { return /* reexport safe */ _keyMulti_js__WEBPACK_IMPORTED_MODULE_12__.createKeyMulti; },\n/* harmony export */   decodeAddress: function() { return /* reexport safe */ _decode_js__WEBPACK_IMPORTED_MODULE_3__.decodeAddress; },\n/* harmony export */   deriveAddress: function() { return /* reexport safe */ _derive_js__WEBPACK_IMPORTED_MODULE_4__.deriveAddress; },\n/* harmony export */   encodeAddress: function() { return /* reexport safe */ _encode_js__WEBPACK_IMPORTED_MODULE_5__.encodeAddress; },\n/* harmony export */   encodeDerivedAddress: function() { return /* reexport safe */ _encodeDerived_js__WEBPACK_IMPORTED_MODULE_6__.encodeDerivedAddress; },\n/* harmony export */   encodeMultiAddress: function() { return /* reexport safe */ _encodeMulti_js__WEBPACK_IMPORTED_MODULE_7__.encodeMultiAddress; },\n/* harmony export */   evmToAddress: function() { return /* reexport safe */ _evmToAddress_js__WEBPACK_IMPORTED_MODULE_9__.evmToAddress; },\n/* harmony export */   isAddress: function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_10__.isAddress; },\n/* harmony export */   setSS58Format: function() { return /* reexport safe */ _setSS58Format_js__WEBPACK_IMPORTED_MODULE_15__.setSS58Format; },\n/* harmony export */   sortAddresses: function() { return /* reexport safe */ _sort_js__WEBPACK_IMPORTED_MODULE_13__.sortAddresses; },\n/* harmony export */   validateAddress: function() { return /* reexport safe */ _validate_js__WEBPACK_IMPORTED_MODULE_14__.validateAddress; }\n/* harmony export */ });\n/* harmony import */ var _addressToEvm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./addressToEvm.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/addressToEvm.js\");\n/* harmony import */ var _check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./check.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/check.js\");\n/* harmony import */ var _checksum_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./checksum.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/checksum.js\");\n/* harmony import */ var _decode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./decode.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/decode.js\");\n/* harmony import */ var _derive_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./derive.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/derive.js\");\n/* harmony import */ var _encode_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./encode.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/encode.js\");\n/* harmony import */ var _encodeDerived_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./encodeDerived.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/encodeDerived.js\");\n/* harmony import */ var _encodeMulti_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./encodeMulti.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/encodeMulti.js\");\n/* harmony import */ var _eq_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./eq.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/eq.js\");\n/* harmony import */ var _evmToAddress_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./evmToAddress.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/evmToAddress.js\");\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./is.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/is.js\");\n/* harmony import */ var _keyDerived_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./keyDerived.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/keyDerived.js\");\n/* harmony import */ var _keyMulti_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./keyMulti.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/keyMulti.js\");\n/* harmony import */ var _sort_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./sort.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/sort.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./validate.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/validate.js\");\n/* harmony import */ var _setSS58Format_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./setSS58Format.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/setSS58Format.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFpRDtBQUNQO0FBQ1c7QUFDVDtBQUNBO0FBQ0E7QUFDYztBQUNKO0FBQ2xCO0FBQ2E7QUFDYjtBQUNlO0FBQ0o7QUFDTDtBQUNNO0FBQ0ciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9hZGRyZXNzL2luZGV4LmpzP2ZmYjIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgYWRkcmVzc1RvRXZtIH0gZnJvbSAnLi9hZGRyZXNzVG9Fdm0uanMnO1xuZXhwb3J0IHsgY2hlY2tBZGRyZXNzIH0gZnJvbSAnLi9jaGVjay5qcyc7XG5leHBvcnQgeyBjaGVja0FkZHJlc3NDaGVja3N1bSB9IGZyb20gJy4vY2hlY2tzdW0uanMnO1xuZXhwb3J0IHsgZGVjb2RlQWRkcmVzcyB9IGZyb20gJy4vZGVjb2RlLmpzJztcbmV4cG9ydCB7IGRlcml2ZUFkZHJlc3MgfSBmcm9tICcuL2Rlcml2ZS5qcyc7XG5leHBvcnQgeyBlbmNvZGVBZGRyZXNzIH0gZnJvbSAnLi9lbmNvZGUuanMnO1xuZXhwb3J0IHsgZW5jb2RlRGVyaXZlZEFkZHJlc3MgfSBmcm9tICcuL2VuY29kZURlcml2ZWQuanMnO1xuZXhwb3J0IHsgZW5jb2RlTXVsdGlBZGRyZXNzIH0gZnJvbSAnLi9lbmNvZGVNdWx0aS5qcyc7XG5leHBvcnQgeyBhZGRyZXNzRXEgfSBmcm9tICcuL2VxLmpzJztcbmV4cG9ydCB7IGV2bVRvQWRkcmVzcyB9IGZyb20gJy4vZXZtVG9BZGRyZXNzLmpzJztcbmV4cG9ydCB7IGlzQWRkcmVzcyB9IGZyb20gJy4vaXMuanMnO1xuZXhwb3J0IHsgY3JlYXRlS2V5RGVyaXZlZCB9IGZyb20gJy4va2V5RGVyaXZlZC5qcyc7XG5leHBvcnQgeyBjcmVhdGVLZXlNdWx0aSB9IGZyb20gJy4va2V5TXVsdGkuanMnO1xuZXhwb3J0IHsgc29ydEFkZHJlc3NlcyB9IGZyb20gJy4vc29ydC5qcyc7XG5leHBvcnQgeyB2YWxpZGF0ZUFkZHJlc3MgfSBmcm9tICcuL3ZhbGlkYXRlLmpzJztcbmV4cG9ydCB7IHNldFNTNThGb3JtYXQgfSBmcm9tICcuL3NldFNTNThGb3JtYXQuanMnO1xuIl0sIm5hbWVzIjpbImFkZHJlc3NUb0V2bSIsImNoZWNrQWRkcmVzcyIsImNoZWNrQWRkcmVzc0NoZWNrc3VtIiwiZGVjb2RlQWRkcmVzcyIsImRlcml2ZUFkZHJlc3MiLCJlbmNvZGVBZGRyZXNzIiwiZW5jb2RlRGVyaXZlZEFkZHJlc3MiLCJlbmNvZGVNdWx0aUFkZHJlc3MiLCJhZGRyZXNzRXEiLCJldm1Ub0FkZHJlc3MiLCJpc0FkZHJlc3MiLCJjcmVhdGVLZXlEZXJpdmVkIiwiY3JlYXRlS2V5TXVsdGkiLCJzb3J0QWRkcmVzc2VzIiwidmFsaWRhdGVBZGRyZXNzIiwic2V0U1M1OEZvcm1hdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/is.js":
/*!**********************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/is.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAddress: function() { return /* binding */ isAddress; }\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/validate.js\");\n\nfunction isAddress(address, ignoreChecksum, ss58Format) {\n    try {\n        return (0,_validate_js__WEBPACK_IMPORTED_MODULE_0__.validateAddress)(address, ignoreChecksum, ss58Format);\n    } catch (e) {\n        return false;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9pcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRDtBQUN6QyxTQUFTQyxVQUFVQyxPQUFPLEVBQUVDLGNBQWMsRUFBRUMsVUFBVTtJQUN6RCxJQUFJO1FBQ0EsT0FBT0osNkRBQWVBLENBQUNFLFNBQVNDLGdCQUFnQkM7SUFDcEQsRUFDQSxVQUFNO1FBQ0YsT0FBTztJQUNYO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9hZGRyZXNzL2lzLmpzP2RhZGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdmFsaWRhdGVBZGRyZXNzIH0gZnJvbSAnLi92YWxpZGF0ZS5qcyc7XG5leHBvcnQgZnVuY3Rpb24gaXNBZGRyZXNzKGFkZHJlc3MsIGlnbm9yZUNoZWNrc3VtLCBzczU4Rm9ybWF0KSB7XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIHZhbGlkYXRlQWRkcmVzcyhhZGRyZXNzLCBpZ25vcmVDaGVja3N1bSwgc3M1OEZvcm1hdCk7XG4gICAgfVxuICAgIGNhdGNoIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJ2YWxpZGF0ZUFkZHJlc3MiLCJpc0FkZHJlc3MiLCJhZGRyZXNzIiwiaWdub3JlQ2hlY2tzdW0iLCJzczU4Rm9ybWF0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/is.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/keyDerived.js":
/*!******************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/keyDerived.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createKeyDerived: function() { return /* binding */ createKeyDerived; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/string/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/concat.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/bn/toU8a.js\");\n/* harmony import */ var _blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../blake2/asU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/blake2/asU8a.js\");\n/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../bn.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/bn.js\");\n/* harmony import */ var _decode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./decode.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/decode.js\");\n\n\n\n\nconst PREFIX = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.stringToU8a)(\"modlpy/utilisuba\");\nfunction createKeyDerived(who, index) {\n    return (0,_blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_1__.blake2AsU8a)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aConcat)(PREFIX, (0,_decode_js__WEBPACK_IMPORTED_MODULE_3__.decodeAddress)(who), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.bnToU8a)(index, _bn_js__WEBPACK_IMPORTED_MODULE_5__.BN_LE_16_OPTS)));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9rZXlEZXJpdmVkLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBaUU7QUFDaEI7QUFDUjtBQUNHO0FBQzVDLE1BQU1NLFNBQVNMLDJEQUFXQSxDQUFDO0FBQ3BCLFNBQVNNLGlCQUFpQkMsR0FBRyxFQUFFQyxLQUFLO0lBQ3ZDLE9BQU9OLDZEQUFXQSxDQUFDRCx5REFBU0EsQ0FBQ0ksUUFBUUQseURBQWFBLENBQUNHLE1BQU1SLHVEQUFPQSxDQUFDUyxPQUFPTCxpREFBYUE7QUFDekYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9hZGRyZXNzL2tleURlcml2ZWQuanM/MzM4NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiblRvVThhLCBzdHJpbmdUb1U4YSwgdThhQ29uY2F0IH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgYmxha2UyQXNVOGEgfSBmcm9tICcuLi9ibGFrZTIvYXNVOGEuanMnO1xuaW1wb3J0IHsgQk5fTEVfMTZfT1BUUyB9IGZyb20gJy4uL2JuLmpzJztcbmltcG9ydCB7IGRlY29kZUFkZHJlc3MgfSBmcm9tICcuL2RlY29kZS5qcyc7XG5jb25zdCBQUkVGSVggPSBzdHJpbmdUb1U4YSgnbW9kbHB5L3V0aWxpc3ViYScpO1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUtleURlcml2ZWQod2hvLCBpbmRleCkge1xuICAgIHJldHVybiBibGFrZTJBc1U4YSh1OGFDb25jYXQoUFJFRklYLCBkZWNvZGVBZGRyZXNzKHdobyksIGJuVG9VOGEoaW5kZXgsIEJOX0xFXzE2X09QVFMpKSk7XG59XG4iXSwibmFtZXMiOlsiYm5Ub1U4YSIsInN0cmluZ1RvVThhIiwidThhQ29uY2F0IiwiYmxha2UyQXNVOGEiLCJCTl9MRV8xNl9PUFRTIiwiZGVjb2RlQWRkcmVzcyIsIlBSRUZJWCIsImNyZWF0ZUtleURlcml2ZWQiLCJ3aG8iLCJpbmRleCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/keyDerived.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/keyMulti.js":
/*!****************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/keyMulti.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createKeyMulti: function() { return /* binding */ createKeyMulti; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/string/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/concat.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/compact/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/sorted.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/bn/toU8a.js\");\n/* harmony import */ var _blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../blake2/asU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/blake2/asU8a.js\");\n/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../bn.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/bn.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/util.js\");\n\n\n\n\nconst PREFIX = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.stringToU8a)(\"modlpy/utilisuba\");\nfunction createKeyMulti(who, threshold) {\n    return (0,_blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_1__.blake2AsU8a)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aConcat)(PREFIX, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.compactToU8a)(who.length), ...(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.u8aSorted)(who.map(_util_js__WEBPACK_IMPORTED_MODULE_5__.addressToU8a)), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.bnToU8a)(threshold, _bn_js__WEBPACK_IMPORTED_MODULE_7__.BN_LE_16_OPTS)));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9rZXlNdWx0aS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBMEY7QUFDekM7QUFDUjtBQUNBO0FBQ3pDLE1BQU1RLFNBQVNOLDJEQUFXQSxDQUFDO0FBQ3BCLFNBQVNPLGVBQWVDLEdBQUcsRUFBRUMsU0FBUztJQUN6QyxPQUFPTiw2REFBV0EsQ0FBQ0YseURBQVNBLENBQUNLLFFBQVFQLDREQUFZQSxDQUFDUyxJQUFJRSxNQUFNLE1BQU1SLHlEQUFTQSxDQUFDTSxJQUFJRyxHQUFHLENBQUNOLGtEQUFZQSxJQUFJUCx1REFBT0EsQ0FBQ1csV0FBV0wsaURBQWFBO0FBQ3hJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9rZXlNdWx0aS5qcz8zYjZlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJuVG9VOGEsIGNvbXBhY3RUb1U4YSwgc3RyaW5nVG9VOGEsIHU4YUNvbmNhdCwgdThhU29ydGVkIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgYmxha2UyQXNVOGEgfSBmcm9tICcuLi9ibGFrZTIvYXNVOGEuanMnO1xuaW1wb3J0IHsgQk5fTEVfMTZfT1BUUyB9IGZyb20gJy4uL2JuLmpzJztcbmltcG9ydCB7IGFkZHJlc3NUb1U4YSB9IGZyb20gJy4vdXRpbC5qcyc7XG5jb25zdCBQUkVGSVggPSBzdHJpbmdUb1U4YSgnbW9kbHB5L3V0aWxpc3ViYScpO1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUtleU11bHRpKHdobywgdGhyZXNob2xkKSB7XG4gICAgcmV0dXJuIGJsYWtlMkFzVThhKHU4YUNvbmNhdChQUkVGSVgsIGNvbXBhY3RUb1U4YSh3aG8ubGVuZ3RoKSwgLi4udThhU29ydGVkKHdoby5tYXAoYWRkcmVzc1RvVThhKSksIGJuVG9VOGEodGhyZXNob2xkLCBCTl9MRV8xNl9PUFRTKSkpO1xufVxuIl0sIm5hbWVzIjpbImJuVG9VOGEiLCJjb21wYWN0VG9VOGEiLCJzdHJpbmdUb1U4YSIsInU4YUNvbmNhdCIsInU4YVNvcnRlZCIsImJsYWtlMkFzVThhIiwiQk5fTEVfMTZfT1BUUyIsImFkZHJlc3NUb1U4YSIsIlBSRUZJWCIsImNyZWF0ZUtleU11bHRpIiwid2hvIiwidGhyZXNob2xkIiwibGVuZ3RoIiwibWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/keyMulti.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/setSS58Format.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/setSS58Format.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setSS58Format: function() { return /* binding */ setSS58Format; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/logger.js\");\n/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaults.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/defaults.js\");\n\n\nconst l = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.logger)(\"setSS58Format\");\n/**\n * @description Sets the global SS58 format to use for address encoding\n * @deprecated Use keyring.setSS58Format\n */ function setSS58Format(prefix) {\n    l.warn(\"Global setting of the ss58Format is deprecated and not recommended. Set format on the keyring (if used) or as part of the address encode function\");\n    _defaults_js__WEBPACK_IMPORTED_MODULE_1__.defaults.prefix = prefix;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9zZXRTUzU4Rm9ybWF0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF3QztBQUNDO0FBQ3pDLE1BQU1FLElBQUlGLHNEQUFNQSxDQUFDO0FBQ2pCOzs7Q0FHQyxHQUNNLFNBQVNHLGNBQWNDLE1BQU07SUFDaENGLEVBQUVHLElBQUksQ0FBQztJQUNQSixrREFBUUEsQ0FBQ0csTUFBTSxHQUFHQTtBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2FkZHJlc3Mvc2V0U1M1OEZvcm1hdC5qcz8yNGVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGxvZ2dlciB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbmltcG9ydCB7IGRlZmF1bHRzIH0gZnJvbSAnLi9kZWZhdWx0cy5qcyc7XG5jb25zdCBsID0gbG9nZ2VyKCdzZXRTUzU4Rm9ybWF0Jyk7XG4vKipcbiAqIEBkZXNjcmlwdGlvbiBTZXRzIHRoZSBnbG9iYWwgU1M1OCBmb3JtYXQgdG8gdXNlIGZvciBhZGRyZXNzIGVuY29kaW5nXG4gKiBAZGVwcmVjYXRlZCBVc2Uga2V5cmluZy5zZXRTUzU4Rm9ybWF0XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRTUzU4Rm9ybWF0KHByZWZpeCkge1xuICAgIGwud2FybignR2xvYmFsIHNldHRpbmcgb2YgdGhlIHNzNThGb3JtYXQgaXMgZGVwcmVjYXRlZCBhbmQgbm90IHJlY29tbWVuZGVkLiBTZXQgZm9ybWF0IG9uIHRoZSBrZXlyaW5nIChpZiB1c2VkKSBvciBhcyBwYXJ0IG9mIHRoZSBhZGRyZXNzIGVuY29kZSBmdW5jdGlvbicpO1xuICAgIGRlZmF1bHRzLnByZWZpeCA9IHByZWZpeDtcbn1cbiJdLCJuYW1lcyI6WyJsb2dnZXIiLCJkZWZhdWx0cyIsImwiLCJzZXRTUzU4Rm9ybWF0IiwicHJlZml4Iiwid2FybiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/setSS58Format.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/sort.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/sort.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sortAddresses: function() { return /* binding */ sortAddresses; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/sorted.js\");\n/* harmony import */ var _encode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encode.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/encode.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/util.js\");\n\n\n\nfunction sortAddresses(addresses, ss58Format) {\n    const u8aToAddress = (u8a)=>(0,_encode_js__WEBPACK_IMPORTED_MODULE_0__.encodeAddress)(u8a, ss58Format);\n    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aSorted)(addresses.map(_util_js__WEBPACK_IMPORTED_MODULE_2__.addressToU8a)).map(u8aToAddress);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9zb3J0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkM7QUFDQztBQUNIO0FBQ2xDLFNBQVNHLGNBQWNDLFNBQVMsRUFBRUMsVUFBVTtJQUMvQyxNQUFNQyxlQUFlLENBQUNDLE1BQVFOLHlEQUFhQSxDQUFDTSxLQUFLRjtJQUNqRCxPQUFPTCx5REFBU0EsQ0FBQ0ksVUFBVUksR0FBRyxDQUFDTixrREFBWUEsR0FBR00sR0FBRyxDQUFDRjtBQUN0RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2FkZHJlc3Mvc29ydC5qcz9jNjBmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHU4YVNvcnRlZCB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbmltcG9ydCB7IGVuY29kZUFkZHJlc3MgfSBmcm9tICcuL2VuY29kZS5qcyc7XG5pbXBvcnQgeyBhZGRyZXNzVG9VOGEgfSBmcm9tICcuL3V0aWwuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIHNvcnRBZGRyZXNzZXMoYWRkcmVzc2VzLCBzczU4Rm9ybWF0KSB7XG4gICAgY29uc3QgdThhVG9BZGRyZXNzID0gKHU4YSkgPT4gZW5jb2RlQWRkcmVzcyh1OGEsIHNzNThGb3JtYXQpO1xuICAgIHJldHVybiB1OGFTb3J0ZWQoYWRkcmVzc2VzLm1hcChhZGRyZXNzVG9VOGEpKS5tYXAodThhVG9BZGRyZXNzKTtcbn1cbiJdLCJuYW1lcyI6WyJ1OGFTb3J0ZWQiLCJlbmNvZGVBZGRyZXNzIiwiYWRkcmVzc1RvVThhIiwic29ydEFkZHJlc3NlcyIsImFkZHJlc3NlcyIsInNzNThGb3JtYXQiLCJ1OGFUb0FkZHJlc3MiLCJ1OGEiLCJtYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/sort.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/sshash.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/sshash.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sshash: function() { return /* binding */ sshash; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/string/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/concat.js\");\n/* harmony import */ var _blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../blake2/asU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/blake2/asU8a.js\");\n\n\nconst SS58_PREFIX = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.stringToU8a)(\"SS58PRE\");\nfunction sshash(key) {\n    return (0,_blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_1__.blake2AsU8a)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aConcat)(SS58_PREFIX, key), 512);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9zc2hhc2guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3RDtBQUNQO0FBQ2pELE1BQU1HLGNBQWNILDJEQUFXQSxDQUFDO0FBQ3pCLFNBQVNJLE9BQU9DLEdBQUc7SUFDdEIsT0FBT0gsNkRBQVdBLENBQUNELHlEQUFTQSxDQUFDRSxhQUFhRSxNQUFNO0FBQ3BEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9zc2hhc2guanM/OGI5ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHJpbmdUb1U4YSwgdThhQ29uY2F0IH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgYmxha2UyQXNVOGEgfSBmcm9tICcuLi9ibGFrZTIvYXNVOGEuanMnO1xuY29uc3QgU1M1OF9QUkVGSVggPSBzdHJpbmdUb1U4YSgnU1M1OFBSRScpO1xuZXhwb3J0IGZ1bmN0aW9uIHNzaGFzaChrZXkpIHtcbiAgICByZXR1cm4gYmxha2UyQXNVOGEodThhQ29uY2F0KFNTNThfUFJFRklYLCBrZXkpLCA1MTIpO1xufVxuIl0sIm5hbWVzIjpbInN0cmluZ1RvVThhIiwidThhQ29uY2F0IiwiYmxha2UyQXNVOGEiLCJTUzU4X1BSRUZJWCIsInNzaGFzaCIsImtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/sshash.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/util.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/util.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addressToU8a: function() { return /* binding */ addressToU8a; }\n/* harmony export */ });\n/* harmony import */ var _decode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decode.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/decode.js\");\n\nfunction addressToU8a(who) {\n    return (0,_decode_js__WEBPACK_IMPORTED_MODULE_0__.decodeAddress)(who);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy91dGlsLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTRDO0FBQ3JDLFNBQVNDLGFBQWFDLEdBQUc7SUFDNUIsT0FBT0YseURBQWFBLENBQUNFO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy91dGlsLmpzPzU3ZDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVjb2RlQWRkcmVzcyB9IGZyb20gJy4vZGVjb2RlLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBhZGRyZXNzVG9VOGEod2hvKSB7XG4gICAgcmV0dXJuIGRlY29kZUFkZHJlc3Mod2hvKTtcbn1cbiJdLCJuYW1lcyI6WyJkZWNvZGVBZGRyZXNzIiwiYWRkcmVzc1RvVThhIiwid2hvIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/util.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/validate.js":
/*!****************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/validate.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateAddress: function() { return /* binding */ validateAddress; }\n/* harmony export */ });\n/* harmony import */ var _decode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decode.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/decode.js\");\n\nfunction validateAddress(encoded, ignoreChecksum, ss58Format) {\n    return !!(0,_decode_js__WEBPACK_IMPORTED_MODULE_0__.decodeAddress)(encoded, ignoreChecksum, ss58Format);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy92YWxpZGF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE0QztBQUNyQyxTQUFTQyxnQkFBZ0JDLE9BQU8sRUFBRUMsY0FBYyxFQUFFQyxVQUFVO0lBQy9ELE9BQU8sQ0FBQyxDQUFDSix5REFBYUEsQ0FBQ0UsU0FBU0MsZ0JBQWdCQztBQUNwRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2FkZHJlc3MvdmFsaWRhdGUuanM/ODJjOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWNvZGVBZGRyZXNzIH0gZnJvbSAnLi9kZWNvZGUuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlQWRkcmVzcyhlbmNvZGVkLCBpZ25vcmVDaGVja3N1bSwgc3M1OEZvcm1hdCkge1xuICAgIHJldHVybiAhIWRlY29kZUFkZHJlc3MoZW5jb2RlZCwgaWdub3JlQ2hlY2tzdW0sIHNzNThGb3JtYXQpO1xufVxuIl0sIm5hbWVzIjpbImRlY29kZUFkZHJlc3MiLCJ2YWxpZGF0ZUFkZHJlc3MiLCJlbmNvZGVkIiwiaWdub3JlQ2hlY2tzdW0iLCJzczU4Rm9ybWF0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/validate.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/base32/bs32.js":
/*!***********************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/base32/bs32.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base32Decode: function() { return /* binding */ base32Decode; },\n/* harmony export */   base32Encode: function() { return /* binding */ base32Encode; },\n/* harmony export */   base32Validate: function() { return /* binding */ base32Validate; },\n/* harmony export */   isBase32: function() { return /* binding */ isBase32; }\n/* harmony export */ });\n/* harmony import */ var _scure_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @scure/base */ \"(app-pages-browser)/./node_modules/@scure/base/lib/esm/index.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/base32/helpers.js\");\n\n\nconst chars = \"abcdefghijklmnopqrstuvwxyz234567\";\nconst config = {\n    chars,\n    coder: _scure_base__WEBPACK_IMPORTED_MODULE_0__.utils.chain(// We define our own chain, the default base32 has padding\n    _scure_base__WEBPACK_IMPORTED_MODULE_0__.utils.radix2(5), _scure_base__WEBPACK_IMPORTED_MODULE_0__.utils.alphabet(chars), {\n        decode: (input)=>input.split(\"\"),\n        encode: (input)=>input.join(\"\")\n    }),\n    ipfs: \"b\",\n    type: \"base32\"\n};\n/**\n * @name base32Validate\n * @summary Validates a base32 value.\n * @description\n * Validates that the supplied value is valid base32, throwing exceptions if not\n */ const base32Validate = /*#__PURE__*/ (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createValidate)(config);\n/**\n* @name isBase32\n* @description Checks if the input is in base32, returning true/false\n*/ const isBase32 = /*#__PURE__*/ (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createIs)(base32Validate);\n/**\n * @name base32Decode\n * @summary Delookup a base32 value.\n * @description\n * From the provided input, decode the base32 and return the result as an `Uint8Array`.\n */ const base32Decode = /*#__PURE__*/ (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createDecode)(config, base32Validate);\n/**\n* @name base32Encode\n* @summary Creates a base32 value.\n* @description\n* From the provided input, create the base32 and return the result as a string.\n*/ const base32Encode = /*#__PURE__*/ (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createEncode)(config);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYmFzZTMyL2JzMzIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW9DO0FBQ2dEO0FBQ3BGLE1BQU1LLFFBQVE7QUFDZCxNQUFNQyxTQUFTO0lBQ1hEO0lBQ0FFLE9BQU9QLDhDQUFLQSxDQUFDUSxLQUFLLENBQ2xCLDBEQUEwRDtJQUMxRFIsOENBQUtBLENBQUNTLE1BQU0sQ0FBQyxJQUFJVCw4Q0FBS0EsQ0FBQ1UsUUFBUSxDQUFDTCxRQUFRO1FBQ3BDTSxRQUFRLENBQUNDLFFBQVVBLE1BQU1DLEtBQUssQ0FBQztRQUMvQkMsUUFBUSxDQUFDRixRQUFVQSxNQUFNRyxJQUFJLENBQUM7SUFDbEM7SUFDQUMsTUFBTTtJQUNOQyxNQUFNO0FBQ1Y7QUFDQTs7Ozs7Q0FLQyxHQUNNLE1BQU1DLGlCQUFpQixXQUFXLEdBQUdkLDJEQUFjQSxDQUFDRSxRQUFRO0FBQ25FOzs7QUFHQSxHQUNPLE1BQU1hLFdBQVcsV0FBVyxHQUFHaEIscURBQVFBLENBQUNlLGdCQUFnQjtBQUMvRDs7Ozs7Q0FLQyxHQUNNLE1BQU1FLGVBQWUsV0FBVyxHQUFHbkIseURBQVlBLENBQUNLLFFBQVFZLGdCQUFnQjtBQUMvRTs7Ozs7QUFLQSxHQUNPLE1BQU1HLGVBQWUsV0FBVyxHQUFHbkIseURBQVlBLENBQUNJLFFBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9iYXNlMzIvYnMzMi5qcz9mMTc2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHV0aWxzIH0gZnJvbSAnQHNjdXJlL2Jhc2UnO1xuaW1wb3J0IHsgY3JlYXRlRGVjb2RlLCBjcmVhdGVFbmNvZGUsIGNyZWF0ZUlzLCBjcmVhdGVWYWxpZGF0ZSB9IGZyb20gJy4vaGVscGVycy5qcyc7XG5jb25zdCBjaGFycyA9ICdhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejIzNDU2Nyc7XG5jb25zdCBjb25maWcgPSB7XG4gICAgY2hhcnMsXG4gICAgY29kZXI6IHV0aWxzLmNoYWluKFxuICAgIC8vIFdlIGRlZmluZSBvdXIgb3duIGNoYWluLCB0aGUgZGVmYXVsdCBiYXNlMzIgaGFzIHBhZGRpbmdcbiAgICB1dGlscy5yYWRpeDIoNSksIHV0aWxzLmFscGhhYmV0KGNoYXJzKSwge1xuICAgICAgICBkZWNvZGU6IChpbnB1dCkgPT4gaW5wdXQuc3BsaXQoJycpLFxuICAgICAgICBlbmNvZGU6IChpbnB1dCkgPT4gaW5wdXQuam9pbignJylcbiAgICB9KSxcbiAgICBpcGZzOiAnYicsXG4gICAgdHlwZTogJ2Jhc2UzMidcbn07XG4vKipcbiAqIEBuYW1lIGJhc2UzMlZhbGlkYXRlXG4gKiBAc3VtbWFyeSBWYWxpZGF0ZXMgYSBiYXNlMzIgdmFsdWUuXG4gKiBAZGVzY3JpcHRpb25cbiAqIFZhbGlkYXRlcyB0aGF0IHRoZSBzdXBwbGllZCB2YWx1ZSBpcyB2YWxpZCBiYXNlMzIsIHRocm93aW5nIGV4Y2VwdGlvbnMgaWYgbm90XG4gKi9cbmV4cG9ydCBjb25zdCBiYXNlMzJWYWxpZGF0ZSA9IC8qI19fUFVSRV9fKi8gY3JlYXRlVmFsaWRhdGUoY29uZmlnKTtcbi8qKlxuKiBAbmFtZSBpc0Jhc2UzMlxuKiBAZGVzY3JpcHRpb24gQ2hlY2tzIGlmIHRoZSBpbnB1dCBpcyBpbiBiYXNlMzIsIHJldHVybmluZyB0cnVlL2ZhbHNlXG4qL1xuZXhwb3J0IGNvbnN0IGlzQmFzZTMyID0gLyojX19QVVJFX18qLyBjcmVhdGVJcyhiYXNlMzJWYWxpZGF0ZSk7XG4vKipcbiAqIEBuYW1lIGJhc2UzMkRlY29kZVxuICogQHN1bW1hcnkgRGVsb29rdXAgYSBiYXNlMzIgdmFsdWUuXG4gKiBAZGVzY3JpcHRpb25cbiAqIEZyb20gdGhlIHByb3ZpZGVkIGlucHV0LCBkZWNvZGUgdGhlIGJhc2UzMiBhbmQgcmV0dXJuIHRoZSByZXN1bHQgYXMgYW4gYFVpbnQ4QXJyYXlgLlxuICovXG5leHBvcnQgY29uc3QgYmFzZTMyRGVjb2RlID0gLyojX19QVVJFX18qLyBjcmVhdGVEZWNvZGUoY29uZmlnLCBiYXNlMzJWYWxpZGF0ZSk7XG4vKipcbiogQG5hbWUgYmFzZTMyRW5jb2RlXG4qIEBzdW1tYXJ5IENyZWF0ZXMgYSBiYXNlMzIgdmFsdWUuXG4qIEBkZXNjcmlwdGlvblxuKiBGcm9tIHRoZSBwcm92aWRlZCBpbnB1dCwgY3JlYXRlIHRoZSBiYXNlMzIgYW5kIHJldHVybiB0aGUgcmVzdWx0IGFzIGEgc3RyaW5nLlxuKi9cbmV4cG9ydCBjb25zdCBiYXNlMzJFbmNvZGUgPSAvKiNfX1BVUkVfXyovIGNyZWF0ZUVuY29kZShjb25maWcpO1xuIl0sIm5hbWVzIjpbInV0aWxzIiwiY3JlYXRlRGVjb2RlIiwiY3JlYXRlRW5jb2RlIiwiY3JlYXRlSXMiLCJjcmVhdGVWYWxpZGF0ZSIsImNoYXJzIiwiY29uZmlnIiwiY29kZXIiLCJjaGFpbiIsInJhZGl4MiIsImFscGhhYmV0IiwiZGVjb2RlIiwiaW5wdXQiLCJzcGxpdCIsImVuY29kZSIsImpvaW4iLCJpcGZzIiwidHlwZSIsImJhc2UzMlZhbGlkYXRlIiwiaXNCYXNlMzIiLCJiYXNlMzJEZWNvZGUiLCJiYXNlMzJFbmNvZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/base32/bs32.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/base32/helpers.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/base32/helpers.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDecode: function() { return /* binding */ createDecode; },\n/* harmony export */   createEncode: function() { return /* binding */ createEncode; },\n/* harmony export */   createIs: function() { return /* binding */ createIs; },\n/* harmony export */   createValidate: function() { return /* binding */ createValidate; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n\n/** @internal */ function createDecode(param, validate) {\n    let { coder, ipfs } = param;\n    return (value, ipfsCompat)=>{\n        validate(value, ipfsCompat);\n        return coder.decode(ipfs && ipfsCompat ? value.substring(1) : value);\n    };\n}\n/** @internal */ function createEncode(param) {\n    let { coder, ipfs } = param;\n    return (value, ipfsCompat)=>{\n        const out = coder.encode((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(value));\n        return ipfs && ipfsCompat ? \"\".concat(ipfs).concat(out) : out;\n    };\n}\n/** @internal */ function createIs(validate) {\n    return (value, ipfsCompat)=>{\n        try {\n            return validate(value, ipfsCompat);\n        } catch (e) {\n            return false;\n        }\n    };\n}\n/** @internal */ function createValidate(param) {\n    let { chars, ipfs, type, withPadding } = param;\n    return (value, ipfsCompat)=>{\n        if (typeof value !== \"string\") {\n            throw new Error(\"Expected \".concat(type, \" string input\"));\n        } else if (ipfs && ipfsCompat && !value.startsWith(ipfs)) {\n            throw new Error(\"Expected ipfs-compatible \".concat(type, \" to start with '\").concat(ipfs, \"'\"));\n        }\n        for(let i = ipfsCompat ? 1 : 0, count = value.length; i < count; i++){\n            if (chars.includes(value[i])) {\n            // all ok, character found\n            } else if (withPadding && value[i] === \"=\") {\n                if (i === count - 1) {\n                // last character, everything ok\n                } else if (value[i + 1] === \"=\") {\n                // next one is also padding, sequence ok\n                } else {\n                    throw new Error(\"Invalid \".concat(type, ' padding sequence \"').concat(value[i]).concat(value[i + 1], '\" at index ').concat(i));\n                }\n            } else {\n                throw new Error(\"Invalid \".concat(type, ' character \"').concat(value[i], '\" (0x').concat(value.charCodeAt(i).toString(16), \") at index \").concat(i));\n            }\n        }\n        return true;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYmFzZTMyL2hlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBMEM7QUFDMUMsY0FBYyxHQUNQLFNBQVNDLGFBQWEsS0FBZSxFQUFFQyxRQUFRO1FBQXpCLEVBQUVDLEtBQUssRUFBRUMsSUFBSSxFQUFFLEdBQWY7SUFDekIsT0FBTyxDQUFDQyxPQUFPQztRQUNYSixTQUFTRyxPQUFPQztRQUNoQixPQUFPSCxNQUFNSSxNQUFNLENBQUNILFFBQVFFLGFBQ3RCRCxNQUFNRyxTQUFTLENBQUMsS0FDaEJIO0lBQ1Y7QUFDSjtBQUNBLGNBQWMsR0FDUCxTQUFTSSxhQUFhLEtBQWU7UUFBZixFQUFFTixLQUFLLEVBQUVDLElBQUksRUFBRSxHQUFmO0lBQ3pCLE9BQU8sQ0FBQ0MsT0FBT0M7UUFDWCxNQUFNSSxNQUFNUCxNQUFNUSxNQUFNLENBQUNYLHdEQUFRQSxDQUFDSztRQUNsQyxPQUFPRCxRQUFRRSxhQUNULEdBQVVJLE9BQVBOLE1BQVcsT0FBSk0sT0FDVkE7SUFDVjtBQUNKO0FBQ0EsY0FBYyxHQUNQLFNBQVNFLFNBQVNWLFFBQVE7SUFDN0IsT0FBTyxDQUFDRyxPQUFPQztRQUNYLElBQUk7WUFDQSxPQUFPSixTQUFTRyxPQUFPQztRQUMzQixFQUNBLFVBQU07WUFDRixPQUFPO1FBQ1g7SUFDSjtBQUNKO0FBQ0EsY0FBYyxHQUNQLFNBQVNPLGVBQWUsS0FBa0M7UUFBbEMsRUFBRUMsS0FBSyxFQUFFVixJQUFJLEVBQUVXLElBQUksRUFBRUMsV0FBVyxFQUFFLEdBQWxDO0lBQzNCLE9BQU8sQ0FBQ1gsT0FBT0M7UUFDWCxJQUFJLE9BQU9ELFVBQVUsVUFBVTtZQUMzQixNQUFNLElBQUlZLE1BQU0sWUFBaUIsT0FBTEYsTUFBSztRQUNyQyxPQUNLLElBQUlYLFFBQVFFLGNBQWMsQ0FBQ0QsTUFBTWEsVUFBVSxDQUFDZCxPQUFPO1lBQ3BELE1BQU0sSUFBSWEsTUFBTSw0QkFBbURiLE9BQXZCVyxNQUFLLG9CQUF1QixPQUFMWCxNQUFLO1FBQzVFO1FBQ0EsSUFBSyxJQUFJZSxJQUFLYixhQUFhLElBQUksR0FBSWMsUUFBUWYsTUFBTWdCLE1BQU0sRUFBRUYsSUFBSUMsT0FBT0QsSUFBSztZQUNyRSxJQUFJTCxNQUFNUSxRQUFRLENBQUNqQixLQUFLLENBQUNjLEVBQUUsR0FBRztZQUMxQiwwQkFBMEI7WUFDOUIsT0FDSyxJQUFJSCxlQUFlWCxLQUFLLENBQUNjLEVBQUUsS0FBSyxLQUFLO2dCQUN0QyxJQUFJQSxNQUFNQyxRQUFRLEdBQUc7Z0JBQ2pCLGdDQUFnQztnQkFDcEMsT0FDSyxJQUFJZixLQUFLLENBQUNjLElBQUksRUFBRSxLQUFLLEtBQUs7Z0JBQzNCLHdDQUF3QztnQkFDNUMsT0FDSztvQkFDRCxNQUFNLElBQUlGLE1BQU0sV0FBcUNaLE9BQTFCVSxNQUFLLHVCQUFnQ1YsT0FBWEEsS0FBSyxDQUFDYyxFQUFFLEVBQTZCQSxPQUExQmQsS0FBSyxDQUFDYyxJQUFJLEVBQUUsRUFBQyxlQUFlLE9BQUZBO2dCQUM5RjtZQUNKLE9BQ0s7Z0JBQ0QsTUFBTSxJQUFJRixNQUFNLFdBQThCWixPQUFuQlUsTUFBSyxnQkFBOEJWLE9BQWhCQSxLQUFLLENBQUNjLEVBQUUsRUFBQyxTQUFxREEsT0FBOUNkLE1BQU1rQixVQUFVLENBQUNKLEdBQUdLLFFBQVEsQ0FBQyxLQUFJLGVBQWUsT0FBRkw7WUFDaEg7UUFDSjtRQUNBLE9BQU87SUFDWDtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYmFzZTMyL2hlbHBlcnMuanM/M2JlNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1OGFUb1U4YSB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbi8qKiBAaW50ZXJuYWwgKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVEZWNvZGUoeyBjb2RlciwgaXBmcyB9LCB2YWxpZGF0ZSkge1xuICAgIHJldHVybiAodmFsdWUsIGlwZnNDb21wYXQpID0+IHtcbiAgICAgICAgdmFsaWRhdGUodmFsdWUsIGlwZnNDb21wYXQpO1xuICAgICAgICByZXR1cm4gY29kZXIuZGVjb2RlKGlwZnMgJiYgaXBmc0NvbXBhdFxuICAgICAgICAgICAgPyB2YWx1ZS5zdWJzdHJpbmcoMSlcbiAgICAgICAgICAgIDogdmFsdWUpO1xuICAgIH07XG59XG4vKiogQGludGVybmFsICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRW5jb2RlKHsgY29kZXIsIGlwZnMgfSkge1xuICAgIHJldHVybiAodmFsdWUsIGlwZnNDb21wYXQpID0+IHtcbiAgICAgICAgY29uc3Qgb3V0ID0gY29kZXIuZW5jb2RlKHU4YVRvVThhKHZhbHVlKSk7XG4gICAgICAgIHJldHVybiBpcGZzICYmIGlwZnNDb21wYXRcbiAgICAgICAgICAgID8gYCR7aXBmc30ke291dH1gXG4gICAgICAgICAgICA6IG91dDtcbiAgICB9O1xufVxuLyoqIEBpbnRlcm5hbCAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUlzKHZhbGlkYXRlKSB7XG4gICAgcmV0dXJuICh2YWx1ZSwgaXBmc0NvbXBhdCkgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbGlkYXRlKHZhbHVlLCBpcGZzQ29tcGF0KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9O1xufVxuLyoqIEBpbnRlcm5hbCAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVZhbGlkYXRlKHsgY2hhcnMsIGlwZnMsIHR5cGUsIHdpdGhQYWRkaW5nIH0pIHtcbiAgICByZXR1cm4gKHZhbHVlLCBpcGZzQ29tcGF0KSA9PiB7XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEV4cGVjdGVkICR7dHlwZX0gc3RyaW5nIGlucHV0YCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXBmcyAmJiBpcGZzQ29tcGF0ICYmICF2YWx1ZS5zdGFydHNXaXRoKGlwZnMpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEV4cGVjdGVkIGlwZnMtY29tcGF0aWJsZSAke3R5cGV9IHRvIHN0YXJ0IHdpdGggJyR7aXBmc30nYCk7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChsZXQgaSA9IChpcGZzQ29tcGF0ID8gMSA6IDApLCBjb3VudCA9IHZhbHVlLmxlbmd0aDsgaSA8IGNvdW50OyBpKyspIHtcbiAgICAgICAgICAgIGlmIChjaGFycy5pbmNsdWRlcyh2YWx1ZVtpXSkpIHtcbiAgICAgICAgICAgICAgICAvLyBhbGwgb2ssIGNoYXJhY3RlciBmb3VuZFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAod2l0aFBhZGRpbmcgJiYgdmFsdWVbaV0gPT09ICc9Jykge1xuICAgICAgICAgICAgICAgIGlmIChpID09PSBjb3VudCAtIDEpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gbGFzdCBjaGFyYWN0ZXIsIGV2ZXJ5dGhpbmcgb2tcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAodmFsdWVbaSArIDFdID09PSAnPScpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gbmV4dCBvbmUgaXMgYWxzbyBwYWRkaW5nLCBzZXF1ZW5jZSBva1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkICR7dHlwZX0gcGFkZGluZyBzZXF1ZW5jZSBcIiR7dmFsdWVbaV19JHt2YWx1ZVtpICsgMV19XCIgYXQgaW5kZXggJHtpfWApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCAke3R5cGV9IGNoYXJhY3RlciBcIiR7dmFsdWVbaV19XCIgKDB4JHt2YWx1ZS5jaGFyQ29kZUF0KGkpLnRvU3RyaW5nKDE2KX0pIGF0IGluZGV4ICR7aX1gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbInU4YVRvVThhIiwiY3JlYXRlRGVjb2RlIiwidmFsaWRhdGUiLCJjb2RlciIsImlwZnMiLCJ2YWx1ZSIsImlwZnNDb21wYXQiLCJkZWNvZGUiLCJzdWJzdHJpbmciLCJjcmVhdGVFbmNvZGUiLCJvdXQiLCJlbmNvZGUiLCJjcmVhdGVJcyIsImNyZWF0ZVZhbGlkYXRlIiwiY2hhcnMiLCJ0eXBlIiwid2l0aFBhZGRpbmciLCJFcnJvciIsInN0YXJ0c1dpdGgiLCJpIiwiY291bnQiLCJsZW5ndGgiLCJpbmNsdWRlcyIsImNoYXJDb2RlQXQiLCJ0b1N0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/base32/helpers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/base32/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/base32/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base32Decode: function() { return /* reexport safe */ _bs32_js__WEBPACK_IMPORTED_MODULE_0__.base32Decode; },\n/* harmony export */   base32Encode: function() { return /* reexport safe */ _bs32_js__WEBPACK_IMPORTED_MODULE_0__.base32Encode; },\n/* harmony export */   base32Validate: function() { return /* reexport safe */ _bs32_js__WEBPACK_IMPORTED_MODULE_0__.base32Validate; },\n/* harmony export */   isBase32: function() { return /* reexport safe */ _bs32_js__WEBPACK_IMPORTED_MODULE_0__.isBase32; }\n/* harmony export */ });\n/* harmony import */ var _bs32_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bs32.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/base32/bs32.js\");\n/**\n * @summary Encode and decode base32 values\n */ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYmFzZTMyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0NBRUMsR0FDZ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9iYXNlMzIvaW5kZXguanM/YmFmYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBzdW1tYXJ5IEVuY29kZSBhbmQgZGVjb2RlIGJhc2UzMiB2YWx1ZXNcbiAqL1xuZXhwb3J0IHsgYmFzZTMyRGVjb2RlLCBiYXNlMzJFbmNvZGUsIGJhc2UzMlZhbGlkYXRlLCBpc0Jhc2UzMiB9IGZyb20gJy4vYnMzMi5qcyc7XG4iXSwibmFtZXMiOlsiYmFzZTMyRGVjb2RlIiwiYmFzZTMyRW5jb2RlIiwiYmFzZTMyVmFsaWRhdGUiLCJpc0Jhc2UzMiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/base32/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/base58/bs58.js":
/*!***********************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/base58/bs58.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base58Decode: function() { return /* binding */ base58Decode; },\n/* harmony export */   base58Encode: function() { return /* binding */ base58Encode; },\n/* harmony export */   base58Validate: function() { return /* binding */ base58Validate; },\n/* harmony export */   isBase58: function() { return /* binding */ isBase58; }\n/* harmony export */ });\n/* harmony import */ var _scure_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @scure/base */ \"(app-pages-browser)/./node_modules/@scure/base/lib/esm/index.js\");\n/* harmony import */ var _base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base32/helpers.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/base32/helpers.js\");\n\n\nconst config = {\n    chars: \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\",\n    coder: _scure_base__WEBPACK_IMPORTED_MODULE_0__.base58,\n    ipfs: \"z\",\n    type: \"base58\"\n};\n/**\n * @name base58Validate\n * @summary Validates a base58 value.\n * @description\n * Validates that the supplied value is valid base58, throwing exceptions if not\n */ const base58Validate = /*#__PURE__*/ (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createValidate)(config);\n/**\n * @name base58Decode\n * @summary Decodes a base58 value.\n * @description\n * From the provided input, decode the base58 and return the result as an `Uint8Array`.\n */ const base58Decode = /*#__PURE__*/ (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createDecode)(config, base58Validate);\n/**\n* @name base58Encode\n* @summary Creates a base58 value.\n* @description\n* From the provided input, create the base58 and return the result as a string.\n*/ const base58Encode = /*#__PURE__*/ (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createEncode)(config);\n/**\n* @name isBase58\n* @description Checks if the input is in base58, returning true/false\n*/ const isBase58 = /*#__PURE__*/ (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createIs)(base58Validate);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYmFzZTU4L2JzNTguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXFDO0FBQ3VEO0FBQzVGLE1BQU1LLFNBQVM7SUFDWEMsT0FBTztJQUNQQyxPQUFPUCwrQ0FBTUE7SUFDYlEsTUFBTTtJQUNOQyxNQUFNO0FBQ1Y7QUFDQTs7Ozs7Q0FLQyxHQUNNLE1BQU1DLGlCQUFpQixXQUFXLEdBQUdOLGtFQUFjQSxDQUFDQyxRQUFRO0FBQ25FOzs7OztDQUtDLEdBQ00sTUFBTU0sZUFBZSxXQUFXLEdBQUdWLGdFQUFZQSxDQUFDSSxRQUFRSyxnQkFBZ0I7QUFDL0U7Ozs7O0FBS0EsR0FDTyxNQUFNRSxlQUFlLFdBQVcsR0FBR1YsZ0VBQVlBLENBQUNHLFFBQVE7QUFDL0Q7OztBQUdBLEdBQ08sTUFBTVEsV0FBVyxXQUFXLEdBQUdWLDREQUFRQSxDQUFDTyxnQkFBZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9iYXNlNTgvYnM1OC5qcz9lZmFmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJhc2U1OCB9IGZyb20gJ0BzY3VyZS9iYXNlJztcbmltcG9ydCB7IGNyZWF0ZURlY29kZSwgY3JlYXRlRW5jb2RlLCBjcmVhdGVJcywgY3JlYXRlVmFsaWRhdGUgfSBmcm9tICcuLi9iYXNlMzIvaGVscGVycy5qcyc7XG5jb25zdCBjb25maWcgPSB7XG4gICAgY2hhcnM6ICcxMjM0NTY3ODlBQkNERUZHSEpLTE1OUFFSU1RVVldYWVphYmNkZWZnaGlqa21ub3BxcnN0dXZ3eHl6JyxcbiAgICBjb2RlcjogYmFzZTU4LFxuICAgIGlwZnM6ICd6JyxcbiAgICB0eXBlOiAnYmFzZTU4J1xufTtcbi8qKlxuICogQG5hbWUgYmFzZTU4VmFsaWRhdGVcbiAqIEBzdW1tYXJ5IFZhbGlkYXRlcyBhIGJhc2U1OCB2YWx1ZS5cbiAqIEBkZXNjcmlwdGlvblxuICogVmFsaWRhdGVzIHRoYXQgdGhlIHN1cHBsaWVkIHZhbHVlIGlzIHZhbGlkIGJhc2U1OCwgdGhyb3dpbmcgZXhjZXB0aW9ucyBpZiBub3RcbiAqL1xuZXhwb3J0IGNvbnN0IGJhc2U1OFZhbGlkYXRlID0gLyojX19QVVJFX18qLyBjcmVhdGVWYWxpZGF0ZShjb25maWcpO1xuLyoqXG4gKiBAbmFtZSBiYXNlNThEZWNvZGVcbiAqIEBzdW1tYXJ5IERlY29kZXMgYSBiYXNlNTggdmFsdWUuXG4gKiBAZGVzY3JpcHRpb25cbiAqIEZyb20gdGhlIHByb3ZpZGVkIGlucHV0LCBkZWNvZGUgdGhlIGJhc2U1OCBhbmQgcmV0dXJuIHRoZSByZXN1bHQgYXMgYW4gYFVpbnQ4QXJyYXlgLlxuICovXG5leHBvcnQgY29uc3QgYmFzZTU4RGVjb2RlID0gLyojX19QVVJFX18qLyBjcmVhdGVEZWNvZGUoY29uZmlnLCBiYXNlNThWYWxpZGF0ZSk7XG4vKipcbiogQG5hbWUgYmFzZTU4RW5jb2RlXG4qIEBzdW1tYXJ5IENyZWF0ZXMgYSBiYXNlNTggdmFsdWUuXG4qIEBkZXNjcmlwdGlvblxuKiBGcm9tIHRoZSBwcm92aWRlZCBpbnB1dCwgY3JlYXRlIHRoZSBiYXNlNTggYW5kIHJldHVybiB0aGUgcmVzdWx0IGFzIGEgc3RyaW5nLlxuKi9cbmV4cG9ydCBjb25zdCBiYXNlNThFbmNvZGUgPSAvKiNfX1BVUkVfXyovIGNyZWF0ZUVuY29kZShjb25maWcpO1xuLyoqXG4qIEBuYW1lIGlzQmFzZTU4XG4qIEBkZXNjcmlwdGlvbiBDaGVja3MgaWYgdGhlIGlucHV0IGlzIGluIGJhc2U1OCwgcmV0dXJuaW5nIHRydWUvZmFsc2VcbiovXG5leHBvcnQgY29uc3QgaXNCYXNlNTggPSAvKiNfX1BVUkVfXyovIGNyZWF0ZUlzKGJhc2U1OFZhbGlkYXRlKTtcbiJdLCJuYW1lcyI6WyJiYXNlNTgiLCJjcmVhdGVEZWNvZGUiLCJjcmVhdGVFbmNvZGUiLCJjcmVhdGVJcyIsImNyZWF0ZVZhbGlkYXRlIiwiY29uZmlnIiwiY2hhcnMiLCJjb2RlciIsImlwZnMiLCJ0eXBlIiwiYmFzZTU4VmFsaWRhdGUiLCJiYXNlNThEZWNvZGUiLCJiYXNlNThFbmNvZGUiLCJpc0Jhc2U1OCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/base58/bs58.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/base58/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/base58/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base58Decode: function() { return /* reexport safe */ _bs58_js__WEBPACK_IMPORTED_MODULE_0__.base58Decode; },\n/* harmony export */   base58Encode: function() { return /* reexport safe */ _bs58_js__WEBPACK_IMPORTED_MODULE_0__.base58Encode; },\n/* harmony export */   base58Validate: function() { return /* reexport safe */ _bs58_js__WEBPACK_IMPORTED_MODULE_0__.base58Validate; },\n/* harmony export */   isBase58: function() { return /* reexport safe */ _bs58_js__WEBPACK_IMPORTED_MODULE_0__.isBase58; }\n/* harmony export */ });\n/* harmony import */ var _bs58_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bs58.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/base58/bs58.js\");\n/**\n * @summary Encode and decode base58 values\n */ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYmFzZTU4L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0NBRUMsR0FDZ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9iYXNlNTgvaW5kZXguanM/Nzk1MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBzdW1tYXJ5IEVuY29kZSBhbmQgZGVjb2RlIGJhc2U1OCB2YWx1ZXNcbiAqL1xuZXhwb3J0IHsgYmFzZTU4RGVjb2RlLCBiYXNlNThFbmNvZGUsIGJhc2U1OFZhbGlkYXRlLCBpc0Jhc2U1OCB9IGZyb20gJy4vYnM1OC5qcyc7XG4iXSwibmFtZXMiOlsiYmFzZTU4RGVjb2RlIiwiYmFzZTU4RW5jb2RlIiwiYmFzZTU4VmFsaWRhdGUiLCJpc0Jhc2U1OCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/base58/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/base64/bs64.js":
/*!***********************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/base64/bs64.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64Decode: function() { return /* binding */ base64Decode; },\n/* harmony export */   base64Encode: function() { return /* binding */ base64Encode; },\n/* harmony export */   base64Validate: function() { return /* binding */ base64Validate; },\n/* harmony export */   isBase64: function() { return /* binding */ isBase64; }\n/* harmony export */ });\n/* harmony import */ var _scure_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @scure/base */ \"(app-pages-browser)/./node_modules/@scure/base/lib/esm/index.js\");\n/* harmony import */ var _base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base32/helpers.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/base32/helpers.js\");\n\n\nconst config = {\n    chars: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",\n    coder: _scure_base__WEBPACK_IMPORTED_MODULE_0__.base64,\n    type: \"base64\",\n    withPadding: true\n};\n/**\n * @name base64Validate\n * @summary Validates a base64 value.\n * @description\n * Validates that the supplied value is valid base64\n */ const base64Validate = /*#__PURE__*/ (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createValidate)(config);\n/**\n * @name isBase64\n * @description Checks if the input is in base64, returning true/false\n */ const isBase64 = /*#__PURE__*/ (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createIs)(base64Validate);\n/**\n * @name base64Decode\n * @summary Decodes a base64 value.\n * @description\n * From the provided input, decode the base64 and return the result as an `Uint8Array`.\n */ const base64Decode = /*#__PURE__*/ (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createDecode)(config, base64Validate);\n/**\n * @name base64Encode\n * @summary Creates a base64 value.\n * @description\n * From the provided input, create the base64 and return the result as a string.\n */ const base64Encode = /*#__PURE__*/ (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createEncode)(config);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYmFzZTY0L2JzNjQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXFDO0FBQ3VEO0FBQzVGLE1BQU1LLFNBQVM7SUFDWEMsT0FBTztJQUNQQyxPQUFPUCwrQ0FBTUE7SUFDYlEsTUFBTTtJQUNOQyxhQUFhO0FBQ2pCO0FBQ0E7Ozs7O0NBS0MsR0FDTSxNQUFNQyxpQkFBaUIsV0FBVyxHQUFHTixrRUFBY0EsQ0FBQ0MsUUFBUTtBQUNuRTs7O0NBR0MsR0FDTSxNQUFNTSxXQUFXLFdBQVcsR0FBR1IsNERBQVFBLENBQUNPLGdCQUFnQjtBQUMvRDs7Ozs7Q0FLQyxHQUNNLE1BQU1FLGVBQWUsV0FBVyxHQUFHWCxnRUFBWUEsQ0FBQ0ksUUFBUUssZ0JBQWdCO0FBQy9FOzs7OztDQUtDLEdBQ00sTUFBTUcsZUFBZSxXQUFXLEdBQUdYLGdFQUFZQSxDQUFDRyxRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYmFzZTY0L2JzNjQuanM/MTBjMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiYXNlNjQgfSBmcm9tICdAc2N1cmUvYmFzZSc7XG5pbXBvcnQgeyBjcmVhdGVEZWNvZGUsIGNyZWF0ZUVuY29kZSwgY3JlYXRlSXMsIGNyZWF0ZVZhbGlkYXRlIH0gZnJvbSAnLi4vYmFzZTMyL2hlbHBlcnMuanMnO1xuY29uc3QgY29uZmlnID0ge1xuICAgIGNoYXJzOiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLycsXG4gICAgY29kZXI6IGJhc2U2NCxcbiAgICB0eXBlOiAnYmFzZTY0JyxcbiAgICB3aXRoUGFkZGluZzogdHJ1ZVxufTtcbi8qKlxuICogQG5hbWUgYmFzZTY0VmFsaWRhdGVcbiAqIEBzdW1tYXJ5IFZhbGlkYXRlcyBhIGJhc2U2NCB2YWx1ZS5cbiAqIEBkZXNjcmlwdGlvblxuICogVmFsaWRhdGVzIHRoYXQgdGhlIHN1cHBsaWVkIHZhbHVlIGlzIHZhbGlkIGJhc2U2NFxuICovXG5leHBvcnQgY29uc3QgYmFzZTY0VmFsaWRhdGUgPSAvKiNfX1BVUkVfXyovIGNyZWF0ZVZhbGlkYXRlKGNvbmZpZyk7XG4vKipcbiAqIEBuYW1lIGlzQmFzZTY0XG4gKiBAZGVzY3JpcHRpb24gQ2hlY2tzIGlmIHRoZSBpbnB1dCBpcyBpbiBiYXNlNjQsIHJldHVybmluZyB0cnVlL2ZhbHNlXG4gKi9cbmV4cG9ydCBjb25zdCBpc0Jhc2U2NCA9IC8qI19fUFVSRV9fKi8gY3JlYXRlSXMoYmFzZTY0VmFsaWRhdGUpO1xuLyoqXG4gKiBAbmFtZSBiYXNlNjREZWNvZGVcbiAqIEBzdW1tYXJ5IERlY29kZXMgYSBiYXNlNjQgdmFsdWUuXG4gKiBAZGVzY3JpcHRpb25cbiAqIEZyb20gdGhlIHByb3ZpZGVkIGlucHV0LCBkZWNvZGUgdGhlIGJhc2U2NCBhbmQgcmV0dXJuIHRoZSByZXN1bHQgYXMgYW4gYFVpbnQ4QXJyYXlgLlxuICovXG5leHBvcnQgY29uc3QgYmFzZTY0RGVjb2RlID0gLyojX19QVVJFX18qLyBjcmVhdGVEZWNvZGUoY29uZmlnLCBiYXNlNjRWYWxpZGF0ZSk7XG4vKipcbiAqIEBuYW1lIGJhc2U2NEVuY29kZVxuICogQHN1bW1hcnkgQ3JlYXRlcyBhIGJhc2U2NCB2YWx1ZS5cbiAqIEBkZXNjcmlwdGlvblxuICogRnJvbSB0aGUgcHJvdmlkZWQgaW5wdXQsIGNyZWF0ZSB0aGUgYmFzZTY0IGFuZCByZXR1cm4gdGhlIHJlc3VsdCBhcyBhIHN0cmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IGJhc2U2NEVuY29kZSA9IC8qI19fUFVSRV9fKi8gY3JlYXRlRW5jb2RlKGNvbmZpZyk7XG4iXSwibmFtZXMiOlsiYmFzZTY0IiwiY3JlYXRlRGVjb2RlIiwiY3JlYXRlRW5jb2RlIiwiY3JlYXRlSXMiLCJjcmVhdGVWYWxpZGF0ZSIsImNvbmZpZyIsImNoYXJzIiwiY29kZXIiLCJ0eXBlIiwid2l0aFBhZGRpbmciLCJiYXNlNjRWYWxpZGF0ZSIsImlzQmFzZTY0IiwiYmFzZTY0RGVjb2RlIiwiYmFzZTY0RW5jb2RlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/base64/bs64.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/base64/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/base64/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64Decode: function() { return /* reexport safe */ _bs64_js__WEBPACK_IMPORTED_MODULE_0__.base64Decode; },\n/* harmony export */   base64Encode: function() { return /* reexport safe */ _bs64_js__WEBPACK_IMPORTED_MODULE_0__.base64Encode; },\n/* harmony export */   base64Pad: function() { return /* reexport safe */ _pad_js__WEBPACK_IMPORTED_MODULE_1__.base64Pad; },\n/* harmony export */   base64Trim: function() { return /* reexport safe */ _trim_js__WEBPACK_IMPORTED_MODULE_2__.base64Trim; },\n/* harmony export */   base64Validate: function() { return /* reexport safe */ _bs64_js__WEBPACK_IMPORTED_MODULE_0__.base64Validate; },\n/* harmony export */   isBase64: function() { return /* reexport safe */ _bs64_js__WEBPACK_IMPORTED_MODULE_0__.isBase64; }\n/* harmony export */ });\n/* harmony import */ var _bs64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bs64.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/base64/bs64.js\");\n/* harmony import */ var _pad_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pad.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/base64/pad.js\");\n/* harmony import */ var _trim_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./trim.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/base64/trim.js\");\n/**\n * @summary Encode and decode base64 values\n */ \n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYmFzZTY0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBOztDQUVDLEdBQ2dGO0FBQzVDO0FBQ0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9iYXNlNjQvaW5kZXguanM/Mjk5NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBzdW1tYXJ5IEVuY29kZSBhbmQgZGVjb2RlIGJhc2U2NCB2YWx1ZXNcbiAqL1xuZXhwb3J0IHsgYmFzZTY0RGVjb2RlLCBiYXNlNjRFbmNvZGUsIGJhc2U2NFZhbGlkYXRlLCBpc0Jhc2U2NCB9IGZyb20gJy4vYnM2NC5qcyc7XG5leHBvcnQgeyBiYXNlNjRQYWQgfSBmcm9tICcuL3BhZC5qcyc7XG5leHBvcnQgeyBiYXNlNjRUcmltIH0gZnJvbSAnLi90cmltLmpzJztcbiJdLCJuYW1lcyI6WyJiYXNlNjREZWNvZGUiLCJiYXNlNjRFbmNvZGUiLCJiYXNlNjRWYWxpZGF0ZSIsImlzQmFzZTY0IiwiYmFzZTY0UGFkIiwiYmFzZTY0VHJpbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/base64/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/base64/pad.js":
/*!**********************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/base64/pad.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64Pad: function() { return /* binding */ base64Pad; }\n/* harmony export */ });\n/**\n * @name base64Pad\n * @description Adds padding characters for correct length\n */ function base64Pad(value) {\n    return value.padEnd(value.length + value.length % 4, \"=\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYmFzZTY0L3BhZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7OztDQUdDLEdBQ00sU0FBU0EsVUFBVUMsS0FBSztJQUMzQixPQUFPQSxNQUFNQyxNQUFNLENBQUNELE1BQU1FLE1BQU0sR0FBSUYsTUFBTUUsTUFBTSxHQUFHLEdBQUk7QUFDM0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9iYXNlNjQvcGFkLmpzPzExNDUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbmFtZSBiYXNlNjRQYWRcbiAqIEBkZXNjcmlwdGlvbiBBZGRzIHBhZGRpbmcgY2hhcmFjdGVycyBmb3IgY29ycmVjdCBsZW5ndGhcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJhc2U2NFBhZCh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZS5wYWRFbmQodmFsdWUubGVuZ3RoICsgKHZhbHVlLmxlbmd0aCAlIDQpLCAnPScpO1xufVxuIl0sIm5hbWVzIjpbImJhc2U2NFBhZCIsInZhbHVlIiwicGFkRW5kIiwibGVuZ3RoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/base64/pad.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/base64/trim.js":
/*!***********************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/base64/trim.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64Trim: function() { return /* binding */ base64Trim; }\n/* harmony export */ });\n/**\n * @name base64Trim\n * @description Trims padding characters\n */ function base64Trim(value) {\n    while(value.length && value.endsWith(\"=\")){\n        value = value.slice(0, -1);\n    }\n    return value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYmFzZTY0L3RyaW0uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Q0FHQyxHQUNNLFNBQVNBLFdBQVdDLEtBQUs7SUFDNUIsTUFBT0EsTUFBTUMsTUFBTSxJQUFJRCxNQUFNRSxRQUFRLENBQUMsS0FBTTtRQUN4Q0YsUUFBUUEsTUFBTUcsS0FBSyxDQUFDLEdBQUcsQ0FBQztJQUM1QjtJQUNBLE9BQU9IO0FBQ1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9iYXNlNjQvdHJpbS5qcz8yNTI4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG5hbWUgYmFzZTY0VHJpbVxuICogQGRlc2NyaXB0aW9uIFRyaW1zIHBhZGRpbmcgY2hhcmFjdGVyc1xuICovXG5leHBvcnQgZnVuY3Rpb24gYmFzZTY0VHJpbSh2YWx1ZSkge1xuICAgIHdoaWxlICh2YWx1ZS5sZW5ndGggJiYgdmFsdWUuZW5kc1dpdGgoJz0nKSkge1xuICAgICAgICB2YWx1ZSA9IHZhbHVlLnNsaWNlKDAsIC0xKTtcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlO1xufVxuIl0sIm5hbWVzIjpbImJhc2U2NFRyaW0iLCJ2YWx1ZSIsImxlbmd0aCIsImVuZHNXaXRoIiwic2xpY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/base64/trim.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/blake2/asU8a.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/blake2/asU8a.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   blake2AsHex: function() { return /* binding */ blake2AsHex; },\n/* harmony export */   blake2AsU8a: function() { return /* binding */ blake2AsU8a; }\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_blake2b__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @noble/hashes/blake2b */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/blake2b.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/has.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/helpers.js\");\n\n\n\n\n/**\n * @name blake2AsU8a\n * @summary Creates a blake2b u8a from the input.\n * @description\n * From a `Uint8Array` input, create the blake2b and return the result as a u8a with the specified `bitLength`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { blake2AsU8a } from '@polkadot/util-crypto';\n *\n * blake2AsU8a('abc'); // => [0xba, 0x80, 0xa5, 0x3f, 0x98, 0x1c, 0x4d, 0x0d]\n * ```\n */ function blake2AsU8a(data) {\n    let bitLength = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 256, key = arguments.length > 2 ? arguments[2] : void 0, onlyJs = arguments.length > 3 ? arguments[3] : void 0;\n    const byteLength = Math.ceil(bitLength / 8);\n    const u8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(data);\n    return !_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.isReady)() ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.blake2b)(u8a, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(key), byteLength) : key ? (0,_noble_hashes_blake2b__WEBPACK_IMPORTED_MODULE_3__.blake2b)(u8a, {\n        dkLen: byteLength,\n        key\n    }) : (0,_noble_hashes_blake2b__WEBPACK_IMPORTED_MODULE_3__.blake2b)(u8a, {\n        dkLen: byteLength\n    });\n}\n/**\n * @name blake2AsHex\n * @description Creates a blake2b hex from the input.\n */ const blake2AsHex = /*#__PURE__*/ (0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.createAsHex)(blake2AsU8a);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYmxha2UyL2FzVThhLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBNkQ7QUFDUjtBQUNJO0FBQ2I7QUFDNUM7Ozs7Ozs7Ozs7Ozs7Q0FhQyxHQUNNLFNBQVNNLFlBQVlDLElBQUk7UUFBRUMsWUFBQUEsaUVBQVksS0FBS0Msb0RBQUtDO0lBQ3BELE1BQU1DLGFBQWFDLEtBQUtDLElBQUksQ0FBQ0wsWUFBWTtJQUN6QyxNQUFNTSxNQUFNWCx3REFBUUEsQ0FBQ0k7SUFDckIsT0FBTyxDQUFDTCxxREFBU0EsSUFBSyxDQUFDUSxVQUFVTiw4REFBT0EsS0FDbENKLDhEQUFPQSxDQUFDYyxLQUFLWCx3REFBUUEsQ0FBQ00sTUFBTUUsY0FDNUJGLE1BQ0lSLDhEQUFTQSxDQUFDYSxLQUFLO1FBQUVDLE9BQU9KO1FBQVlGO0lBQUksS0FDeENSLDhEQUFTQSxDQUFDYSxLQUFLO1FBQUVDLE9BQU9KO0lBQVc7QUFDakQ7QUFDQTs7O0NBR0MsR0FDTSxNQUFNSyxjQUFjLFdBQVcsR0FBR1gsd0RBQVdBLENBQUNDLGFBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9ibGFrZTIvYXNVOGEuanM/ZmNkNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBibGFrZTJiIGFzIGJsYWtlMmJKcyB9IGZyb20gJ0Bub2JsZS9oYXNoZXMvYmxha2UyYic7XG5pbXBvcnQgeyBoYXNCaWdJbnQsIHU4YVRvVThhIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgYmxha2UyYiwgaXNSZWFkeSB9IGZyb20gJ0Bwb2xrYWRvdC93YXNtLWNyeXB0byc7XG5pbXBvcnQgeyBjcmVhdGVBc0hleCB9IGZyb20gJy4uL2hlbHBlcnMuanMnO1xuLyoqXG4gKiBAbmFtZSBibGFrZTJBc1U4YVxuICogQHN1bW1hcnkgQ3JlYXRlcyBhIGJsYWtlMmIgdThhIGZyb20gdGhlIGlucHV0LlxuICogQGRlc2NyaXB0aW9uXG4gKiBGcm9tIGEgYFVpbnQ4QXJyYXlgIGlucHV0LCBjcmVhdGUgdGhlIGJsYWtlMmIgYW5kIHJldHVybiB0aGUgcmVzdWx0IGFzIGEgdThhIHdpdGggdGhlIHNwZWNpZmllZCBgYml0TGVuZ3RoYC5cbiAqIEBleGFtcGxlXG4gKiA8QlI+XG4gKlxuICogYGBgamF2YXNjcmlwdFxuICogaW1wb3J0IHsgYmxha2UyQXNVOGEgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbC1jcnlwdG8nO1xuICpcbiAqIGJsYWtlMkFzVThhKCdhYmMnKTsgLy8gPT4gWzB4YmEsIDB4ODAsIDB4YTUsIDB4M2YsIDB4OTgsIDB4MWMsIDB4NGQsIDB4MGRdXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJsYWtlMkFzVThhKGRhdGEsIGJpdExlbmd0aCA9IDI1Niwga2V5LCBvbmx5SnMpIHtcbiAgICBjb25zdCBieXRlTGVuZ3RoID0gTWF0aC5jZWlsKGJpdExlbmd0aCAvIDgpO1xuICAgIGNvbnN0IHU4YSA9IHU4YVRvVThhKGRhdGEpO1xuICAgIHJldHVybiAhaGFzQmlnSW50IHx8ICghb25seUpzICYmIGlzUmVhZHkoKSlcbiAgICAgICAgPyBibGFrZTJiKHU4YSwgdThhVG9VOGEoa2V5KSwgYnl0ZUxlbmd0aClcbiAgICAgICAgOiBrZXlcbiAgICAgICAgICAgID8gYmxha2UyYkpzKHU4YSwgeyBka0xlbjogYnl0ZUxlbmd0aCwga2V5IH0pXG4gICAgICAgICAgICA6IGJsYWtlMmJKcyh1OGEsIHsgZGtMZW46IGJ5dGVMZW5ndGggfSk7XG59XG4vKipcbiAqIEBuYW1lIGJsYWtlMkFzSGV4XG4gKiBAZGVzY3JpcHRpb24gQ3JlYXRlcyBhIGJsYWtlMmIgaGV4IGZyb20gdGhlIGlucHV0LlxuICovXG5leHBvcnQgY29uc3QgYmxha2UyQXNIZXggPSAvKiNfX1BVUkVfXyovIGNyZWF0ZUFzSGV4KGJsYWtlMkFzVThhKTtcbiJdLCJuYW1lcyI6WyJibGFrZTJiIiwiYmxha2UyYkpzIiwiaGFzQmlnSW50IiwidThhVG9VOGEiLCJpc1JlYWR5IiwiY3JlYXRlQXNIZXgiLCJibGFrZTJBc1U4YSIsImRhdGEiLCJiaXRMZW5ndGgiLCJrZXkiLCJvbmx5SnMiLCJieXRlTGVuZ3RoIiwiTWF0aCIsImNlaWwiLCJ1OGEiLCJka0xlbiIsImJsYWtlMkFzSGV4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/blake2/asU8a.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/blake2/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/blake2/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   blake2AsHex: function() { return /* reexport safe */ _asU8a_js__WEBPACK_IMPORTED_MODULE_0__.blake2AsHex; },\n/* harmony export */   blake2AsU8a: function() { return /* reexport safe */ _asU8a_js__WEBPACK_IMPORTED_MODULE_0__.blake2AsU8a; }\n/* harmony export */ });\n/* harmony import */ var _asU8a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./asU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/blake2/asU8a.js\");\n/**\n * @summary Create blake2b values with specified bitlengths\n */ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYmxha2UyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztDQUVDLEdBQ3FEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYmxha2UyL2luZGV4LmpzPzAyZmYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAc3VtbWFyeSBDcmVhdGUgYmxha2UyYiB2YWx1ZXMgd2l0aCBzcGVjaWZpZWQgYml0bGVuZ3Roc1xuICovXG5leHBvcnQgeyBibGFrZTJBc0hleCwgYmxha2UyQXNVOGEgfSBmcm9tICcuL2FzVThhLmpzJztcbiJdLCJuYW1lcyI6WyJibGFrZTJBc0hleCIsImJsYWtlMkFzVThhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/blake2/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/bn.js":
/*!**************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/bn.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BN_BE_256_OPTS: function() { return /* binding */ BN_BE_256_OPTS; },\n/* harmony export */   BN_BE_32_OPTS: function() { return /* binding */ BN_BE_32_OPTS; },\n/* harmony export */   BN_BE_OPTS: function() { return /* binding */ BN_BE_OPTS; },\n/* harmony export */   BN_LE_16_OPTS: function() { return /* binding */ BN_LE_16_OPTS; },\n/* harmony export */   BN_LE_256_OPTS: function() { return /* binding */ BN_LE_256_OPTS; },\n/* harmony export */   BN_LE_32_OPTS: function() { return /* binding */ BN_LE_32_OPTS; },\n/* harmony export */   BN_LE_512_OPTS: function() { return /* binding */ BN_LE_512_OPTS; },\n/* harmony export */   BN_LE_OPTS: function() { return /* binding */ BN_LE_OPTS; }\n/* harmony export */ });\nconst BN_BE_OPTS = {\n    isLe: false\n};\nconst BN_LE_OPTS = {\n    isLe: true\n};\nconst BN_LE_16_OPTS = {\n    bitLength: 16,\n    isLe: true\n};\nconst BN_BE_32_OPTS = {\n    bitLength: 32,\n    isLe: false\n};\nconst BN_LE_32_OPTS = {\n    bitLength: 32,\n    isLe: true\n};\nconst BN_BE_256_OPTS = {\n    bitLength: 256,\n    isLe: false\n};\nconst BN_LE_256_OPTS = {\n    bitLength: 256,\n    isLe: true\n};\nconst BN_LE_512_OPTS = {\n    bitLength: 512,\n    isLe: true\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYm4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBTyxNQUFNQSxhQUFhO0lBQUVDLE1BQU07QUFBTSxFQUFFO0FBQ25DLE1BQU1DLGFBQWE7SUFBRUQsTUFBTTtBQUFLLEVBQUU7QUFDbEMsTUFBTUUsZ0JBQWdCO0lBQUVDLFdBQVc7SUFBSUgsTUFBTTtBQUFLLEVBQUU7QUFDcEQsTUFBTUksZ0JBQWdCO0lBQUVELFdBQVc7SUFBSUgsTUFBTTtBQUFNLEVBQUU7QUFDckQsTUFBTUssZ0JBQWdCO0lBQUVGLFdBQVc7SUFBSUgsTUFBTTtBQUFLLEVBQUU7QUFDcEQsTUFBTU0saUJBQWlCO0lBQUVILFdBQVc7SUFBS0gsTUFBTTtBQUFNLEVBQUU7QUFDdkQsTUFBTU8saUJBQWlCO0lBQUVKLFdBQVc7SUFBS0gsTUFBTTtBQUFLLEVBQUU7QUFDdEQsTUFBTVEsaUJBQWlCO0lBQUVMLFdBQVc7SUFBS0gsTUFBTTtBQUFLLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9ibi5qcz9kZjBhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBCTl9CRV9PUFRTID0geyBpc0xlOiBmYWxzZSB9O1xuZXhwb3J0IGNvbnN0IEJOX0xFX09QVFMgPSB7IGlzTGU6IHRydWUgfTtcbmV4cG9ydCBjb25zdCBCTl9MRV8xNl9PUFRTID0geyBiaXRMZW5ndGg6IDE2LCBpc0xlOiB0cnVlIH07XG5leHBvcnQgY29uc3QgQk5fQkVfMzJfT1BUUyA9IHsgYml0TGVuZ3RoOiAzMiwgaXNMZTogZmFsc2UgfTtcbmV4cG9ydCBjb25zdCBCTl9MRV8zMl9PUFRTID0geyBiaXRMZW5ndGg6IDMyLCBpc0xlOiB0cnVlIH07XG5leHBvcnQgY29uc3QgQk5fQkVfMjU2X09QVFMgPSB7IGJpdExlbmd0aDogMjU2LCBpc0xlOiBmYWxzZSB9O1xuZXhwb3J0IGNvbnN0IEJOX0xFXzI1Nl9PUFRTID0geyBiaXRMZW5ndGg6IDI1NiwgaXNMZTogdHJ1ZSB9O1xuZXhwb3J0IGNvbnN0IEJOX0xFXzUxMl9PUFRTID0geyBiaXRMZW5ndGg6IDUxMiwgaXNMZTogdHJ1ZSB9O1xuIl0sIm5hbWVzIjpbIkJOX0JFX09QVFMiLCJpc0xlIiwiQk5fTEVfT1BUUyIsIkJOX0xFXzE2X09QVFMiLCJiaXRMZW5ndGgiLCJCTl9CRV8zMl9PUFRTIiwiQk5fTEVfMzJfT1BUUyIsIkJOX0JFXzI1Nl9PUFRTIiwiQk5fTEVfMjU2X09QVFMiLCJCTl9MRV81MTJfT1BUUyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/bn.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/bundle.js":
/*!******************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/bundle.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addressEq: function() { return /* reexport safe */ _address_index_js__WEBPACK_IMPORTED_MODULE_2__.addressEq; },\n/* harmony export */   addressToEvm: function() { return /* reexport safe */ _address_index_js__WEBPACK_IMPORTED_MODULE_2__.addressToEvm; },\n/* harmony export */   allNetworks: function() { return /* reexport safe */ _networks_js__WEBPACK_IMPORTED_MODULE_17__.allNetworks; },\n/* harmony export */   availableNetworks: function() { return /* reexport safe */ _networks_js__WEBPACK_IMPORTED_MODULE_17__.availableNetworks; },\n/* harmony export */   base32Decode: function() { return /* reexport safe */ _base32_index_js__WEBPACK_IMPORTED_MODULE_3__.base32Decode; },\n/* harmony export */   base32Encode: function() { return /* reexport safe */ _base32_index_js__WEBPACK_IMPORTED_MODULE_3__.base32Encode; },\n/* harmony export */   base32Validate: function() { return /* reexport safe */ _base32_index_js__WEBPACK_IMPORTED_MODULE_3__.base32Validate; },\n/* harmony export */   base58Decode: function() { return /* reexport safe */ _base58_index_js__WEBPACK_IMPORTED_MODULE_4__.base58Decode; },\n/* harmony export */   base58Encode: function() { return /* reexport safe */ _base58_index_js__WEBPACK_IMPORTED_MODULE_4__.base58Encode; },\n/* harmony export */   base58Validate: function() { return /* reexport safe */ _base58_index_js__WEBPACK_IMPORTED_MODULE_4__.base58Validate; },\n/* harmony export */   base64Decode: function() { return /* reexport safe */ _base64_index_js__WEBPACK_IMPORTED_MODULE_5__.base64Decode; },\n/* harmony export */   base64Encode: function() { return /* reexport safe */ _base64_index_js__WEBPACK_IMPORTED_MODULE_5__.base64Encode; },\n/* harmony export */   base64Pad: function() { return /* reexport safe */ _base64_index_js__WEBPACK_IMPORTED_MODULE_5__.base64Pad; },\n/* harmony export */   base64Trim: function() { return /* reexport safe */ _base64_index_js__WEBPACK_IMPORTED_MODULE_5__.base64Trim; },\n/* harmony export */   base64Validate: function() { return /* reexport safe */ _base64_index_js__WEBPACK_IMPORTED_MODULE_5__.base64Validate; },\n/* harmony export */   blake2AsHex: function() { return /* reexport safe */ _blake2_index_js__WEBPACK_IMPORTED_MODULE_6__.blake2AsHex; },\n/* harmony export */   blake2AsU8a: function() { return /* reexport safe */ _blake2_index_js__WEBPACK_IMPORTED_MODULE_6__.blake2AsU8a; },\n/* harmony export */   checkAddress: function() { return /* reexport safe */ _address_index_js__WEBPACK_IMPORTED_MODULE_2__.checkAddress; },\n/* harmony export */   checkAddressChecksum: function() { return /* reexport safe */ _address_index_js__WEBPACK_IMPORTED_MODULE_2__.checkAddressChecksum; },\n/* harmony export */   createKeyDerived: function() { return /* reexport safe */ _address_index_js__WEBPACK_IMPORTED_MODULE_2__.createKeyDerived; },\n/* harmony export */   createKeyMulti: function() { return /* reexport safe */ _address_index_js__WEBPACK_IMPORTED_MODULE_2__.createKeyMulti; },\n/* harmony export */   cryptoIsReady: function() { return /* reexport safe */ _crypto_js__WEBPACK_IMPORTED_MODULE_7__.cryptoIsReady; },\n/* harmony export */   cryptoWaitReady: function() { return /* reexport safe */ _crypto_js__WEBPACK_IMPORTED_MODULE_7__.cryptoWaitReady; },\n/* harmony export */   decodeAddress: function() { return /* reexport safe */ _address_index_js__WEBPACK_IMPORTED_MODULE_2__.decodeAddress; },\n/* harmony export */   deriveAddress: function() { return /* reexport safe */ _address_index_js__WEBPACK_IMPORTED_MODULE_2__.deriveAddress; },\n/* harmony export */   ed25519DeriveHard: function() { return /* reexport safe */ _ed25519_index_js__WEBPACK_IMPORTED_MODULE_8__.ed25519DeriveHard; },\n/* harmony export */   ed25519PairFromRandom: function() { return /* reexport safe */ _ed25519_index_js__WEBPACK_IMPORTED_MODULE_8__.ed25519PairFromRandom; },\n/* harmony export */   ed25519PairFromSecret: function() { return /* reexport safe */ _ed25519_index_js__WEBPACK_IMPORTED_MODULE_8__.ed25519PairFromSecret; },\n/* harmony export */   ed25519PairFromSeed: function() { return /* reexport safe */ _ed25519_index_js__WEBPACK_IMPORTED_MODULE_8__.ed25519PairFromSeed; },\n/* harmony export */   ed25519PairFromString: function() { return /* reexport safe */ _ed25519_index_js__WEBPACK_IMPORTED_MODULE_8__.ed25519PairFromString; },\n/* harmony export */   ed25519Sign: function() { return /* reexport safe */ _ed25519_index_js__WEBPACK_IMPORTED_MODULE_8__.ed25519Sign; },\n/* harmony export */   ed25519Verify: function() { return /* reexport safe */ _ed25519_index_js__WEBPACK_IMPORTED_MODULE_8__.ed25519Verify; },\n/* harmony export */   encodeAddress: function() { return /* reexport safe */ _address_index_js__WEBPACK_IMPORTED_MODULE_2__.encodeAddress; },\n/* harmony export */   encodeDerivedAddress: function() { return /* reexport safe */ _address_index_js__WEBPACK_IMPORTED_MODULE_2__.encodeDerivedAddress; },\n/* harmony export */   encodeMultiAddress: function() { return /* reexport safe */ _address_index_js__WEBPACK_IMPORTED_MODULE_2__.encodeMultiAddress; },\n/* harmony export */   ethereumEncode: function() { return /* reexport safe */ _ethereum_index_js__WEBPACK_IMPORTED_MODULE_9__.ethereumEncode; },\n/* harmony export */   evmToAddress: function() { return /* reexport safe */ _address_index_js__WEBPACK_IMPORTED_MODULE_2__.evmToAddress; },\n/* harmony export */   hdEthereum: function() { return /* reexport safe */ _hd_index_js__WEBPACK_IMPORTED_MODULE_10__.hdEthereum; },\n/* harmony export */   hdLedger: function() { return /* reexport safe */ _hd_index_js__WEBPACK_IMPORTED_MODULE_10__.hdLedger; },\n/* harmony export */   hdValidatePath: function() { return /* reexport safe */ _hd_index_js__WEBPACK_IMPORTED_MODULE_10__.hdValidatePath; },\n/* harmony export */   hmacSha256AsU8a: function() { return /* reexport safe */ _hmac_index_js__WEBPACK_IMPORTED_MODULE_11__.hmacSha256AsU8a; },\n/* harmony export */   hmacSha512AsU8a: function() { return /* reexport safe */ _hmac_index_js__WEBPACK_IMPORTED_MODULE_11__.hmacSha512AsU8a; },\n/* harmony export */   hmacShaAsU8a: function() { return /* reexport safe */ _hmac_index_js__WEBPACK_IMPORTED_MODULE_11__.hmacShaAsU8a; },\n/* harmony export */   isAddress: function() { return /* reexport safe */ _address_index_js__WEBPACK_IMPORTED_MODULE_2__.isAddress; },\n/* harmony export */   isBase32: function() { return /* reexport safe */ _base32_index_js__WEBPACK_IMPORTED_MODULE_3__.isBase32; },\n/* harmony export */   isBase58: function() { return /* reexport safe */ _base58_index_js__WEBPACK_IMPORTED_MODULE_4__.isBase58; },\n/* harmony export */   isBase64: function() { return /* reexport safe */ _base64_index_js__WEBPACK_IMPORTED_MODULE_5__.isBase64; },\n/* harmony export */   isEthereumAddress: function() { return /* reexport safe */ _ethereum_index_js__WEBPACK_IMPORTED_MODULE_9__.isEthereumAddress; },\n/* harmony export */   isEthereumChecksum: function() { return /* reexport safe */ _ethereum_index_js__WEBPACK_IMPORTED_MODULE_9__.isEthereumChecksum; },\n/* harmony export */   jsonDecrypt: function() { return /* reexport safe */ _json_index_js__WEBPACK_IMPORTED_MODULE_12__.jsonDecrypt; },\n/* harmony export */   jsonDecryptData: function() { return /* reexport safe */ _json_index_js__WEBPACK_IMPORTED_MODULE_12__.jsonDecryptData; },\n/* harmony export */   jsonEncrypt: function() { return /* reexport safe */ _json_index_js__WEBPACK_IMPORTED_MODULE_12__.jsonEncrypt; },\n/* harmony export */   jsonEncryptFormat: function() { return /* reexport safe */ _json_index_js__WEBPACK_IMPORTED_MODULE_12__.jsonEncryptFormat; },\n/* harmony export */   keccak256AsU8a: function() { return /* reexport safe */ _keccak_index_js__WEBPACK_IMPORTED_MODULE_13__.keccak256AsU8a; },\n/* harmony export */   keccak512AsU8a: function() { return /* reexport safe */ _keccak_index_js__WEBPACK_IMPORTED_MODULE_13__.keccak512AsU8a; },\n/* harmony export */   keccakAsHex: function() { return /* reexport safe */ _keccak_index_js__WEBPACK_IMPORTED_MODULE_13__.keccakAsHex; },\n/* harmony export */   keccakAsU8a: function() { return /* reexport safe */ _keccak_index_js__WEBPACK_IMPORTED_MODULE_13__.keccakAsU8a; },\n/* harmony export */   keyExtractPath: function() { return /* reexport safe */ _key_index_js__WEBPACK_IMPORTED_MODULE_14__.keyExtractPath; },\n/* harmony export */   keyExtractSuri: function() { return /* reexport safe */ _key_index_js__WEBPACK_IMPORTED_MODULE_14__.keyExtractSuri; },\n/* harmony export */   keyFromPath: function() { return /* reexport safe */ _key_index_js__WEBPACK_IMPORTED_MODULE_14__.keyFromPath; },\n/* harmony export */   keyHdkdEcdsa: function() { return /* reexport safe */ _key_index_js__WEBPACK_IMPORTED_MODULE_14__.keyHdkdEcdsa; },\n/* harmony export */   keyHdkdEd25519: function() { return /* reexport safe */ _key_index_js__WEBPACK_IMPORTED_MODULE_14__.keyHdkdEd25519; },\n/* harmony export */   keyHdkdSr25519: function() { return /* reexport safe */ _key_index_js__WEBPACK_IMPORTED_MODULE_14__.keyHdkdSr25519; },\n/* harmony export */   mnemonicGenerate: function() { return /* reexport safe */ _mnemonic_index_js__WEBPACK_IMPORTED_MODULE_15__.mnemonicGenerate; },\n/* harmony export */   mnemonicToEntropy: function() { return /* reexport safe */ _mnemonic_index_js__WEBPACK_IMPORTED_MODULE_15__.mnemonicToEntropy; },\n/* harmony export */   mnemonicToLegacySeed: function() { return /* reexport safe */ _mnemonic_index_js__WEBPACK_IMPORTED_MODULE_15__.mnemonicToLegacySeed; },\n/* harmony export */   mnemonicToMiniSecret: function() { return /* reexport safe */ _mnemonic_index_js__WEBPACK_IMPORTED_MODULE_15__.mnemonicToMiniSecret; },\n/* harmony export */   mnemonicValidate: function() { return /* reexport safe */ _mnemonic_index_js__WEBPACK_IMPORTED_MODULE_15__.mnemonicValidate; },\n/* harmony export */   naclDecrypt: function() { return /* reexport safe */ _nacl_index_js__WEBPACK_IMPORTED_MODULE_16__.naclDecrypt; },\n/* harmony export */   naclEncrypt: function() { return /* reexport safe */ _nacl_index_js__WEBPACK_IMPORTED_MODULE_16__.naclEncrypt; },\n/* harmony export */   packageInfo: function() { return /* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_1__.packageInfo; },\n/* harmony export */   pbkdf2Encode: function() { return /* reexport safe */ _pbkdf2_index_js__WEBPACK_IMPORTED_MODULE_18__.pbkdf2Encode; },\n/* harmony export */   randomAsHex: function() { return /* reexport safe */ _random_index_js__WEBPACK_IMPORTED_MODULE_19__.randomAsHex; },\n/* harmony export */   randomAsNumber: function() { return /* reexport safe */ _random_index_js__WEBPACK_IMPORTED_MODULE_19__.randomAsNumber; },\n/* harmony export */   randomAsU8a: function() { return /* reexport safe */ _random_index_js__WEBPACK_IMPORTED_MODULE_19__.randomAsU8a; },\n/* harmony export */   scryptEncode: function() { return /* reexport safe */ _scrypt_index_js__WEBPACK_IMPORTED_MODULE_20__.scryptEncode; },\n/* harmony export */   scryptFromU8a: function() { return /* reexport safe */ _scrypt_index_js__WEBPACK_IMPORTED_MODULE_20__.scryptFromU8a; },\n/* harmony export */   scryptToU8a: function() { return /* reexport safe */ _scrypt_index_js__WEBPACK_IMPORTED_MODULE_20__.scryptToU8a; },\n/* harmony export */   secp256k1Compress: function() { return /* reexport safe */ _secp256k1_index_js__WEBPACK_IMPORTED_MODULE_21__.secp256k1Compress; },\n/* harmony export */   secp256k1Expand: function() { return /* reexport safe */ _secp256k1_index_js__WEBPACK_IMPORTED_MODULE_21__.secp256k1Expand; },\n/* harmony export */   secp256k1PairFromSeed: function() { return /* reexport safe */ _secp256k1_index_js__WEBPACK_IMPORTED_MODULE_21__.secp256k1PairFromSeed; },\n/* harmony export */   secp256k1PrivateKeyTweakAdd: function() { return /* reexport safe */ _secp256k1_index_js__WEBPACK_IMPORTED_MODULE_21__.secp256k1PrivateKeyTweakAdd; },\n/* harmony export */   secp256k1Recover: function() { return /* reexport safe */ _secp256k1_index_js__WEBPACK_IMPORTED_MODULE_21__.secp256k1Recover; },\n/* harmony export */   secp256k1Sign: function() { return /* reexport safe */ _secp256k1_index_js__WEBPACK_IMPORTED_MODULE_21__.secp256k1Sign; },\n/* harmony export */   secp256k1Verify: function() { return /* reexport safe */ _secp256k1_index_js__WEBPACK_IMPORTED_MODULE_21__.secp256k1Verify; },\n/* harmony export */   selectableNetworks: function() { return /* reexport safe */ _networks_js__WEBPACK_IMPORTED_MODULE_17__.selectableNetworks; },\n/* harmony export */   setSS58Format: function() { return /* reexport safe */ _address_index_js__WEBPACK_IMPORTED_MODULE_2__.setSS58Format; },\n/* harmony export */   sha256AsU8a: function() { return /* reexport safe */ _sha_index_js__WEBPACK_IMPORTED_MODULE_22__.sha256AsU8a; },\n/* harmony export */   sha512AsU8a: function() { return /* reexport safe */ _sha_index_js__WEBPACK_IMPORTED_MODULE_22__.sha512AsU8a; },\n/* harmony export */   shaAsU8a: function() { return /* reexport safe */ _sha_index_js__WEBPACK_IMPORTED_MODULE_22__.shaAsU8a; },\n/* harmony export */   signatureVerify: function() { return /* reexport safe */ _signature_index_js__WEBPACK_IMPORTED_MODULE_23__.signatureVerify; },\n/* harmony export */   sortAddresses: function() { return /* reexport safe */ _address_index_js__WEBPACK_IMPORTED_MODULE_2__.sortAddresses; },\n/* harmony export */   sr25519Agreement: function() { return /* reexport safe */ _sr25519_index_js__WEBPACK_IMPORTED_MODULE_24__.sr25519Agreement; },\n/* harmony export */   sr25519DeriveHard: function() { return /* reexport safe */ _sr25519_index_js__WEBPACK_IMPORTED_MODULE_24__.sr25519DeriveHard; },\n/* harmony export */   sr25519DerivePublic: function() { return /* reexport safe */ _sr25519_index_js__WEBPACK_IMPORTED_MODULE_24__.sr25519DerivePublic; },\n/* harmony export */   sr25519DeriveSoft: function() { return /* reexport safe */ _sr25519_index_js__WEBPACK_IMPORTED_MODULE_24__.sr25519DeriveSoft; },\n/* harmony export */   sr25519PairFromSeed: function() { return /* reexport safe */ _sr25519_index_js__WEBPACK_IMPORTED_MODULE_24__.sr25519PairFromSeed; },\n/* harmony export */   sr25519Sign: function() { return /* reexport safe */ _sr25519_index_js__WEBPACK_IMPORTED_MODULE_24__.sr25519Sign; },\n/* harmony export */   sr25519Verify: function() { return /* reexport safe */ _sr25519_index_js__WEBPACK_IMPORTED_MODULE_24__.sr25519Verify; },\n/* harmony export */   sr25519VrfSign: function() { return /* reexport safe */ _sr25519_index_js__WEBPACK_IMPORTED_MODULE_24__.sr25519VrfSign; },\n/* harmony export */   sr25519VrfVerify: function() { return /* reexport safe */ _sr25519_index_js__WEBPACK_IMPORTED_MODULE_24__.sr25519VrfVerify; },\n/* harmony export */   validateAddress: function() { return /* reexport safe */ _address_index_js__WEBPACK_IMPORTED_MODULE_2__.validateAddress; },\n/* harmony export */   xxhashAsHex: function() { return /* reexport safe */ _xxhash_index_js__WEBPACK_IMPORTED_MODULE_25__.xxhashAsHex; },\n/* harmony export */   xxhashAsU8a: function() { return /* reexport safe */ _xxhash_index_js__WEBPACK_IMPORTED_MODULE_25__.xxhashAsU8a; }\n/* harmony export */ });\n/* harmony import */ var _bundleInit_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bundleInit.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/bundleInit.js\");\n/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./packageInfo.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/packageInfo.js\");\n/* harmony import */ var _address_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./address/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/index.js\");\n/* harmony import */ var _base32_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base32/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/base32/index.js\");\n/* harmony import */ var _base58_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./base58/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/base58/index.js\");\n/* harmony import */ var _base64_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./base64/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/base64/index.js\");\n/* harmony import */ var _blake2_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./blake2/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/blake2/index.js\");\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./crypto.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/crypto.js\");\n/* harmony import */ var _ed25519_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ed25519/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/index.js\");\n/* harmony import */ var _ethereum_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ethereum/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/ethereum/index.js\");\n/* harmony import */ var _hd_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./hd/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/hd/index.js\");\n/* harmony import */ var _hmac_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./hmac/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/hmac/index.js\");\n/* harmony import */ var _json_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./json/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/json/index.js\");\n/* harmony import */ var _keccak_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./keccak/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/keccak/index.js\");\n/* harmony import */ var _key_index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./key/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/index.js\");\n/* harmony import */ var _mnemonic_index_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./mnemonic/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/index.js\");\n/* harmony import */ var _nacl_index_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./nacl/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/nacl/index.js\");\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./networks.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/networks.js\");\n/* harmony import */ var _pbkdf2_index_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./pbkdf2/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/pbkdf2/index.js\");\n/* harmony import */ var _random_index_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./random/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/random/index.js\");\n/* harmony import */ var _scrypt_index_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./scrypt/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/scrypt/index.js\");\n/* harmony import */ var _secp256k1_index_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./secp256k1/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/index.js\");\n/* harmony import */ var _sha_index_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./sha/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/sha/index.js\");\n/* harmony import */ var _signature_index_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./signature/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/signature/index.js\");\n/* harmony import */ var _sr25519_index_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./sr25519/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/index.js\");\n/* harmony import */ var _xxhash_index_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./xxhash/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/xxhash/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYnVuZGxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBeUI7QUFDc0I7QUFDWjtBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ047QUFDTztBQUNDO0FBQ047QUFDRTtBQUNBO0FBQ0U7QUFDSDtBQUNLO0FBQ0o7QUFDRjtBQUNJO0FBQ0E7QUFDQTtBQUNHO0FBQ047QUFDTTtBQUNGO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9idW5kbGUuanM/ZjExZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4vYnVuZGxlSW5pdC5qcyc7XG5leHBvcnQgeyBwYWNrYWdlSW5mbyB9IGZyb20gJy4vcGFja2FnZUluZm8uanMnO1xuZXhwb3J0ICogZnJvbSAnLi9hZGRyZXNzL2luZGV4LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vYmFzZTMyL2luZGV4LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vYmFzZTU4L2luZGV4LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vYmFzZTY0L2luZGV4LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vYmxha2UyL2luZGV4LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vY3J5cHRvLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vZWQyNTUxOS9pbmRleC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2V0aGVyZXVtL2luZGV4LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vaGQvaW5kZXguanMnO1xuZXhwb3J0ICogZnJvbSAnLi9obWFjL2luZGV4LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vanNvbi9pbmRleC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2tlY2Nhay9pbmRleC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2tleS9pbmRleC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL21uZW1vbmljL2luZGV4LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vbmFjbC9pbmRleC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL25ldHdvcmtzLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vcGJrZGYyL2luZGV4LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vcmFuZG9tL2luZGV4LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vc2NyeXB0L2luZGV4LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vc2VjcDI1NmsxL2luZGV4LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vc2hhL2luZGV4LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vc2lnbmF0dXJlL2luZGV4LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vc3IyNTUxOS9pbmRleC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3h4aGFzaC9pbmRleC5qcyc7XG4iXSwibmFtZXMiOlsicGFja2FnZUluZm8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/bundle.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/bundleInit.js":
/*!**********************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/bundleInit.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _polkadot_x_bigint_shim__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/x-bigint/shim */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/x-bigint/shim.js\");\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./crypto.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/crypto.js\");\n\n\n(0,_crypto_js__WEBPACK_IMPORTED_MODULE_1__.cryptoWaitReady)().catch(()=>{\n// shouldn't happen, logged and caught inside cryptoWaitReady\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYnVuZGxlSW5pdC5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBaUM7QUFDYTtBQUM5Q0EsMkRBQWVBLEdBQUdDLEtBQUssQ0FBQztBQUNwQiw2REFBNkQ7QUFDakUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9idW5kbGVJbml0LmpzPzM4NzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdAcG9sa2Fkb3QveC1iaWdpbnQvc2hpbSc7XG5pbXBvcnQgeyBjcnlwdG9XYWl0UmVhZHkgfSBmcm9tICcuL2NyeXB0by5qcyc7XG5jcnlwdG9XYWl0UmVhZHkoKS5jYXRjaCgoKSA9PiB7XG4gICAgLy8gc2hvdWxkbid0IGhhcHBlbiwgbG9nZ2VkIGFuZCBjYXVnaHQgaW5zaWRlIGNyeXB0b1dhaXRSZWFkeVxufSk7XG4iXSwibmFtZXMiOlsiY3J5cHRvV2FpdFJlYWR5IiwiY2F0Y2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/bundleInit.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/crypto.js":
/*!******************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/crypto.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cryptoIsReady: function() { return /* binding */ cryptoIsReady; },\n/* harmony export */   cryptoWaitReady: function() { return /* binding */ cryptoWaitReady; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n\nconst cryptoIsReady = _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_0__.isReady;\nfunction cryptoWaitReady() {\n    return (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_0__.waitReady)().then(()=>{\n        if (!(0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_0__.isReady)()) {\n            throw new Error(\"Unable to initialize @polkadot/util-crypto\");\n        }\n        return true;\n    }).catch(()=>false);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vY3J5cHRvLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyRDtBQUNwRCxNQUFNRSxnQkFBZ0JGLDBEQUFPQSxDQUFDO0FBQzlCLFNBQVNHO0lBQ1osT0FBT0YsZ0VBQVNBLEdBQ1hHLElBQUksQ0FBQztRQUNOLElBQUksQ0FBQ0osOERBQU9BLElBQUk7WUFDWixNQUFNLElBQUlLLE1BQU07UUFDcEI7UUFDQSxPQUFPO0lBQ1gsR0FDS0MsS0FBSyxDQUFDLElBQU07QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9jcnlwdG8uanM/MmFlZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc1JlYWR5LCB3YWl0UmVhZHkgfSBmcm9tICdAcG9sa2Fkb3Qvd2FzbS1jcnlwdG8nO1xuZXhwb3J0IGNvbnN0IGNyeXB0b0lzUmVhZHkgPSBpc1JlYWR5O1xuZXhwb3J0IGZ1bmN0aW9uIGNyeXB0b1dhaXRSZWFkeSgpIHtcbiAgICByZXR1cm4gd2FpdFJlYWR5KClcbiAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICBpZiAoIWlzUmVhZHkoKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmFibGUgdG8gaW5pdGlhbGl6ZSBAcG9sa2Fkb3QvdXRpbC1jcnlwdG8nKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9KVxuICAgICAgICAuY2F0Y2goKCkgPT4gZmFsc2UpO1xufVxuIl0sIm5hbWVzIjpbImlzUmVhZHkiLCJ3YWl0UmVhZHkiLCJjcnlwdG9Jc1JlYWR5IiwiY3J5cHRvV2FpdFJlYWR5IiwidGhlbiIsIkVycm9yIiwiY2F0Y2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/crypto.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/deriveHard.js":
/*!******************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/ed25519/deriveHard.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ed25519DeriveHard: function() { return /* binding */ ed25519DeriveHard; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/compact/addLength.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/string/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/u8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/concat.js\");\n/* harmony import */ var _blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../blake2/asU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/blake2/asU8a.js\");\n\n\nconst HDKD = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.compactAddLength)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.stringToU8a)(\"Ed25519HDKD\"));\nfunction ed25519DeriveHard(seed, chainCode) {\n    if (!(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isU8a)(chainCode) || chainCode.length !== 32) {\n        throw new Error(\"Invalid chainCode passed to derive\");\n    }\n    return (0,_blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_3__.blake2AsU8a)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.u8aConcat)(HDKD, seed, chainCode));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vZWQyNTUxOS9kZXJpdmVIYXJkLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFpRjtBQUNoQztBQUNqRCxNQUFNSyxPQUFPTCxnRUFBZ0JBLENBQUNFLDJEQUFXQSxDQUFDO0FBQ25DLFNBQVNJLGtCQUFrQkMsSUFBSSxFQUFFQyxTQUFTO0lBQzdDLElBQUksQ0FBQ1AscURBQUtBLENBQUNPLGNBQWNBLFVBQVVDLE1BQU0sS0FBSyxJQUFJO1FBQzlDLE1BQU0sSUFBSUMsTUFBTTtJQUNwQjtJQUNBLE9BQU9OLDZEQUFXQSxDQUFDRCx5REFBU0EsQ0FBQ0UsTUFBTUUsTUFBTUM7QUFDN0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9lZDI1NTE5L2Rlcml2ZUhhcmQuanM/Y2U0OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb21wYWN0QWRkTGVuZ3RoLCBpc1U4YSwgc3RyaW5nVG9VOGEsIHU4YUNvbmNhdCB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbmltcG9ydCB7IGJsYWtlMkFzVThhIH0gZnJvbSAnLi4vYmxha2UyL2FzVThhLmpzJztcbmNvbnN0IEhES0QgPSBjb21wYWN0QWRkTGVuZ3RoKHN0cmluZ1RvVThhKCdFZDI1NTE5SERLRCcpKTtcbmV4cG9ydCBmdW5jdGlvbiBlZDI1NTE5RGVyaXZlSGFyZChzZWVkLCBjaGFpbkNvZGUpIHtcbiAgICBpZiAoIWlzVThhKGNoYWluQ29kZSkgfHwgY2hhaW5Db2RlLmxlbmd0aCAhPT0gMzIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGNoYWluQ29kZSBwYXNzZWQgdG8gZGVyaXZlJyk7XG4gICAgfVxuICAgIHJldHVybiBibGFrZTJBc1U4YSh1OGFDb25jYXQoSERLRCwgc2VlZCwgY2hhaW5Db2RlKSk7XG59XG4iXSwibmFtZXMiOlsiY29tcGFjdEFkZExlbmd0aCIsImlzVThhIiwic3RyaW5nVG9VOGEiLCJ1OGFDb25jYXQiLCJibGFrZTJBc1U4YSIsIkhES0QiLCJlZDI1NTE5RGVyaXZlSGFyZCIsInNlZWQiLCJjaGFpbkNvZGUiLCJsZW5ndGgiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/deriveHard.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/ed25519/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ed25519DeriveHard: function() { return /* reexport safe */ _deriveHard_js__WEBPACK_IMPORTED_MODULE_0__.ed25519DeriveHard; },\n/* harmony export */   ed25519PairFromRandom: function() { return /* reexport safe */ _pair_fromRandom_js__WEBPACK_IMPORTED_MODULE_1__.ed25519PairFromRandom; },\n/* harmony export */   ed25519PairFromSecret: function() { return /* reexport safe */ _pair_fromSecret_js__WEBPACK_IMPORTED_MODULE_2__.ed25519PairFromSecret; },\n/* harmony export */   ed25519PairFromSeed: function() { return /* reexport safe */ _pair_fromSeed_js__WEBPACK_IMPORTED_MODULE_3__.ed25519PairFromSeed; },\n/* harmony export */   ed25519PairFromString: function() { return /* reexport safe */ _pair_fromString_js__WEBPACK_IMPORTED_MODULE_4__.ed25519PairFromString; },\n/* harmony export */   ed25519Sign: function() { return /* reexport safe */ _sign_js__WEBPACK_IMPORTED_MODULE_5__.ed25519Sign; },\n/* harmony export */   ed25519Verify: function() { return /* reexport safe */ _verify_js__WEBPACK_IMPORTED_MODULE_6__.ed25519Verify; }\n/* harmony export */ });\n/* harmony import */ var _deriveHard_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./deriveHard.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/deriveHard.js\");\n/* harmony import */ var _pair_fromRandom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pair/fromRandom.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/pair/fromRandom.js\");\n/* harmony import */ var _pair_fromSecret_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pair/fromSecret.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/pair/fromSecret.js\");\n/* harmony import */ var _pair_fromSeed_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pair/fromSeed.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/pair/fromSeed.js\");\n/* harmony import */ var _pair_fromString_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pair/fromString.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/pair/fromString.js\");\n/* harmony import */ var _sign_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sign.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/sign.js\");\n/* harmony import */ var _verify_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./verify.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/verify.js\");\n/**\n * @summary Implements ed25519 operations\n */ \n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vZWQyNTUxOS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztDQUVDLEdBQ21EO0FBQ1M7QUFDQTtBQUNKO0FBQ0k7QUFDckI7QUFDSSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2VkMjU1MTkvaW5kZXguanM/YTIwNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBzdW1tYXJ5IEltcGxlbWVudHMgZWQyNTUxOSBvcGVyYXRpb25zXG4gKi9cbmV4cG9ydCB7IGVkMjU1MTlEZXJpdmVIYXJkIH0gZnJvbSAnLi9kZXJpdmVIYXJkLmpzJztcbmV4cG9ydCB7IGVkMjU1MTlQYWlyRnJvbVJhbmRvbSB9IGZyb20gJy4vcGFpci9mcm9tUmFuZG9tLmpzJztcbmV4cG9ydCB7IGVkMjU1MTlQYWlyRnJvbVNlY3JldCB9IGZyb20gJy4vcGFpci9mcm9tU2VjcmV0LmpzJztcbmV4cG9ydCB7IGVkMjU1MTlQYWlyRnJvbVNlZWQgfSBmcm9tICcuL3BhaXIvZnJvbVNlZWQuanMnO1xuZXhwb3J0IHsgZWQyNTUxOVBhaXJGcm9tU3RyaW5nIH0gZnJvbSAnLi9wYWlyL2Zyb21TdHJpbmcuanMnO1xuZXhwb3J0IHsgZWQyNTUxOVNpZ24gfSBmcm9tICcuL3NpZ24uanMnO1xuZXhwb3J0IHsgZWQyNTUxOVZlcmlmeSB9IGZyb20gJy4vdmVyaWZ5LmpzJztcbiJdLCJuYW1lcyI6WyJlZDI1NTE5RGVyaXZlSGFyZCIsImVkMjU1MTlQYWlyRnJvbVJhbmRvbSIsImVkMjU1MTlQYWlyRnJvbVNlY3JldCIsImVkMjU1MTlQYWlyRnJvbVNlZWQiLCJlZDI1NTE5UGFpckZyb21TdHJpbmciLCJlZDI1NTE5U2lnbiIsImVkMjU1MTlWZXJpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/pair/fromRandom.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/ed25519/pair/fromRandom.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ed25519PairFromRandom: function() { return /* binding */ ed25519PairFromRandom; }\n/* harmony export */ });\n/* harmony import */ var _random_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../random/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/random/asU8a.js\");\n/* harmony import */ var _fromSeed_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fromSeed.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/pair/fromSeed.js\");\n\n\n/**\n * @name ed25519PairFromRandom\n * @summary Creates a new public/secret keypair.\n * @description\n * Returns a new generate object containing a `publicKey` & `secretKey`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { ed25519PairFromRandom } from '@polkadot/util-crypto';\n *\n * ed25519PairFromRandom(); // => { secretKey: [...], publicKey: [...] }\n * ```\n */ function ed25519PairFromRandom() {\n    return (0,_fromSeed_js__WEBPACK_IMPORTED_MODULE_0__.ed25519PairFromSeed)((0,_random_index_js__WEBPACK_IMPORTED_MODULE_1__.randomAsU8a)());\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vZWQyNTUxOS9wYWlyL2Zyb21SYW5kb20uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW9EO0FBQ0E7QUFDcEQ7Ozs7Ozs7Ozs7Ozs7Q0FhQyxHQUNNLFNBQVNFO0lBQ1osT0FBT0QsaUVBQW1CQSxDQUFDRCw2REFBV0E7QUFDMUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9lZDI1NTE5L3BhaXIvZnJvbVJhbmRvbS5qcz8wZDg1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJhbmRvbUFzVThhIH0gZnJvbSAnLi4vLi4vcmFuZG9tL2luZGV4LmpzJztcbmltcG9ydCB7IGVkMjU1MTlQYWlyRnJvbVNlZWQgfSBmcm9tICcuL2Zyb21TZWVkLmpzJztcbi8qKlxuICogQG5hbWUgZWQyNTUxOVBhaXJGcm9tUmFuZG9tXG4gKiBAc3VtbWFyeSBDcmVhdGVzIGEgbmV3IHB1YmxpYy9zZWNyZXQga2V5cGFpci5cbiAqIEBkZXNjcmlwdGlvblxuICogUmV0dXJucyBhIG5ldyBnZW5lcmF0ZSBvYmplY3QgY29udGFpbmluZyBhIGBwdWJsaWNLZXlgICYgYHNlY3JldEtleWAuXG4gKiBAZXhhbXBsZVxuICogPEJSPlxuICpcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGltcG9ydCB7IGVkMjU1MTlQYWlyRnJvbVJhbmRvbSB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsLWNyeXB0byc7XG4gKlxuICogZWQyNTUxOVBhaXJGcm9tUmFuZG9tKCk7IC8vID0+IHsgc2VjcmV0S2V5OiBbLi4uXSwgcHVibGljS2V5OiBbLi4uXSB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVkMjU1MTlQYWlyRnJvbVJhbmRvbSgpIHtcbiAgICByZXR1cm4gZWQyNTUxOVBhaXJGcm9tU2VlZChyYW5kb21Bc1U4YSgpKTtcbn1cbiJdLCJuYW1lcyI6WyJyYW5kb21Bc1U4YSIsImVkMjU1MTlQYWlyRnJvbVNlZWQiLCJlZDI1NTE5UGFpckZyb21SYW5kb20iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/pair/fromRandom.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/pair/fromSecret.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/ed25519/pair/fromSecret.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ed25519PairFromSecret: function() { return /* binding */ ed25519PairFromSecret; }\n/* harmony export */ });\n/**\n * @name ed25519PairFromSecret\n * @summary Creates a new public/secret keypair from a secret.\n * @description\n * Returns a object containing a `publicKey` & `secretKey` generated from the supplied secret.\n * @example\n * <BR>\n *\n * ```javascript\n * import { ed25519PairFromSecret } from '@polkadot/util-crypto';\n *\n * ed25519PairFromSecret(...); // => { secretKey: [...], publicKey: [...] }\n * ```\n */ function ed25519PairFromSecret(secretKey) {\n    if (secretKey.length !== 64) {\n        throw new Error(\"Invalid secretKey provided\");\n    }\n    return {\n        publicKey: secretKey.slice(32),\n        secretKey\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vZWQyNTUxOS9wYWlyL2Zyb21TZWNyZXQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Ozs7Ozs7Ozs7O0NBYUMsR0FDTSxTQUFTQSxzQkFBc0JDLFNBQVM7SUFDM0MsSUFBSUEsVUFBVUMsTUFBTSxLQUFLLElBQUk7UUFDekIsTUFBTSxJQUFJQyxNQUFNO0lBQ3BCO0lBQ0EsT0FBTztRQUNIQyxXQUFXSCxVQUFVSSxLQUFLLENBQUM7UUFDM0JKO0lBQ0o7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2VkMjU1MTkvcGFpci9mcm9tU2VjcmV0LmpzPzc1NjciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbmFtZSBlZDI1NTE5UGFpckZyb21TZWNyZXRcbiAqIEBzdW1tYXJ5IENyZWF0ZXMgYSBuZXcgcHVibGljL3NlY3JldCBrZXlwYWlyIGZyb20gYSBzZWNyZXQuXG4gKiBAZGVzY3JpcHRpb25cbiAqIFJldHVybnMgYSBvYmplY3QgY29udGFpbmluZyBhIGBwdWJsaWNLZXlgICYgYHNlY3JldEtleWAgZ2VuZXJhdGVkIGZyb20gdGhlIHN1cHBsaWVkIHNlY3JldC5cbiAqIEBleGFtcGxlXG4gKiA8QlI+XG4gKlxuICogYGBgamF2YXNjcmlwdFxuICogaW1wb3J0IHsgZWQyNTUxOVBhaXJGcm9tU2VjcmV0IH0gZnJvbSAnQHBvbGthZG90L3V0aWwtY3J5cHRvJztcbiAqXG4gKiBlZDI1NTE5UGFpckZyb21TZWNyZXQoLi4uKTsgLy8gPT4geyBzZWNyZXRLZXk6IFsuLi5dLCBwdWJsaWNLZXk6IFsuLi5dIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gZWQyNTUxOVBhaXJGcm9tU2VjcmV0KHNlY3JldEtleSkge1xuICAgIGlmIChzZWNyZXRLZXkubGVuZ3RoICE9PSA2NCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc2VjcmV0S2V5IHByb3ZpZGVkJyk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHB1YmxpY0tleTogc2VjcmV0S2V5LnNsaWNlKDMyKSxcbiAgICAgICAgc2VjcmV0S2V5XG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6WyJlZDI1NTE5UGFpckZyb21TZWNyZXQiLCJzZWNyZXRLZXkiLCJsZW5ndGgiLCJFcnJvciIsInB1YmxpY0tleSIsInNsaWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/pair/fromSecret.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/pair/fromSeed.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/ed25519/pair/fromSeed.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ed25519PairFromSeed: function() { return /* binding */ ed25519PairFromSeed; }\n/* harmony export */ });\n/* harmony import */ var _noble_curves_ed25519__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/curves/ed25519 */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/ed25519.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/has.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/concat.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n\n\n\n/**\n * @name ed25519PairFromSeed\n * @summary Creates a new public/secret keypair from a seed.\n * @description\n * Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.\n * @example\n * <BR>\n *\n * ```javascript\n * import { ed25519PairFromSeed } from '@polkadot/util-crypto';\n *\n * ed25519PairFromSeed(...); // => { secretKey: [...], publicKey: [...] }\n * ```\n */ function ed25519PairFromSeed(seed, onlyJs) {\n    if (!_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.isReady)()) {\n        const full = (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.ed25519KeypairFromSeed)(seed);\n        return {\n            publicKey: full.slice(32),\n            secretKey: full.slice(0, 64)\n        };\n    }\n    const publicKey = _noble_curves_ed25519__WEBPACK_IMPORTED_MODULE_2__.ed25519.getPublicKey(seed);\n    return {\n        publicKey,\n        secretKey: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aConcatStrict)([\n            seed,\n            publicKey\n        ])\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vZWQyNTUxOS9wYWlyL2Zyb21TZWVkLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWdEO0FBQ1k7QUFDWTtBQUN4RTs7Ozs7Ozs7Ozs7OztDQWFDLEdBQ00sU0FBU0ssb0JBQW9CQyxJQUFJLEVBQUVDLE1BQU07SUFDNUMsSUFBSSxDQUFDTixxREFBU0EsSUFBSyxDQUFDTSxVQUFVSCw4REFBT0EsSUFBSztRQUN0QyxNQUFNSSxPQUFPTCw2RUFBc0JBLENBQUNHO1FBQ3BDLE9BQU87WUFDSEcsV0FBV0QsS0FBS0UsS0FBSyxDQUFDO1lBQ3RCQyxXQUFXSCxLQUFLRSxLQUFLLENBQUMsR0FBRztRQUM3QjtJQUNKO0lBQ0EsTUFBTUQsWUFBWVQsMERBQU9BLENBQUNZLFlBQVksQ0FBQ047SUFDdkMsT0FBTztRQUNIRztRQUNBRSxXQUFXVCwrREFBZUEsQ0FBQztZQUFDSTtZQUFNRztTQUFVO0lBQ2hEO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9lZDI1NTE5L3BhaXIvZnJvbVNlZWQuanM/OTllZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlZDI1NTE5IH0gZnJvbSAnQG5vYmxlL2N1cnZlcy9lZDI1NTE5JztcbmltcG9ydCB7IGhhc0JpZ0ludCwgdThhQ29uY2F0U3RyaWN0IH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgZWQyNTUxOUtleXBhaXJGcm9tU2VlZCwgaXNSZWFkeSB9IGZyb20gJ0Bwb2xrYWRvdC93YXNtLWNyeXB0byc7XG4vKipcbiAqIEBuYW1lIGVkMjU1MTlQYWlyRnJvbVNlZWRcbiAqIEBzdW1tYXJ5IENyZWF0ZXMgYSBuZXcgcHVibGljL3NlY3JldCBrZXlwYWlyIGZyb20gYSBzZWVkLlxuICogQGRlc2NyaXB0aW9uXG4gKiBSZXR1cm5zIGEgb2JqZWN0IGNvbnRhaW5pbmcgYSBgcHVibGljS2V5YCAmIGBzZWNyZXRLZXlgIGdlbmVyYXRlZCBmcm9tIHRoZSBzdXBwbGllZCBzZWVkLlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyBlZDI1NTE5UGFpckZyb21TZWVkIH0gZnJvbSAnQHBvbGthZG90L3V0aWwtY3J5cHRvJztcbiAqXG4gKiBlZDI1NTE5UGFpckZyb21TZWVkKC4uLik7IC8vID0+IHsgc2VjcmV0S2V5OiBbLi4uXSwgcHVibGljS2V5OiBbLi4uXSB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVkMjU1MTlQYWlyRnJvbVNlZWQoc2VlZCwgb25seUpzKSB7XG4gICAgaWYgKCFoYXNCaWdJbnQgfHwgKCFvbmx5SnMgJiYgaXNSZWFkeSgpKSkge1xuICAgICAgICBjb25zdCBmdWxsID0gZWQyNTUxOUtleXBhaXJGcm9tU2VlZChzZWVkKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHB1YmxpY0tleTogZnVsbC5zbGljZSgzMiksXG4gICAgICAgICAgICBzZWNyZXRLZXk6IGZ1bGwuc2xpY2UoMCwgNjQpXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbnN0IHB1YmxpY0tleSA9IGVkMjU1MTkuZ2V0UHVibGljS2V5KHNlZWQpO1xuICAgIHJldHVybiB7XG4gICAgICAgIHB1YmxpY0tleSxcbiAgICAgICAgc2VjcmV0S2V5OiB1OGFDb25jYXRTdHJpY3QoW3NlZWQsIHB1YmxpY0tleV0pXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6WyJlZDI1NTE5IiwiaGFzQmlnSW50IiwidThhQ29uY2F0U3RyaWN0IiwiZWQyNTUxOUtleXBhaXJGcm9tU2VlZCIsImlzUmVhZHkiLCJlZDI1NTE5UGFpckZyb21TZWVkIiwic2VlZCIsIm9ubHlKcyIsImZ1bGwiLCJwdWJsaWNLZXkiLCJzbGljZSIsInNlY3JldEtleSIsImdldFB1YmxpY0tleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/pair/fromSeed.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/pair/fromString.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/ed25519/pair/fromString.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ed25519PairFromString: function() { return /* binding */ ed25519PairFromString; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/string/toU8a.js\");\n/* harmony import */ var _blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../blake2/asU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/blake2/asU8a.js\");\n/* harmony import */ var _fromSeed_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fromSeed.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/pair/fromSeed.js\");\n\n\n\n/**\n * @name ed25519PairFromString\n * @summary Creates a new public/secret keypair from a string.\n * @description\n * Returns a object containing a `publicKey` & `secretKey` generated from the supplied string. The string is hashed and the value used as the input seed.\n * @example\n * <BR>\n *\n * ```javascript\n * import { ed25519PairFromString } from '@polkadot/util-crypto';\n *\n * ed25519PairFromString('test'); // => { secretKey: [...], publicKey: [...] }\n * ```\n */ function ed25519PairFromString(value) {\n    return (0,_fromSeed_js__WEBPACK_IMPORTED_MODULE_0__.ed25519PairFromSeed)((0,_blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_1__.blake2AsU8a)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.stringToU8a)(value)));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vZWQyNTUxOS9wYWlyL2Zyb21TdHJpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE2QztBQUNPO0FBQ0E7QUFDcEQ7Ozs7Ozs7Ozs7Ozs7Q0FhQyxHQUNNLFNBQVNHLHNCQUFzQkMsS0FBSztJQUN2QyxPQUFPRixpRUFBbUJBLENBQUNELDZEQUFXQSxDQUFDRCwyREFBV0EsQ0FBQ0k7QUFDdkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9lZDI1NTE5L3BhaXIvZnJvbVN0cmluZy5qcz9hZjMzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0cmluZ1RvVThhIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgYmxha2UyQXNVOGEgfSBmcm9tICcuLi8uLi9ibGFrZTIvYXNVOGEuanMnO1xuaW1wb3J0IHsgZWQyNTUxOVBhaXJGcm9tU2VlZCB9IGZyb20gJy4vZnJvbVNlZWQuanMnO1xuLyoqXG4gKiBAbmFtZSBlZDI1NTE5UGFpckZyb21TdHJpbmdcbiAqIEBzdW1tYXJ5IENyZWF0ZXMgYSBuZXcgcHVibGljL3NlY3JldCBrZXlwYWlyIGZyb20gYSBzdHJpbmcuXG4gKiBAZGVzY3JpcHRpb25cbiAqIFJldHVybnMgYSBvYmplY3QgY29udGFpbmluZyBhIGBwdWJsaWNLZXlgICYgYHNlY3JldEtleWAgZ2VuZXJhdGVkIGZyb20gdGhlIHN1cHBsaWVkIHN0cmluZy4gVGhlIHN0cmluZyBpcyBoYXNoZWQgYW5kIHRoZSB2YWx1ZSB1c2VkIGFzIHRoZSBpbnB1dCBzZWVkLlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyBlZDI1NTE5UGFpckZyb21TdHJpbmcgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbC1jcnlwdG8nO1xuICpcbiAqIGVkMjU1MTlQYWlyRnJvbVN0cmluZygndGVzdCcpOyAvLyA9PiB7IHNlY3JldEtleTogWy4uLl0sIHB1YmxpY0tleTogWy4uLl0gfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlZDI1NTE5UGFpckZyb21TdHJpbmcodmFsdWUpIHtcbiAgICByZXR1cm4gZWQyNTUxOVBhaXJGcm9tU2VlZChibGFrZTJBc1U4YShzdHJpbmdUb1U4YSh2YWx1ZSkpKTtcbn1cbiJdLCJuYW1lcyI6WyJzdHJpbmdUb1U4YSIsImJsYWtlMkFzVThhIiwiZWQyNTUxOVBhaXJGcm9tU2VlZCIsImVkMjU1MTlQYWlyRnJvbVN0cmluZyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/pair/fromString.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/sign.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/ed25519/sign.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ed25519Sign: function() { return /* binding */ ed25519Sign; }\n/* harmony export */ });\n/* harmony import */ var _noble_curves_ed25519__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @noble/curves/ed25519 */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/ed25519.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/has.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n\n\n\n/**\n * @name ed25519Sign\n * @summary Signs a message using the supplied secretKey\n * @description\n * Returns message signature of `message`, using the `secretKey`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { ed25519Sign } from '@polkadot/util-crypto';\n *\n * ed25519Sign([...], [...]); // => [...]\n * ```\n */ function ed25519Sign(message, param, onlyJs) {\n    let { publicKey, secretKey } = param;\n    if (!secretKey) {\n        throw new Error(\"Expected a valid secretKey\");\n    } else if (!publicKey) {\n        throw new Error(\"Expected a valid publicKey\");\n    }\n    const messageU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(message);\n    const privateU8a = secretKey.subarray(0, 32);\n    return !_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.isReady)() ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.ed25519Sign)(publicKey, privateU8a, messageU8a) : _noble_curves_ed25519__WEBPACK_IMPORTED_MODULE_3__.ed25519.sign(messageU8a, privateU8a);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vZWQyNTUxOS9zaWduLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWdEO0FBQ0s7QUFDb0I7QUFDekU7Ozs7Ozs7Ozs7Ozs7Q0FhQyxHQUNNLFNBQVNHLFlBQVlHLE9BQU8sRUFBRSxLQUF3QixFQUFFQyxNQUFNO1FBQWhDLEVBQUVDLFNBQVMsRUFBRUMsU0FBUyxFQUFFLEdBQXhCO0lBQ2pDLElBQUksQ0FBQ0EsV0FBVztRQUNaLE1BQU0sSUFBSUMsTUFBTTtJQUNwQixPQUNLLElBQUksQ0FBQ0YsV0FBVztRQUNqQixNQUFNLElBQUlFLE1BQU07SUFDcEI7SUFDQSxNQUFNQyxhQUFhVCx3REFBUUEsQ0FBQ0k7SUFDNUIsTUFBTU0sYUFBYUgsVUFBVUksUUFBUSxDQUFDLEdBQUc7SUFDekMsT0FBTyxDQUFDWixxREFBU0EsSUFBSyxDQUFDTSxVQUFVRiw4REFBT0EsS0FDbENELGtFQUFRQSxDQUFDSSxXQUFXSSxZQUFZRCxjQUNoQ1gsMERBQU9BLENBQUNjLElBQUksQ0FBQ0gsWUFBWUM7QUFDbkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9lZDI1NTE5L3NpZ24uanM/NWQzNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlZDI1NTE5IH0gZnJvbSAnQG5vYmxlL2N1cnZlcy9lZDI1NTE5JztcbmltcG9ydCB7IGhhc0JpZ0ludCwgdThhVG9VOGEgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG5pbXBvcnQgeyBlZDI1NTE5U2lnbiBhcyB3YXNtU2lnbiwgaXNSZWFkeSB9IGZyb20gJ0Bwb2xrYWRvdC93YXNtLWNyeXB0byc7XG4vKipcbiAqIEBuYW1lIGVkMjU1MTlTaWduXG4gKiBAc3VtbWFyeSBTaWducyBhIG1lc3NhZ2UgdXNpbmcgdGhlIHN1cHBsaWVkIHNlY3JldEtleVxuICogQGRlc2NyaXB0aW9uXG4gKiBSZXR1cm5zIG1lc3NhZ2Ugc2lnbmF0dXJlIG9mIGBtZXNzYWdlYCwgdXNpbmcgdGhlIGBzZWNyZXRLZXlgLlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyBlZDI1NTE5U2lnbiB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsLWNyeXB0byc7XG4gKlxuICogZWQyNTUxOVNpZ24oWy4uLl0sIFsuLi5dKTsgLy8gPT4gWy4uLl1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gZWQyNTUxOVNpZ24obWVzc2FnZSwgeyBwdWJsaWNLZXksIHNlY3JldEtleSB9LCBvbmx5SnMpIHtcbiAgICBpZiAoIXNlY3JldEtleSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIGEgdmFsaWQgc2VjcmV0S2V5Jyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKCFwdWJsaWNLZXkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCBhIHZhbGlkIHB1YmxpY0tleScpO1xuICAgIH1cbiAgICBjb25zdCBtZXNzYWdlVThhID0gdThhVG9VOGEobWVzc2FnZSk7XG4gICAgY29uc3QgcHJpdmF0ZVU4YSA9IHNlY3JldEtleS5zdWJhcnJheSgwLCAzMik7XG4gICAgcmV0dXJuICFoYXNCaWdJbnQgfHwgKCFvbmx5SnMgJiYgaXNSZWFkeSgpKVxuICAgICAgICA/IHdhc21TaWduKHB1YmxpY0tleSwgcHJpdmF0ZVU4YSwgbWVzc2FnZVU4YSlcbiAgICAgICAgOiBlZDI1NTE5LnNpZ24obWVzc2FnZVU4YSwgcHJpdmF0ZVU4YSk7XG59XG4iXSwibmFtZXMiOlsiZWQyNTUxOSIsImhhc0JpZ0ludCIsInU4YVRvVThhIiwiZWQyNTUxOVNpZ24iLCJ3YXNtU2lnbiIsImlzUmVhZHkiLCJtZXNzYWdlIiwib25seUpzIiwicHVibGljS2V5Iiwic2VjcmV0S2V5IiwiRXJyb3IiLCJtZXNzYWdlVThhIiwicHJpdmF0ZVU4YSIsInN1YmFycmF5Iiwic2lnbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/sign.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/verify.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/ed25519/verify.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ed25519Verify: function() { return /* binding */ ed25519Verify; }\n/* harmony export */ });\n/* harmony import */ var _noble_curves_ed25519__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @noble/curves/ed25519 */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/ed25519.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/has.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n\n\n\n/**\n * @name ed25519Sign\n * @summary Verifies the signature on the supplied message.\n * @description\n * Verifies the `signature` on `message` with the supplied `publicKey`. Returns `true` on sucess, `false` otherwise.\n * @example\n * <BR>\n *\n * ```javascript\n * import { ed25519Verify } from '@polkadot/util-crypto';\n *\n * ed25519Verify([...], [...], [...]); // => true/false\n * ```\n */ function ed25519Verify(message, signature, publicKey, onlyJs) {\n    const messageU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(message);\n    const publicKeyU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(publicKey);\n    const signatureU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(signature);\n    if (publicKeyU8a.length !== 32) {\n        throw new Error(\"Invalid publicKey, received \".concat(publicKeyU8a.length, \", expected 32\"));\n    } else if (signatureU8a.length !== 64) {\n        throw new Error(\"Invalid signature, received \".concat(signatureU8a.length, \" bytes, expected 64\"));\n    }\n    try {\n        return !_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.isReady)() ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.ed25519Verify)(signatureU8a, messageU8a, publicKeyU8a) : _noble_curves_ed25519__WEBPACK_IMPORTED_MODULE_3__.ed25519.verify(signatureU8a, messageU8a, publicKeyU8a);\n    } catch (e) {\n        return false;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vZWQyNTUxOS92ZXJpZnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBZ0Q7QUFDSztBQUN3QjtBQUM3RTs7Ozs7Ozs7Ozs7OztDQWFDLEdBQ00sU0FBU0csY0FBY0csT0FBTyxFQUFFQyxTQUFTLEVBQUVDLFNBQVMsRUFBRUMsTUFBTTtJQUMvRCxNQUFNQyxhQUFhUix3REFBUUEsQ0FBQ0k7SUFDNUIsTUFBTUssZUFBZVQsd0RBQVFBLENBQUNNO0lBQzlCLE1BQU1JLGVBQWVWLHdEQUFRQSxDQUFDSztJQUM5QixJQUFJSSxhQUFhRSxNQUFNLEtBQUssSUFBSTtRQUM1QixNQUFNLElBQUlDLE1BQU0sK0JBQW1ELE9BQXBCSCxhQUFhRSxNQUFNLEVBQUM7SUFDdkUsT0FDSyxJQUFJRCxhQUFhQyxNQUFNLEtBQUssSUFBSTtRQUNqQyxNQUFNLElBQUlDLE1BQU0sK0JBQW1ELE9BQXBCRixhQUFhQyxNQUFNLEVBQUM7SUFDdkU7SUFDQSxJQUFJO1FBQ0EsT0FBTyxDQUFDWixxREFBU0EsSUFBSyxDQUFDUSxVQUFVSiw4REFBT0EsS0FDbENELG9FQUFVQSxDQUFDUSxjQUFjRixZQUFZQyxnQkFDckNYLDBEQUFPQSxDQUFDZSxNQUFNLENBQUNILGNBQWNGLFlBQVlDO0lBQ25ELEVBQ0EsVUFBTTtRQUNGLE9BQU87SUFDWDtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vZWQyNTUxOS92ZXJpZnkuanM/YWVmNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlZDI1NTE5IH0gZnJvbSAnQG5vYmxlL2N1cnZlcy9lZDI1NTE5JztcbmltcG9ydCB7IGhhc0JpZ0ludCwgdThhVG9VOGEgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG5pbXBvcnQgeyBlZDI1NTE5VmVyaWZ5IGFzIHdhc21WZXJpZnksIGlzUmVhZHkgfSBmcm9tICdAcG9sa2Fkb3Qvd2FzbS1jcnlwdG8nO1xuLyoqXG4gKiBAbmFtZSBlZDI1NTE5U2lnblxuICogQHN1bW1hcnkgVmVyaWZpZXMgdGhlIHNpZ25hdHVyZSBvbiB0aGUgc3VwcGxpZWQgbWVzc2FnZS5cbiAqIEBkZXNjcmlwdGlvblxuICogVmVyaWZpZXMgdGhlIGBzaWduYXR1cmVgIG9uIGBtZXNzYWdlYCB3aXRoIHRoZSBzdXBwbGllZCBgcHVibGljS2V5YC4gUmV0dXJucyBgdHJ1ZWAgb24gc3VjZXNzLCBgZmFsc2VgIG90aGVyd2lzZS5cbiAqIEBleGFtcGxlXG4gKiA8QlI+XG4gKlxuICogYGBgamF2YXNjcmlwdFxuICogaW1wb3J0IHsgZWQyNTUxOVZlcmlmeSB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsLWNyeXB0byc7XG4gKlxuICogZWQyNTUxOVZlcmlmeShbLi4uXSwgWy4uLl0sIFsuLi5dKTsgLy8gPT4gdHJ1ZS9mYWxzZVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlZDI1NTE5VmVyaWZ5KG1lc3NhZ2UsIHNpZ25hdHVyZSwgcHVibGljS2V5LCBvbmx5SnMpIHtcbiAgICBjb25zdCBtZXNzYWdlVThhID0gdThhVG9VOGEobWVzc2FnZSk7XG4gICAgY29uc3QgcHVibGljS2V5VThhID0gdThhVG9VOGEocHVibGljS2V5KTtcbiAgICBjb25zdCBzaWduYXR1cmVVOGEgPSB1OGFUb1U4YShzaWduYXR1cmUpO1xuICAgIGlmIChwdWJsaWNLZXlVOGEubGVuZ3RoICE9PSAzMikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgcHVibGljS2V5LCByZWNlaXZlZCAke3B1YmxpY0tleVU4YS5sZW5ndGh9LCBleHBlY3RlZCAzMmApO1xuICAgIH1cbiAgICBlbHNlIGlmIChzaWduYXR1cmVVOGEubGVuZ3RoICE9PSA2NCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgc2lnbmF0dXJlLCByZWNlaXZlZCAke3NpZ25hdHVyZVU4YS5sZW5ndGh9IGJ5dGVzLCBleHBlY3RlZCA2NGApO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gIWhhc0JpZ0ludCB8fCAoIW9ubHlKcyAmJiBpc1JlYWR5KCkpXG4gICAgICAgICAgICA/IHdhc21WZXJpZnkoc2lnbmF0dXJlVThhLCBtZXNzYWdlVThhLCBwdWJsaWNLZXlVOGEpXG4gICAgICAgICAgICA6IGVkMjU1MTkudmVyaWZ5KHNpZ25hdHVyZVU4YSwgbWVzc2FnZVU4YSwgcHVibGljS2V5VThhKTtcbiAgICB9XG4gICAgY2F0Y2gge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbImVkMjU1MTkiLCJoYXNCaWdJbnQiLCJ1OGFUb1U4YSIsImVkMjU1MTlWZXJpZnkiLCJ3YXNtVmVyaWZ5IiwiaXNSZWFkeSIsIm1lc3NhZ2UiLCJzaWduYXR1cmUiLCJwdWJsaWNLZXkiLCJvbmx5SnMiLCJtZXNzYWdlVThhIiwicHVibGljS2V5VThhIiwic2lnbmF0dXJlVThhIiwibGVuZ3RoIiwiRXJyb3IiLCJ2ZXJpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/verify.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/ethereum/encode.js":
/*!***************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/ethereum/encode.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ethereumEncode: function() { return /* binding */ ethereumEncode; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toHex.js\");\n/* harmony import */ var _keccak_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../keccak/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/keccak/asU8a.js\");\n/* harmony import */ var _secp256k1_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../secp256k1/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/expand.js\");\n\n\n\nfunction getH160(u8a) {\n    if ([\n        33,\n        65\n    ].includes(u8a.length)) {\n        u8a = (0,_keccak_index_js__WEBPACK_IMPORTED_MODULE_0__.keccakAsU8a)((0,_secp256k1_index_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1Expand)(u8a));\n    }\n    return u8a.slice(-20);\n}\nfunction ethereumEncode(addressOrPublic) {\n    if (!addressOrPublic) {\n        return \"0x\";\n    }\n    const u8aAddress = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aToU8a)(addressOrPublic);\n    if (![\n        20,\n        32,\n        33,\n        65\n    ].includes(u8aAddress.length)) {\n        throw new Error(\"Invalid address or publicKey provided, received \".concat(u8aAddress.length, \" bytes input\"));\n    }\n    const address = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aToHex)(getH160(u8aAddress), -1, false);\n    const hash = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aToHex)((0,_keccak_index_js__WEBPACK_IMPORTED_MODULE_0__.keccakAsU8a)(address), -1, false);\n    let result = \"\";\n    for(let i = 0; i < 40; i++){\n        result = \"\".concat(result).concat(parseInt(hash[i], 16) > 7 ? address[i].toUpperCase() : address[i]);\n    }\n    return \"0x\".concat(result);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vZXRoZXJldW0vZW5jb2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW9EO0FBQ0g7QUFDTztBQUN4RCxTQUFTSSxRQUFRQyxHQUFHO0lBQ2hCLElBQUk7UUFBQztRQUFJO0tBQUcsQ0FBQ0MsUUFBUSxDQUFDRCxJQUFJRSxNQUFNLEdBQUc7UUFDL0JGLE1BQU1ILDZEQUFXQSxDQUFDQyxvRUFBZUEsQ0FBQ0U7SUFDdEM7SUFDQSxPQUFPQSxJQUFJRyxLQUFLLENBQUMsQ0FBQztBQUN0QjtBQUNPLFNBQVNDLGVBQWVDLGVBQWU7SUFDMUMsSUFBSSxDQUFDQSxpQkFBaUI7UUFDbEIsT0FBTztJQUNYO0lBQ0EsTUFBTUMsYUFBYVYsd0RBQVFBLENBQUNTO0lBQzVCLElBQUksQ0FBQztRQUFDO1FBQUk7UUFBSTtRQUFJO0tBQUcsQ0FBQ0osUUFBUSxDQUFDSyxXQUFXSixNQUFNLEdBQUc7UUFDL0MsTUFBTSxJQUFJSyxNQUFNLG1EQUFxRSxPQUFsQkQsV0FBV0osTUFBTSxFQUFDO0lBQ3pGO0lBQ0EsTUFBTU0sVUFBVWIsd0RBQVFBLENBQUNJLFFBQVFPLGFBQWEsQ0FBQyxHQUFHO0lBQ2xELE1BQU1HLE9BQU9kLHdEQUFRQSxDQUFDRSw2REFBV0EsQ0FBQ1csVUFBVSxDQUFDLEdBQUc7SUFDaEQsSUFBSUUsU0FBUztJQUNiLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJLElBQUlBLElBQUs7UUFDekJELFNBQVMsR0FBWUUsT0FBVEYsUUFBMkUsT0FBbEVFLFNBQVNILElBQUksQ0FBQ0UsRUFBRSxFQUFFLE1BQU0sSUFBSUgsT0FBTyxDQUFDRyxFQUFFLENBQUNFLFdBQVcsS0FBS0wsT0FBTyxDQUFDRyxFQUFFO0lBQzFGO0lBQ0EsT0FBTyxLQUFZLE9BQVBEO0FBQ2hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vZXRoZXJldW0vZW5jb2RlLmpzPzczNzEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdThhVG9IZXgsIHU4YVRvVThhIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsga2VjY2FrQXNVOGEgfSBmcm9tICcuLi9rZWNjYWsvaW5kZXguanMnO1xuaW1wb3J0IHsgc2VjcDI1NmsxRXhwYW5kIH0gZnJvbSAnLi4vc2VjcDI1NmsxL2luZGV4LmpzJztcbmZ1bmN0aW9uIGdldEgxNjAodThhKSB7XG4gICAgaWYgKFszMywgNjVdLmluY2x1ZGVzKHU4YS5sZW5ndGgpKSB7XG4gICAgICAgIHU4YSA9IGtlY2Nha0FzVThhKHNlY3AyNTZrMUV4cGFuZCh1OGEpKTtcbiAgICB9XG4gICAgcmV0dXJuIHU4YS5zbGljZSgtMjApO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGV0aGVyZXVtRW5jb2RlKGFkZHJlc3NPclB1YmxpYykge1xuICAgIGlmICghYWRkcmVzc09yUHVibGljKSB7XG4gICAgICAgIHJldHVybiAnMHgnO1xuICAgIH1cbiAgICBjb25zdCB1OGFBZGRyZXNzID0gdThhVG9VOGEoYWRkcmVzc09yUHVibGljKTtcbiAgICBpZiAoIVsyMCwgMzIsIDMzLCA2NV0uaW5jbHVkZXModThhQWRkcmVzcy5sZW5ndGgpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBhZGRyZXNzIG9yIHB1YmxpY0tleSBwcm92aWRlZCwgcmVjZWl2ZWQgJHt1OGFBZGRyZXNzLmxlbmd0aH0gYnl0ZXMgaW5wdXRgKTtcbiAgICB9XG4gICAgY29uc3QgYWRkcmVzcyA9IHU4YVRvSGV4KGdldEgxNjAodThhQWRkcmVzcyksIC0xLCBmYWxzZSk7XG4gICAgY29uc3QgaGFzaCA9IHU4YVRvSGV4KGtlY2Nha0FzVThhKGFkZHJlc3MpLCAtMSwgZmFsc2UpO1xuICAgIGxldCByZXN1bHQgPSAnJztcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDQwOyBpKyspIHtcbiAgICAgICAgcmVzdWx0ID0gYCR7cmVzdWx0fSR7cGFyc2VJbnQoaGFzaFtpXSwgMTYpID4gNyA/IGFkZHJlc3NbaV0udG9VcHBlckNhc2UoKSA6IGFkZHJlc3NbaV19YDtcbiAgICB9XG4gICAgcmV0dXJuIGAweCR7cmVzdWx0fWA7XG59XG4iXSwibmFtZXMiOlsidThhVG9IZXgiLCJ1OGFUb1U4YSIsImtlY2Nha0FzVThhIiwic2VjcDI1NmsxRXhwYW5kIiwiZ2V0SDE2MCIsInU4YSIsImluY2x1ZGVzIiwibGVuZ3RoIiwic2xpY2UiLCJldGhlcmV1bUVuY29kZSIsImFkZHJlc3NPclB1YmxpYyIsInU4YUFkZHJlc3MiLCJFcnJvciIsImFkZHJlc3MiLCJoYXNoIiwicmVzdWx0IiwiaSIsInBhcnNlSW50IiwidG9VcHBlckNhc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/ethereum/encode.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/ethereum/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/ethereum/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ethereumEncode: function() { return /* reexport safe */ _encode_js__WEBPACK_IMPORTED_MODULE_0__.ethereumEncode; },\n/* harmony export */   isEthereumAddress: function() { return /* reexport safe */ _isAddress_js__WEBPACK_IMPORTED_MODULE_1__.isEthereumAddress; },\n/* harmony export */   isEthereumChecksum: function() { return /* reexport safe */ _isChecksum_js__WEBPACK_IMPORTED_MODULE_2__.isEthereumChecksum; }\n/* harmony export */ });\n/* harmony import */ var _encode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encode.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/ethereum/encode.js\");\n/* harmony import */ var _isAddress_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isAddress.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/ethereum/isAddress.js\");\n/* harmony import */ var _isChecksum_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isChecksum.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/ethereum/isChecksum.js\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vZXRoZXJldW0vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTZDO0FBQ007QUFDRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2V0aGVyZXVtL2luZGV4LmpzP2JjNjQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZXRoZXJldW1FbmNvZGUgfSBmcm9tICcuL2VuY29kZS5qcyc7XG5leHBvcnQgeyBpc0V0aGVyZXVtQWRkcmVzcyB9IGZyb20gJy4vaXNBZGRyZXNzLmpzJztcbmV4cG9ydCB7IGlzRXRoZXJldW1DaGVja3N1bSB9IGZyb20gJy4vaXNDaGVja3N1bS5qcyc7XG4iXSwibmFtZXMiOlsiZXRoZXJldW1FbmNvZGUiLCJpc0V0aGVyZXVtQWRkcmVzcyIsImlzRXRoZXJldW1DaGVja3N1bSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/ethereum/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/ethereum/isAddress.js":
/*!******************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/ethereum/isAddress.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isEthereumAddress: function() { return /* binding */ isEthereumAddress; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/hex.js\");\n/* harmony import */ var _isChecksum_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isChecksum.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/ethereum/isChecksum.js\");\n\n\nfunction isEthereumAddress(address) {\n    if (!address || address.length !== 42 || !(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isHex)(address)) {\n        return false;\n    } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\n        return true;\n    }\n    return (0,_isChecksum_js__WEBPACK_IMPORTED_MODULE_1__.isEthereumChecksum)(address);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vZXRoZXJldW0vaXNBZGRyZXNzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF1QztBQUNjO0FBQzlDLFNBQVNFLGtCQUFrQkMsT0FBTztJQUNyQyxJQUFJLENBQUNBLFdBQVdBLFFBQVFDLE1BQU0sS0FBSyxNQUFNLENBQUNKLHFEQUFLQSxDQUFDRyxVQUFVO1FBQ3RELE9BQU87SUFDWCxPQUNLLElBQUksc0JBQXNCRSxJQUFJLENBQUNGLFlBQVksc0JBQXNCRSxJQUFJLENBQUNGLFVBQVU7UUFDakYsT0FBTztJQUNYO0lBQ0EsT0FBT0Ysa0VBQWtCQSxDQUFDRTtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2V0aGVyZXVtL2lzQWRkcmVzcy5qcz84MTVjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzSGV4IH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgaXNFdGhlcmV1bUNoZWNrc3VtIH0gZnJvbSAnLi9pc0NoZWNrc3VtLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBpc0V0aGVyZXVtQWRkcmVzcyhhZGRyZXNzKSB7XG4gICAgaWYgKCFhZGRyZXNzIHx8IGFkZHJlc3MubGVuZ3RoICE9PSA0MiB8fCAhaXNIZXgoYWRkcmVzcykpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBlbHNlIGlmICgvXigweCk/WzAtOWEtZl17NDB9JC8udGVzdChhZGRyZXNzKSB8fCAvXigweCk/WzAtOUEtRl17NDB9JC8udGVzdChhZGRyZXNzKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGlzRXRoZXJldW1DaGVja3N1bShhZGRyZXNzKTtcbn1cbiJdLCJuYW1lcyI6WyJpc0hleCIsImlzRXRoZXJldW1DaGVja3N1bSIsImlzRXRoZXJldW1BZGRyZXNzIiwiYWRkcmVzcyIsImxlbmd0aCIsInRlc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/ethereum/isAddress.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/ethereum/isChecksum.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/ethereum/isChecksum.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isEthereumChecksum: function() { return /* binding */ isEthereumChecksum; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toHex.js\");\n/* harmony import */ var _keccak_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../keccak/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/keccak/asU8a.js\");\n\n\nfunction isInvalidChar(char, byte) {\n    return char !== (byte > 7 ? char.toUpperCase() : char.toLowerCase());\n}\nfunction isEthereumChecksum(_address) {\n    const address = _address.replace(\"0x\", \"\");\n    const hash = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToHex)((0,_keccak_index_js__WEBPACK_IMPORTED_MODULE_1__.keccakAsU8a)(address.toLowerCase()), -1, false);\n    for(let i = 0; i < 40; i++){\n        if (isInvalidChar(address[i], parseInt(hash[i], 16))) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vZXRoZXJldW0vaXNDaGVja3N1bS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMEM7QUFDTztBQUNqRCxTQUFTRSxjQUFjQyxJQUFJLEVBQUVDLElBQUk7SUFDN0IsT0FBT0QsU0FBVUMsQ0FBQUEsT0FBTyxJQUNsQkQsS0FBS0UsV0FBVyxLQUNoQkYsS0FBS0csV0FBVyxFQUFDO0FBQzNCO0FBQ08sU0FBU0MsbUJBQW1CQyxRQUFRO0lBQ3ZDLE1BQU1DLFVBQVVELFNBQVNFLE9BQU8sQ0FBQyxNQUFNO0lBQ3ZDLE1BQU1DLE9BQU9YLHdEQUFRQSxDQUFDQyw2REFBV0EsQ0FBQ1EsUUFBUUgsV0FBVyxLQUFLLENBQUMsR0FBRztJQUM5RCxJQUFLLElBQUlNLElBQUksR0FBR0EsSUFBSSxJQUFJQSxJQUFLO1FBQ3pCLElBQUlWLGNBQWNPLE9BQU8sQ0FBQ0csRUFBRSxFQUFFQyxTQUFTRixJQUFJLENBQUNDLEVBQUUsRUFBRSxNQUFNO1lBQ2xELE9BQU87UUFDWDtJQUNKO0lBQ0EsT0FBTztBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vZXRoZXJldW0vaXNDaGVja3N1bS5qcz85YjQzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHU4YVRvSGV4IH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsga2VjY2FrQXNVOGEgfSBmcm9tICcuLi9rZWNjYWsvaW5kZXguanMnO1xuZnVuY3Rpb24gaXNJbnZhbGlkQ2hhcihjaGFyLCBieXRlKSB7XG4gICAgcmV0dXJuIGNoYXIgIT09IChieXRlID4gN1xuICAgICAgICA/IGNoYXIudG9VcHBlckNhc2UoKVxuICAgICAgICA6IGNoYXIudG9Mb3dlckNhc2UoKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNFdGhlcmV1bUNoZWNrc3VtKF9hZGRyZXNzKSB7XG4gICAgY29uc3QgYWRkcmVzcyA9IF9hZGRyZXNzLnJlcGxhY2UoJzB4JywgJycpO1xuICAgIGNvbnN0IGhhc2ggPSB1OGFUb0hleChrZWNjYWtBc1U4YShhZGRyZXNzLnRvTG93ZXJDYXNlKCkpLCAtMSwgZmFsc2UpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNDA7IGkrKykge1xuICAgICAgICBpZiAoaXNJbnZhbGlkQ2hhcihhZGRyZXNzW2ldLCBwYXJzZUludChoYXNoW2ldLCAxNikpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG4iXSwibmFtZXMiOlsidThhVG9IZXgiLCJrZWNjYWtBc1U4YSIsImlzSW52YWxpZENoYXIiLCJjaGFyIiwiYnl0ZSIsInRvVXBwZXJDYXNlIiwidG9Mb3dlckNhc2UiLCJpc0V0aGVyZXVtQ2hlY2tzdW0iLCJfYWRkcmVzcyIsImFkZHJlc3MiLCJyZXBsYWNlIiwiaGFzaCIsImkiLCJwYXJzZUludCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/ethereum/isChecksum.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/hd/ethereum/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/hd/ethereum/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hdEthereum: function() { return /* binding */ hdEthereum; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/string/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/bn/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/concat.js\");\n/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../bn.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/bn.js\");\n/* harmony import */ var _hmac_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../hmac/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/hmac/shaAsU8a.js\");\n/* harmony import */ var _secp256k1_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../secp256k1/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/pair/fromSeed.js\");\n/* harmony import */ var _secp256k1_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../secp256k1/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/tweakAdd.js\");\n/* harmony import */ var _validatePath_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../validatePath.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/hd/validatePath.js\");\n\n\n\n\n\nconst MASTER_SECRET = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.stringToU8a)(\"Bitcoin seed\");\nfunction createCoded(secretKey, chainCode) {\n    return {\n        chainCode,\n        publicKey: (0,_secp256k1_index_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1PairFromSeed)(secretKey).publicKey,\n        secretKey\n    };\n}\nfunction deriveChild(hd, index) {\n    const indexBuffer = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.bnToU8a)(index, _bn_js__WEBPACK_IMPORTED_MODULE_3__.BN_BE_32_OPTS);\n    const data = index >= _validatePath_js__WEBPACK_IMPORTED_MODULE_4__.HARDENED ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.u8aConcat)(new Uint8Array(1), hd.secretKey, indexBuffer) : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.u8aConcat)(hd.publicKey, indexBuffer);\n    try {\n        const I = (0,_hmac_index_js__WEBPACK_IMPORTED_MODULE_6__.hmacShaAsU8a)(hd.chainCode, data, 512);\n        return createCoded((0,_secp256k1_index_js__WEBPACK_IMPORTED_MODULE_7__.secp256k1PrivateKeyTweakAdd)(hd.secretKey, I.slice(0, 32)), I.slice(32));\n    } catch (e) {\n        // In case parse256(IL) >= n or ki == 0, proceed with the next value for i\n        return deriveChild(hd, index + 1);\n    }\n}\nfunction hdEthereum(seed) {\n    let path = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\";\n    const I = (0,_hmac_index_js__WEBPACK_IMPORTED_MODULE_6__.hmacShaAsU8a)(MASTER_SECRET, seed, 512);\n    let hd = createCoded(I.slice(0, 32), I.slice(32));\n    if (!path || path === \"m\" || path === \"M\" || path === \"m'\" || path === \"M'\") {\n        return hd;\n    }\n    if (!(0,_validatePath_js__WEBPACK_IMPORTED_MODULE_4__.hdValidatePath)(path)) {\n        throw new Error(\"Invalid derivation path\");\n    }\n    const parts = path.split(\"/\").slice(1);\n    for (const p of parts){\n        hd = deriveChild(hd, parseInt(p, 10) + (p.length > 1 && p.endsWith(\"'\") ? _validatePath_js__WEBPACK_IMPORTED_MODULE_4__.HARDENED : 0));\n    }\n    return hd;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vaGQvZXRoZXJldW0vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQWlFO0FBQ3JCO0FBQ087QUFDMkM7QUFDaEM7QUFDOUQsTUFBTVMsZ0JBQWdCUiwyREFBV0EsQ0FBQztBQUNsQyxTQUFTUyxZQUFZQyxTQUFTLEVBQUVDLFNBQVM7SUFDckMsT0FBTztRQUNIQTtRQUNBQyxXQUFXUiwwRUFBcUJBLENBQUNNLFdBQVdFLFNBQVM7UUFDckRGO0lBQ0o7QUFDSjtBQUNBLFNBQVNHLFlBQVlDLEVBQUUsRUFBRUMsS0FBSztJQUMxQixNQUFNQyxjQUFjakIsdURBQU9BLENBQUNnQixPQUFPYixpREFBYUE7SUFDaEQsTUFBTWUsT0FBT0YsU0FBU1Qsc0RBQVFBLEdBQ3hCTCx5REFBU0EsQ0FBQyxJQUFJaUIsV0FBVyxJQUFJSixHQUFHSixTQUFTLEVBQUVNLGVBQzNDZix5REFBU0EsQ0FBQ2EsR0FBR0YsU0FBUyxFQUFFSTtJQUM5QixJQUFJO1FBQ0EsTUFBTUcsSUFBSWhCLDREQUFZQSxDQUFDVyxHQUFHSCxTQUFTLEVBQUVNLE1BQU07UUFDM0MsT0FBT1IsWUFBWUosZ0ZBQTJCQSxDQUFDUyxHQUFHSixTQUFTLEVBQUVTLEVBQUVDLEtBQUssQ0FBQyxHQUFHLE1BQU1ELEVBQUVDLEtBQUssQ0FBQztJQUMxRixFQUNBLFVBQU07UUFDRiwwRUFBMEU7UUFDMUUsT0FBT1AsWUFBWUMsSUFBSUMsUUFBUTtJQUNuQztBQUNKO0FBQ08sU0FBU00sV0FBV0MsSUFBSTtRQUFFQyxPQUFBQSxpRUFBTztJQUNwQyxNQUFNSixJQUFJaEIsNERBQVlBLENBQUNLLGVBQWVjLE1BQU07SUFDNUMsSUFBSVIsS0FBS0wsWUFBWVUsRUFBRUMsS0FBSyxDQUFDLEdBQUcsS0FBS0QsRUFBRUMsS0FBSyxDQUFDO0lBQzdDLElBQUksQ0FBQ0csUUFBUUEsU0FBUyxPQUFPQSxTQUFTLE9BQU9BLFNBQVMsUUFBUUEsU0FBUyxNQUFNO1FBQ3pFLE9BQU9UO0lBQ1g7SUFDQSxJQUFJLENBQUNQLGdFQUFjQSxDQUFDZ0IsT0FBTztRQUN2QixNQUFNLElBQUlDLE1BQU07SUFDcEI7SUFDQSxNQUFNQyxRQUFRRixLQUFLRyxLQUFLLENBQUMsS0FBS04sS0FBSyxDQUFDO0lBQ3BDLEtBQUssTUFBTU8sS0FBS0YsTUFBTztRQUNuQlgsS0FBS0QsWUFBWUMsSUFBSWMsU0FBU0QsR0FBRyxNQUFPLEdBQUdFLE1BQU0sR0FBRyxLQUFNRixFQUFFRyxRQUFRLENBQUMsT0FDL0R4QixzREFBUUEsR0FDUjtJQUNWO0lBQ0EsT0FBT1E7QUFDWCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2hkL2V0aGVyZXVtL2luZGV4LmpzPzg3MGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYm5Ub1U4YSwgc3RyaW5nVG9VOGEsIHU4YUNvbmNhdCB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbmltcG9ydCB7IEJOX0JFXzMyX09QVFMgfSBmcm9tICcuLi8uLi9ibi5qcyc7XG5pbXBvcnQgeyBobWFjU2hhQXNVOGEgfSBmcm9tICcuLi8uLi9obWFjL2luZGV4LmpzJztcbmltcG9ydCB7IHNlY3AyNTZrMVBhaXJGcm9tU2VlZCwgc2VjcDI1NmsxUHJpdmF0ZUtleVR3ZWFrQWRkIH0gZnJvbSAnLi4vLi4vc2VjcDI1NmsxL2luZGV4LmpzJztcbmltcG9ydCB7IEhBUkRFTkVELCBoZFZhbGlkYXRlUGF0aCB9IGZyb20gJy4uL3ZhbGlkYXRlUGF0aC5qcyc7XG5jb25zdCBNQVNURVJfU0VDUkVUID0gc3RyaW5nVG9VOGEoJ0JpdGNvaW4gc2VlZCcpO1xuZnVuY3Rpb24gY3JlYXRlQ29kZWQoc2VjcmV0S2V5LCBjaGFpbkNvZGUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBjaGFpbkNvZGUsXG4gICAgICAgIHB1YmxpY0tleTogc2VjcDI1NmsxUGFpckZyb21TZWVkKHNlY3JldEtleSkucHVibGljS2V5LFxuICAgICAgICBzZWNyZXRLZXlcbiAgICB9O1xufVxuZnVuY3Rpb24gZGVyaXZlQ2hpbGQoaGQsIGluZGV4KSB7XG4gICAgY29uc3QgaW5kZXhCdWZmZXIgPSBiblRvVThhKGluZGV4LCBCTl9CRV8zMl9PUFRTKTtcbiAgICBjb25zdCBkYXRhID0gaW5kZXggPj0gSEFSREVORURcbiAgICAgICAgPyB1OGFDb25jYXQobmV3IFVpbnQ4QXJyYXkoMSksIGhkLnNlY3JldEtleSwgaW5kZXhCdWZmZXIpXG4gICAgICAgIDogdThhQ29uY2F0KGhkLnB1YmxpY0tleSwgaW5kZXhCdWZmZXIpO1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IEkgPSBobWFjU2hhQXNVOGEoaGQuY2hhaW5Db2RlLCBkYXRhLCA1MTIpO1xuICAgICAgICByZXR1cm4gY3JlYXRlQ29kZWQoc2VjcDI1NmsxUHJpdmF0ZUtleVR3ZWFrQWRkKGhkLnNlY3JldEtleSwgSS5zbGljZSgwLCAzMikpLCBJLnNsaWNlKDMyKSk7XG4gICAgfVxuICAgIGNhdGNoIHtcbiAgICAgICAgLy8gSW4gY2FzZSBwYXJzZTI1NihJTCkgPj0gbiBvciBraSA9PSAwLCBwcm9jZWVkIHdpdGggdGhlIG5leHQgdmFsdWUgZm9yIGlcbiAgICAgICAgcmV0dXJuIGRlcml2ZUNoaWxkKGhkLCBpbmRleCArIDEpO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBoZEV0aGVyZXVtKHNlZWQsIHBhdGggPSAnJykge1xuICAgIGNvbnN0IEkgPSBobWFjU2hhQXNVOGEoTUFTVEVSX1NFQ1JFVCwgc2VlZCwgNTEyKTtcbiAgICBsZXQgaGQgPSBjcmVhdGVDb2RlZChJLnNsaWNlKDAsIDMyKSwgSS5zbGljZSgzMikpO1xuICAgIGlmICghcGF0aCB8fCBwYXRoID09PSAnbScgfHwgcGF0aCA9PT0gJ00nIHx8IHBhdGggPT09IFwibSdcIiB8fCBwYXRoID09PSBcIk0nXCIpIHtcbiAgICAgICAgcmV0dXJuIGhkO1xuICAgIH1cbiAgICBpZiAoIWhkVmFsaWRhdGVQYXRoKHBhdGgpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBkZXJpdmF0aW9uIHBhdGgnKTtcbiAgICB9XG4gICAgY29uc3QgcGFydHMgPSBwYXRoLnNwbGl0KCcvJykuc2xpY2UoMSk7XG4gICAgZm9yIChjb25zdCBwIG9mIHBhcnRzKSB7XG4gICAgICAgIGhkID0gZGVyaXZlQ2hpbGQoaGQsIHBhcnNlSW50KHAsIDEwKSArICgocC5sZW5ndGggPiAxKSAmJiBwLmVuZHNXaXRoKFwiJ1wiKVxuICAgICAgICAgICAgPyBIQVJERU5FRFxuICAgICAgICAgICAgOiAwKSk7XG4gICAgfVxuICAgIHJldHVybiBoZDtcbn1cbiJdLCJuYW1lcyI6WyJiblRvVThhIiwic3RyaW5nVG9VOGEiLCJ1OGFDb25jYXQiLCJCTl9CRV8zMl9PUFRTIiwiaG1hY1NoYUFzVThhIiwic2VjcDI1NmsxUGFpckZyb21TZWVkIiwic2VjcDI1NmsxUHJpdmF0ZUtleVR3ZWFrQWRkIiwiSEFSREVORUQiLCJoZFZhbGlkYXRlUGF0aCIsIk1BU1RFUl9TRUNSRVQiLCJjcmVhdGVDb2RlZCIsInNlY3JldEtleSIsImNoYWluQ29kZSIsInB1YmxpY0tleSIsImRlcml2ZUNoaWxkIiwiaGQiLCJpbmRleCIsImluZGV4QnVmZmVyIiwiZGF0YSIsIlVpbnQ4QXJyYXkiLCJJIiwic2xpY2UiLCJoZEV0aGVyZXVtIiwic2VlZCIsInBhdGgiLCJFcnJvciIsInBhcnRzIiwic3BsaXQiLCJwIiwicGFyc2VJbnQiLCJsZW5ndGgiLCJlbmRzV2l0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/hd/ethereum/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/hd/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/hd/index.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hdEthereum: function() { return /* reexport safe */ _ethereum_index_js__WEBPACK_IMPORTED_MODULE_0__.hdEthereum; },\n/* harmony export */   hdLedger: function() { return /* reexport safe */ _ledger_index_js__WEBPACK_IMPORTED_MODULE_1__.hdLedger; },\n/* harmony export */   hdValidatePath: function() { return /* reexport safe */ _validatePath_js__WEBPACK_IMPORTED_MODULE_2__.hdValidatePath; }\n/* harmony export */ });\n/* harmony import */ var _ethereum_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ethereum/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/hd/ethereum/index.js\");\n/* harmony import */ var _ledger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ledger/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/hd/ledger/index.js\");\n/* harmony import */ var _validatePath_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validatePath.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/hd/validatePath.js\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vaGQvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWlEO0FBQ0o7QUFDTSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2hkL2luZGV4LmpzPzgwODciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgaGRFdGhlcmV1bSB9IGZyb20gJy4vZXRoZXJldW0vaW5kZXguanMnO1xuZXhwb3J0IHsgaGRMZWRnZXIgfSBmcm9tICcuL2xlZGdlci9pbmRleC5qcyc7XG5leHBvcnQgeyBoZFZhbGlkYXRlUGF0aCB9IGZyb20gJy4vdmFsaWRhdGVQYXRoLmpzJztcbiJdLCJuYW1lcyI6WyJoZEV0aGVyZXVtIiwiaGRMZWRnZXIiLCJoZFZhbGlkYXRlUGF0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/hd/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/hd/ledger/derivePrivate.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/hd/ledger/derivePrivate.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ledgerDerivePrivate: function() { return /* binding */ ledgerDerivePrivate; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/concat.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/bn/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toBn.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/bn/consts.js\");\n/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../bn.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/bn.js\");\n/* harmony import */ var _hmac_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../hmac/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/hmac/shaAsU8a.js\");\n\n\n\nfunction ledgerDerivePrivate(xprv, index) {\n    const kl = xprv.subarray(0, 32);\n    const kr = xprv.subarray(32, 64);\n    const cc = xprv.subarray(64, 96);\n    const data = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aConcat)([\n        0\n    ], kl, kr, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.bnToU8a)(index, _bn_js__WEBPACK_IMPORTED_MODULE_2__.BN_LE_32_OPTS));\n    const z = (0,_hmac_index_js__WEBPACK_IMPORTED_MODULE_3__.hmacShaAsU8a)(cc, data, 512);\n    data[0] = 0x01;\n    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aConcat)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.bnToU8a)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.u8aToBn)(kl, _bn_js__WEBPACK_IMPORTED_MODULE_2__.BN_LE_OPTS).iadd((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.u8aToBn)(z.subarray(0, 28), _bn_js__WEBPACK_IMPORTED_MODULE_2__.BN_LE_OPTS).imul(_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.BN_EIGHT)), _bn_js__WEBPACK_IMPORTED_MODULE_2__.BN_LE_512_OPTS).subarray(0, 32), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.bnToU8a)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.u8aToBn)(kr, _bn_js__WEBPACK_IMPORTED_MODULE_2__.BN_LE_OPTS).iadd((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.u8aToBn)(z.subarray(32, 64), _bn_js__WEBPACK_IMPORTED_MODULE_2__.BN_LE_OPTS)), _bn_js__WEBPACK_IMPORTED_MODULE_2__.BN_LE_512_OPTS).subarray(0, 32), (0,_hmac_index_js__WEBPACK_IMPORTED_MODULE_3__.hmacShaAsU8a)(cc, data, 512).subarray(32, 64));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vaGQvbGVkZ2VyL2Rlcml2ZVByaXZhdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUF1RTtBQUNDO0FBQ3JCO0FBQzVDLFNBQVNRLG9CQUFvQkMsSUFBSSxFQUFFQyxLQUFLO0lBQzNDLE1BQU1DLEtBQUtGLEtBQUtHLFFBQVEsQ0FBQyxHQUFHO0lBQzVCLE1BQU1DLEtBQUtKLEtBQUtHLFFBQVEsQ0FBQyxJQUFJO0lBQzdCLE1BQU1FLEtBQUtMLEtBQUtHLFFBQVEsQ0FBQyxJQUFJO0lBQzdCLE1BQU1HLE9BQU9iLHlEQUFTQSxDQUFDO1FBQUM7S0FBRSxFQUFFUyxJQUFJRSxJQUFJWix1REFBT0EsQ0FBQ1MsT0FBT04saURBQWFBO0lBQ2hFLE1BQU1ZLElBQUlULDREQUFZQSxDQUFDTyxJQUFJQyxNQUFNO0lBQ2pDQSxJQUFJLENBQUMsRUFBRSxHQUFHO0lBQ1YsT0FBT2IseURBQVNBLENBQUNELHVEQUFPQSxDQUFDRSx1REFBT0EsQ0FBQ1EsSUFBSUwsOENBQVVBLEVBQUVXLElBQUksQ0FBQ2QsdURBQU9BLENBQUNhLEVBQUVKLFFBQVEsQ0FBQyxHQUFHLEtBQUtOLDhDQUFVQSxFQUFFWSxJQUFJLENBQUNsQixvREFBUUEsSUFBSUssa0RBQWNBLEVBQUVPLFFBQVEsQ0FBQyxHQUFHLEtBQUtYLHVEQUFPQSxDQUFDRSx1REFBT0EsQ0FBQ1UsSUFBSVAsOENBQVVBLEVBQUVXLElBQUksQ0FBQ2QsdURBQU9BLENBQUNhLEVBQUVKLFFBQVEsQ0FBQyxJQUFJLEtBQUtOLDhDQUFVQSxJQUFJRCxrREFBY0EsRUFBRU8sUUFBUSxDQUFDLEdBQUcsS0FBS0wsNERBQVlBLENBQUNPLElBQUlDLE1BQU0sS0FBS0gsUUFBUSxDQUFDLElBQUk7QUFDNVMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9oZC9sZWRnZXIvZGVyaXZlUHJpdmF0ZS5qcz83MmM2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJOX0VJR0hULCBiblRvVThhLCB1OGFDb25jYXQsIHU4YVRvQm4gfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG5pbXBvcnQgeyBCTl9MRV8zMl9PUFRTLCBCTl9MRV81MTJfT1BUUywgQk5fTEVfT1BUUyB9IGZyb20gJy4uLy4uL2JuLmpzJztcbmltcG9ydCB7IGhtYWNTaGFBc1U4YSB9IGZyb20gJy4uLy4uL2htYWMvaW5kZXguanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGxlZGdlckRlcml2ZVByaXZhdGUoeHBydiwgaW5kZXgpIHtcbiAgICBjb25zdCBrbCA9IHhwcnYuc3ViYXJyYXkoMCwgMzIpO1xuICAgIGNvbnN0IGtyID0geHBydi5zdWJhcnJheSgzMiwgNjQpO1xuICAgIGNvbnN0IGNjID0geHBydi5zdWJhcnJheSg2NCwgOTYpO1xuICAgIGNvbnN0IGRhdGEgPSB1OGFDb25jYXQoWzBdLCBrbCwga3IsIGJuVG9VOGEoaW5kZXgsIEJOX0xFXzMyX09QVFMpKTtcbiAgICBjb25zdCB6ID0gaG1hY1NoYUFzVThhKGNjLCBkYXRhLCA1MTIpO1xuICAgIGRhdGFbMF0gPSAweDAxO1xuICAgIHJldHVybiB1OGFDb25jYXQoYm5Ub1U4YSh1OGFUb0JuKGtsLCBCTl9MRV9PUFRTKS5pYWRkKHU4YVRvQm4oei5zdWJhcnJheSgwLCAyOCksIEJOX0xFX09QVFMpLmltdWwoQk5fRUlHSFQpKSwgQk5fTEVfNTEyX09QVFMpLnN1YmFycmF5KDAsIDMyKSwgYm5Ub1U4YSh1OGFUb0JuKGtyLCBCTl9MRV9PUFRTKS5pYWRkKHU4YVRvQm4oei5zdWJhcnJheSgzMiwgNjQpLCBCTl9MRV9PUFRTKSksIEJOX0xFXzUxMl9PUFRTKS5zdWJhcnJheSgwLCAzMiksIGhtYWNTaGFBc1U4YShjYywgZGF0YSwgNTEyKS5zdWJhcnJheSgzMiwgNjQpKTtcbn1cbiJdLCJuYW1lcyI6WyJCTl9FSUdIVCIsImJuVG9VOGEiLCJ1OGFDb25jYXQiLCJ1OGFUb0JuIiwiQk5fTEVfMzJfT1BUUyIsIkJOX0xFXzUxMl9PUFRTIiwiQk5fTEVfT1BUUyIsImhtYWNTaGFBc1U4YSIsImxlZGdlckRlcml2ZVByaXZhdGUiLCJ4cHJ2IiwiaW5kZXgiLCJrbCIsInN1YmFycmF5Iiwia3IiLCJjYyIsImRhdGEiLCJ6IiwiaWFkZCIsImltdWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/hd/ledger/derivePrivate.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/hd/ledger/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/hd/ledger/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hdLedger: function() { return /* binding */ hdLedger; }\n/* harmony export */ });\n/* harmony import */ var _ed25519_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../ed25519/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/pair/fromSeed.js\");\n/* harmony import */ var _mnemonic_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../mnemonic/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/validate.js\");\n/* harmony import */ var _validatePath_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../validatePath.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/hd/validatePath.js\");\n/* harmony import */ var _derivePrivate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./derivePrivate.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/hd/ledger/derivePrivate.js\");\n/* harmony import */ var _master_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./master.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/hd/ledger/master.js\");\n\n\n\n\n\nfunction hdLedger(_mnemonic, path) {\n    const words = _mnemonic.split(\" \").map((s)=>s.trim()).filter((s)=>s);\n    if (![\n        12,\n        24,\n        25\n    ].includes(words.length)) {\n        throw new Error(\"Expected a mnemonic with 24 words (or 25 including a password)\");\n    }\n    const [mnemonic, password] = words.length === 25 ? [\n        words.slice(0, 24).join(\" \"),\n        words[24]\n    ] : [\n        words.join(\" \"),\n        \"\"\n    ];\n    if (!(0,_mnemonic_index_js__WEBPACK_IMPORTED_MODULE_0__.mnemonicValidate)(mnemonic)) {\n        throw new Error(\"Invalid mnemonic passed to ledger derivation\");\n    } else if (!(0,_validatePath_js__WEBPACK_IMPORTED_MODULE_1__.hdValidatePath)(path)) {\n        throw new Error(\"Invalid derivation path\");\n    }\n    const parts = path.split(\"/\").slice(1);\n    let seed = (0,_master_js__WEBPACK_IMPORTED_MODULE_2__.ledgerMaster)(mnemonic, password);\n    for (const p of parts){\n        const n = parseInt(p.replace(/'$/, \"\"), 10);\n        seed = (0,_derivePrivate_js__WEBPACK_IMPORTED_MODULE_3__.ledgerDerivePrivate)(seed, n < _validatePath_js__WEBPACK_IMPORTED_MODULE_1__.HARDENED ? n + _validatePath_js__WEBPACK_IMPORTED_MODULE_1__.HARDENED : n);\n    }\n    return (0,_ed25519_index_js__WEBPACK_IMPORTED_MODULE_4__.ed25519PairFromSeed)(seed.slice(0, 32));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vaGQvbGVkZ2VyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE2RDtBQUNGO0FBQ0c7QUFDTDtBQUNkO0FBQ3BDLFNBQVNNLFNBQVNDLFNBQVMsRUFBRUMsSUFBSTtJQUNwQyxNQUFNQyxRQUFRRixVQUNURyxLQUFLLENBQUMsS0FDTkMsR0FBRyxDQUFDLENBQUNDLElBQU1BLEVBQUVDLElBQUksSUFDakJDLE1BQU0sQ0FBQyxDQUFDRixJQUFNQTtJQUNuQixJQUFJLENBQUM7UUFBQztRQUFJO1FBQUk7S0FBRyxDQUFDRyxRQUFRLENBQUNOLE1BQU1PLE1BQU0sR0FBRztRQUN0QyxNQUFNLElBQUlDLE1BQU07SUFDcEI7SUFDQSxNQUFNLENBQUNDLFVBQVVDLFNBQVMsR0FBR1YsTUFBTU8sTUFBTSxLQUFLLEtBQ3hDO1FBQUNQLE1BQU1XLEtBQUssQ0FBQyxHQUFHLElBQUlDLElBQUksQ0FBQztRQUFNWixLQUFLLENBQUMsR0FBRztLQUFDLEdBQ3pDO1FBQUNBLE1BQU1ZLElBQUksQ0FBQztRQUFNO0tBQUc7SUFDM0IsSUFBSSxDQUFDcEIsb0VBQWdCQSxDQUFDaUIsV0FBVztRQUM3QixNQUFNLElBQUlELE1BQU07SUFDcEIsT0FDSyxJQUFJLENBQUNkLGdFQUFjQSxDQUFDSyxPQUFPO1FBQzVCLE1BQU0sSUFBSVMsTUFBTTtJQUNwQjtJQUNBLE1BQU1LLFFBQVFkLEtBQUtFLEtBQUssQ0FBQyxLQUFLVSxLQUFLLENBQUM7SUFDcEMsSUFBSUcsT0FBT2xCLHdEQUFZQSxDQUFDYSxVQUFVQztJQUNsQyxLQUFLLE1BQU1LLEtBQUtGLE1BQU87UUFDbkIsTUFBTUcsSUFBSUMsU0FBU0YsRUFBRUcsT0FBTyxDQUFDLE1BQU0sS0FBSztRQUN4Q0osT0FBT25CLHNFQUFtQkEsQ0FBQ21CLE1BQU0sSUFBS3JCLHNEQUFRQSxHQUFLdUIsSUFBSXZCLHNEQUFRQSxHQUFJdUI7SUFDdkU7SUFDQSxPQUFPekIsc0VBQW1CQSxDQUFDdUIsS0FBS0gsS0FBSyxDQUFDLEdBQUc7QUFDN0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9oZC9sZWRnZXIvaW5kZXguanM/Y2NmMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlZDI1NTE5UGFpckZyb21TZWVkIH0gZnJvbSAnLi4vLi4vZWQyNTUxOS9pbmRleC5qcyc7XG5pbXBvcnQgeyBtbmVtb25pY1ZhbGlkYXRlIH0gZnJvbSAnLi4vLi4vbW5lbW9uaWMvaW5kZXguanMnO1xuaW1wb3J0IHsgSEFSREVORUQsIGhkVmFsaWRhdGVQYXRoIH0gZnJvbSAnLi4vdmFsaWRhdGVQYXRoLmpzJztcbmltcG9ydCB7IGxlZGdlckRlcml2ZVByaXZhdGUgfSBmcm9tICcuL2Rlcml2ZVByaXZhdGUuanMnO1xuaW1wb3J0IHsgbGVkZ2VyTWFzdGVyIH0gZnJvbSAnLi9tYXN0ZXIuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGhkTGVkZ2VyKF9tbmVtb25pYywgcGF0aCkge1xuICAgIGNvbnN0IHdvcmRzID0gX21uZW1vbmljXG4gICAgICAgIC5zcGxpdCgnICcpXG4gICAgICAgIC5tYXAoKHMpID0+IHMudHJpbSgpKVxuICAgICAgICAuZmlsdGVyKChzKSA9PiBzKTtcbiAgICBpZiAoIVsxMiwgMjQsIDI1XS5pbmNsdWRlcyh3b3Jkcy5sZW5ndGgpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgYSBtbmVtb25pYyB3aXRoIDI0IHdvcmRzIChvciAyNSBpbmNsdWRpbmcgYSBwYXNzd29yZCknKTtcbiAgICB9XG4gICAgY29uc3QgW21uZW1vbmljLCBwYXNzd29yZF0gPSB3b3Jkcy5sZW5ndGggPT09IDI1XG4gICAgICAgID8gW3dvcmRzLnNsaWNlKDAsIDI0KS5qb2luKCcgJyksIHdvcmRzWzI0XV1cbiAgICAgICAgOiBbd29yZHMuam9pbignICcpLCAnJ107XG4gICAgaWYgKCFtbmVtb25pY1ZhbGlkYXRlKG1uZW1vbmljKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgbW5lbW9uaWMgcGFzc2VkIHRvIGxlZGdlciBkZXJpdmF0aW9uJyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKCFoZFZhbGlkYXRlUGF0aChwYXRoKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgZGVyaXZhdGlvbiBwYXRoJyk7XG4gICAgfVxuICAgIGNvbnN0IHBhcnRzID0gcGF0aC5zcGxpdCgnLycpLnNsaWNlKDEpO1xuICAgIGxldCBzZWVkID0gbGVkZ2VyTWFzdGVyKG1uZW1vbmljLCBwYXNzd29yZCk7XG4gICAgZm9yIChjb25zdCBwIG9mIHBhcnRzKSB7XG4gICAgICAgIGNvbnN0IG4gPSBwYXJzZUludChwLnJlcGxhY2UoLyckLywgJycpLCAxMCk7XG4gICAgICAgIHNlZWQgPSBsZWRnZXJEZXJpdmVQcml2YXRlKHNlZWQsIChuIDwgSEFSREVORUQpID8gKG4gKyBIQVJERU5FRCkgOiBuKTtcbiAgICB9XG4gICAgcmV0dXJuIGVkMjU1MTlQYWlyRnJvbVNlZWQoc2VlZC5zbGljZSgwLCAzMikpO1xufVxuIl0sIm5hbWVzIjpbImVkMjU1MTlQYWlyRnJvbVNlZWQiLCJtbmVtb25pY1ZhbGlkYXRlIiwiSEFSREVORUQiLCJoZFZhbGlkYXRlUGF0aCIsImxlZGdlckRlcml2ZVByaXZhdGUiLCJsZWRnZXJNYXN0ZXIiLCJoZExlZGdlciIsIl9tbmVtb25pYyIsInBhdGgiLCJ3b3JkcyIsInNwbGl0IiwibWFwIiwicyIsInRyaW0iLCJmaWx0ZXIiLCJpbmNsdWRlcyIsImxlbmd0aCIsIkVycm9yIiwibW5lbW9uaWMiLCJwYXNzd29yZCIsInNsaWNlIiwiam9pbiIsInBhcnRzIiwic2VlZCIsInAiLCJuIiwicGFyc2VJbnQiLCJyZXBsYWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/hd/ledger/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/hd/ledger/master.js":
/*!****************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/hd/ledger/master.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ledgerMaster: function() { return /* binding */ ledgerMaster; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/concat.js\");\n/* harmony import */ var _hmac_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../hmac/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/hmac/shaAsU8a.js\");\n/* harmony import */ var _mnemonic_bip39_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../mnemonic/bip39.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/bip39.js\");\n\n\n\nconst ED25519_CRYPTO = \"ed25519 seed\";\nfunction ledgerMaster(mnemonic, password) {\n    const seed = (0,_mnemonic_bip39_js__WEBPACK_IMPORTED_MODULE_0__.mnemonicToSeedSync)(mnemonic, password);\n    const chainCode = (0,_hmac_index_js__WEBPACK_IMPORTED_MODULE_1__.hmacShaAsU8a)(ED25519_CRYPTO, new Uint8Array([\n        1,\n        ...seed\n    ]), 256);\n    let priv;\n    while(!priv || priv[31] & 32){\n        priv = (0,_hmac_index_js__WEBPACK_IMPORTED_MODULE_1__.hmacShaAsU8a)(ED25519_CRYPTO, priv || seed, 512);\n    }\n    priv[0] &= 248;\n    priv[31] &= 127;\n    priv[31] |= 64;\n    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aConcat)(priv, chainCode);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vaGQvbGVkZ2VyL21hc3Rlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTJDO0FBQ1E7QUFDVTtBQUM3RCxNQUFNRyxpQkFBaUI7QUFDaEIsU0FBU0MsYUFBYUMsUUFBUSxFQUFFQyxRQUFRO0lBQzNDLE1BQU1DLE9BQU9MLHNFQUFrQkEsQ0FBQ0csVUFBVUM7SUFDMUMsTUFBTUUsWUFBWVAsNERBQVlBLENBQUNFLGdCQUFnQixJQUFJTSxXQUFXO1FBQUM7V0FBTUY7S0FBSyxHQUFHO0lBQzdFLElBQUlHO0lBQ0osTUFBTyxDQUFDQSxRQUFTQSxJQUFJLENBQUMsR0FBRyxHQUFHLEdBQWM7UUFDdENBLE9BQU9ULDREQUFZQSxDQUFDRSxnQkFBZ0JPLFFBQVFILE1BQU07SUFDdEQ7SUFDQUcsSUFBSSxDQUFDLEVBQUUsSUFBSTtJQUNYQSxJQUFJLENBQUMsR0FBRyxJQUFJO0lBQ1pBLElBQUksQ0FBQyxHQUFHLElBQUk7SUFDWixPQUFPVix5REFBU0EsQ0FBQ1UsTUFBTUY7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9oZC9sZWRnZXIvbWFzdGVyLmpzPzA3OGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdThhQ29uY2F0IH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgaG1hY1NoYUFzVThhIH0gZnJvbSAnLi4vLi4vaG1hYy9pbmRleC5qcyc7XG5pbXBvcnQgeyBtbmVtb25pY1RvU2VlZFN5bmMgfSBmcm9tICcuLi8uLi9tbmVtb25pYy9iaXAzOS5qcyc7XG5jb25zdCBFRDI1NTE5X0NSWVBUTyA9ICdlZDI1NTE5IHNlZWQnO1xuZXhwb3J0IGZ1bmN0aW9uIGxlZGdlck1hc3RlcihtbmVtb25pYywgcGFzc3dvcmQpIHtcbiAgICBjb25zdCBzZWVkID0gbW5lbW9uaWNUb1NlZWRTeW5jKG1uZW1vbmljLCBwYXNzd29yZCk7XG4gICAgY29uc3QgY2hhaW5Db2RlID0gaG1hY1NoYUFzVThhKEVEMjU1MTlfQ1JZUFRPLCBuZXcgVWludDhBcnJheShbMSwgLi4uc2VlZF0pLCAyNTYpO1xuICAgIGxldCBwcml2O1xuICAgIHdoaWxlICghcHJpdiB8fCAocHJpdlszMV0gJiAwYjAwMTBfMDAwMCkpIHtcbiAgICAgICAgcHJpdiA9IGhtYWNTaGFBc1U4YShFRDI1NTE5X0NSWVBUTywgcHJpdiB8fCBzZWVkLCA1MTIpO1xuICAgIH1cbiAgICBwcml2WzBdICY9IDBiMTExMV8xMDAwO1xuICAgIHByaXZbMzFdICY9IDBiMDExMV8xMTExO1xuICAgIHByaXZbMzFdIHw9IDBiMDEwMF8wMDAwO1xuICAgIHJldHVybiB1OGFDb25jYXQocHJpdiwgY2hhaW5Db2RlKTtcbn1cbiJdLCJuYW1lcyI6WyJ1OGFDb25jYXQiLCJobWFjU2hhQXNVOGEiLCJtbmVtb25pY1RvU2VlZFN5bmMiLCJFRDI1NTE5X0NSWVBUTyIsImxlZGdlck1hc3RlciIsIm1uZW1vbmljIiwicGFzc3dvcmQiLCJzZWVkIiwiY2hhaW5Db2RlIiwiVWludDhBcnJheSIsInByaXYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/hd/ledger/master.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/hd/validatePath.js":
/*!***************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/hd/validatePath.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HARDENED: function() { return /* binding */ HARDENED; },\n/* harmony export */   hdValidatePath: function() { return /* binding */ hdValidatePath; }\n/* harmony export */ });\nconst HARDENED = 0x80000000;\nfunction hdValidatePath(path) {\n    if (!path.startsWith(\"m/\")) {\n        return false;\n    }\n    const parts = path.split(\"/\").slice(1);\n    for (const p of parts){\n        const n = /^\\d+'?$/.test(p) ? parseInt(p.replace(/'$/, \"\"), 10) : Number.NaN;\n        if (isNaN(n) || n >= HARDENED || n < 0) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vaGQvdmFsaWRhdGVQYXRoLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sTUFBTUEsV0FBVyxXQUFXO0FBQzVCLFNBQVNDLGVBQWVDLElBQUk7SUFDL0IsSUFBSSxDQUFDQSxLQUFLQyxVQUFVLENBQUMsT0FBTztRQUN4QixPQUFPO0lBQ1g7SUFDQSxNQUFNQyxRQUFRRixLQUFLRyxLQUFLLENBQUMsS0FBS0MsS0FBSyxDQUFDO0lBQ3BDLEtBQUssTUFBTUMsS0FBS0gsTUFBTztRQUNuQixNQUFNSSxJQUFJLFVBQVVDLElBQUksQ0FBQ0YsS0FDbkJHLFNBQVNILEVBQUVJLE9BQU8sQ0FBQyxNQUFNLEtBQUssTUFDOUJDLE9BQU9DLEdBQUc7UUFDaEIsSUFBSUMsTUFBTU4sTUFBT0EsS0FBS1IsWUFBY1EsSUFBSSxHQUFJO1lBQ3hDLE9BQU87UUFDWDtJQUNKO0lBQ0EsT0FBTztBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vaGQvdmFsaWRhdGVQYXRoLmpzPzA3NTMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IEhBUkRFTkVEID0gMHg4MDAwMDAwMDtcbmV4cG9ydCBmdW5jdGlvbiBoZFZhbGlkYXRlUGF0aChwYXRoKSB7XG4gICAgaWYgKCFwYXRoLnN0YXJ0c1dpdGgoJ20vJykpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCBwYXJ0cyA9IHBhdGguc3BsaXQoJy8nKS5zbGljZSgxKTtcbiAgICBmb3IgKGNvbnN0IHAgb2YgcGFydHMpIHtcbiAgICAgICAgY29uc3QgbiA9IC9eXFxkKyc/JC8udGVzdChwKVxuICAgICAgICAgICAgPyBwYXJzZUludChwLnJlcGxhY2UoLyckLywgJycpLCAxMClcbiAgICAgICAgICAgIDogTnVtYmVyLk5hTjtcbiAgICAgICAgaWYgKGlzTmFOKG4pIHx8IChuID49IEhBUkRFTkVEKSB8fCAobiA8IDApKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG4iXSwibmFtZXMiOlsiSEFSREVORUQiLCJoZFZhbGlkYXRlUGF0aCIsInBhdGgiLCJzdGFydHNXaXRoIiwicGFydHMiLCJzcGxpdCIsInNsaWNlIiwicCIsIm4iLCJ0ZXN0IiwicGFyc2VJbnQiLCJyZXBsYWNlIiwiTnVtYmVyIiwiTmFOIiwiaXNOYU4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/hd/validatePath.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/helpers.js":
/*!*******************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/helpers.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAsHex: function() { return /* binding */ createAsHex; },\n/* harmony export */   createBitHasher: function() { return /* binding */ createBitHasher; },\n/* harmony export */   createDualHasher: function() { return /* binding */ createDualHasher; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toHex.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/has.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n\n\n/** @internal */ function createAsHex(fn) {\n    return function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToHex)(fn(...args));\n    };\n}\n/** @internal */ function createBitHasher(bitLength, fn) {\n    return (data, onlyJs)=>fn(data, bitLength, onlyJs);\n}\n/** @internal */ function createDualHasher(wa, js) {\n    return function(value) {\n        let bitLength = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 256, onlyJs = arguments.length > 2 ? arguments[2] : void 0;\n        const u8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToU8a)(value);\n        return !_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_3__.isReady)() ? wa[bitLength](u8a) : js[bitLength](u8a);\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQStEO0FBQ2Y7QUFDaEQsY0FBYyxHQUNQLFNBQVNJLFlBQVlDLEVBQUU7SUFDMUIsT0FBTzt5Q0FBSUM7WUFBQUE7O2VBQVNMLHdEQUFRQSxDQUFDSSxNQUFNQzs7QUFDdkM7QUFDQSxjQUFjLEdBQ1AsU0FBU0MsZ0JBQWdCQyxTQUFTLEVBQUVILEVBQUU7SUFDekMsT0FBTyxDQUFDSSxNQUFNQyxTQUFXTCxHQUFHSSxNQUFNRCxXQUFXRTtBQUNqRDtBQUNBLGNBQWMsR0FDUCxTQUFTQyxpQkFBaUJDLEVBQUUsRUFBRUMsRUFBRTtJQUNuQyxPQUFPLFNBQUNDO1lBQU9OLDZFQUFZLEtBQUtFO1FBQzVCLE1BQU1LLE1BQU1iLHdEQUFRQSxDQUFDWTtRQUNyQixPQUFPLENBQUNkLHFEQUFTQSxJQUFLLENBQUNVLFVBQVVQLDhEQUFPQSxLQUNsQ1MsRUFBRSxDQUFDSixVQUFVLENBQUNPLE9BQ2RGLEVBQUUsQ0FBQ0wsVUFBVSxDQUFDTztJQUN4QjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vaGVscGVycy5qcz82NmZjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGhhc0JpZ0ludCwgdThhVG9IZXgsIHU4YVRvVThhIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgaXNSZWFkeSB9IGZyb20gJ0Bwb2xrYWRvdC93YXNtLWNyeXB0byc7XG4vKiogQGludGVybmFsICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQXNIZXgoZm4pIHtcbiAgICByZXR1cm4gKC4uLmFyZ3MpID0+IHU4YVRvSGV4KGZuKC4uLmFyZ3MpKTtcbn1cbi8qKiBAaW50ZXJuYWwgKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCaXRIYXNoZXIoYml0TGVuZ3RoLCBmbikge1xuICAgIHJldHVybiAoZGF0YSwgb25seUpzKSA9PiBmbihkYXRhLCBiaXRMZW5ndGgsIG9ubHlKcyk7XG59XG4vKiogQGludGVybmFsICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRHVhbEhhc2hlcih3YSwganMpIHtcbiAgICByZXR1cm4gKHZhbHVlLCBiaXRMZW5ndGggPSAyNTYsIG9ubHlKcykgPT4ge1xuICAgICAgICBjb25zdCB1OGEgPSB1OGFUb1U4YSh2YWx1ZSk7XG4gICAgICAgIHJldHVybiAhaGFzQmlnSW50IHx8ICghb25seUpzICYmIGlzUmVhZHkoKSlcbiAgICAgICAgICAgID8gd2FbYml0TGVuZ3RoXSh1OGEpXG4gICAgICAgICAgICA6IGpzW2JpdExlbmd0aF0odThhKTtcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbImhhc0JpZ0ludCIsInU4YVRvSGV4IiwidThhVG9VOGEiLCJpc1JlYWR5IiwiY3JlYXRlQXNIZXgiLCJmbiIsImFyZ3MiLCJjcmVhdGVCaXRIYXNoZXIiLCJiaXRMZW5ndGgiLCJkYXRhIiwib25seUpzIiwiY3JlYXRlRHVhbEhhc2hlciIsIndhIiwianMiLCJ2YWx1ZSIsInU4YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/helpers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/hmac/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/hmac/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hmacSha256AsU8a: function() { return /* reexport safe */ _shaAsU8a_js__WEBPACK_IMPORTED_MODULE_0__.hmacSha256AsU8a; },\n/* harmony export */   hmacSha512AsU8a: function() { return /* reexport safe */ _shaAsU8a_js__WEBPACK_IMPORTED_MODULE_0__.hmacSha512AsU8a; },\n/* harmony export */   hmacShaAsU8a: function() { return /* reexport safe */ _shaAsU8a_js__WEBPACK_IMPORTED_MODULE_0__.hmacShaAsU8a; }\n/* harmony export */ });\n/* harmony import */ var _shaAsU8a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shaAsU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/hmac/shaAsU8a.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vaG1hYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQStFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vaG1hYy9pbmRleC5qcz83MjJmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGhtYWNTaGEyNTZBc1U4YSwgaG1hY1NoYTUxMkFzVThhLCBobWFjU2hhQXNVOGEgfSBmcm9tICcuL3NoYUFzVThhLmpzJztcbiJdLCJuYW1lcyI6WyJobWFjU2hhMjU2QXNVOGEiLCJobWFjU2hhNTEyQXNVOGEiLCJobWFjU2hhQXNVOGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/hmac/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/hmac/shaAsU8a.js":
/*!*************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/hmac/shaAsU8a.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hmacSha256AsU8a: function() { return /* binding */ hmacSha256AsU8a; },\n/* harmony export */   hmacSha512AsU8a: function() { return /* binding */ hmacSha512AsU8a; },\n/* harmony export */   hmacShaAsU8a: function() { return /* binding */ hmacShaAsU8a; }\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @noble/hashes/hmac */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/hmac.js\");\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/sha512 */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/sha512.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/has.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n\n\n\n\n\nconst JS_HASH = {\n    256: _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_0__.sha256,\n    512: _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_1__.sha512\n};\nconst WA_MHAC = {\n    256: _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.hmacSha256,\n    512: _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.hmacSha512\n};\nfunction createSha(bitLength) {\n    return (key, data, onlyJs)=>hmacShaAsU8a(key, data, bitLength, onlyJs);\n}\n/**\n * @name hmacShaAsU8a\n * @description creates a Hmac Sha (256/512) Uint8Array from the key & data\n */ function hmacShaAsU8a(key, data) {\n    let bitLength = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 256, onlyJs = arguments.length > 3 ? arguments[3] : void 0;\n    const u8aKey = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aToU8a)(key);\n    return !_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.isReady)() ? WA_MHAC[bitLength](u8aKey, data) : (0,_noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_5__.hmac)(JS_HASH[bitLength], u8aKey, data);\n}\n/**\n * @name hmacSha256AsU8a\n * @description creates a Hmac Sha256 Uint8Array from the key & data\n */ const hmacSha256AsU8a = /*#__PURE__*/ createSha(256);\n/**\n * @name hmacSha512AsU8a\n * @description creates a Hmac Sha512 Uint8Array from the key & data\n */ const hmacSha512AsU8a = /*#__PURE__*/ createSha(512);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vaG1hYy9zaGFBc1U4YS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBMEM7QUFDSTtBQUNBO0FBQ087QUFDbUI7QUFDeEUsTUFBTVEsVUFBVTtJQUNaLEtBQUtQLHdEQUFNQTtJQUNYLEtBQUtDLHdEQUFNQTtBQUNmO0FBQ0EsTUFBTU8sVUFBVTtJQUNaLEtBQUtKLDZEQUFVQTtJQUNmLEtBQUtDLDZEQUFVQTtBQUNuQjtBQUNBLFNBQVNJLFVBQVVDLFNBQVM7SUFDeEIsT0FBTyxDQUFDQyxLQUFLQyxNQUFNQyxTQUFXQyxhQUFhSCxLQUFLQyxNQUFNRixXQUFXRztBQUNyRTtBQUNBOzs7Q0FHQyxHQUNNLFNBQVNDLGFBQWFILEdBQUcsRUFBRUMsSUFBSTtRQUFFRixZQUFBQSxpRUFBWSxLQUFLRztJQUNyRCxNQUFNRSxTQUFTWix3REFBUUEsQ0FBQ1E7SUFDeEIsT0FBTyxDQUFDVCxxREFBU0EsSUFBSyxDQUFDVyxVQUFVUCw4REFBT0EsS0FDbENFLE9BQU8sQ0FBQ0UsVUFBVSxDQUFDSyxRQUFRSCxRQUMzQmIsd0RBQUlBLENBQUNRLE9BQU8sQ0FBQ0csVUFBVSxFQUFFSyxRQUFRSDtBQUMzQztBQUNBOzs7Q0FHQyxHQUNNLE1BQU1JLGtCQUFrQixXQUFXLEdBQUdQLFVBQVUsS0FBSztBQUM1RDs7O0NBR0MsR0FDTSxNQUFNUSxrQkFBa0IsV0FBVyxHQUFHUixVQUFVLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9obWFjL3NoYUFzVThhLmpzPzZkMGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaG1hYyB9IGZyb20gJ0Bub2JsZS9oYXNoZXMvaG1hYyc7XG5pbXBvcnQgeyBzaGEyNTYgfSBmcm9tICdAbm9ibGUvaGFzaGVzL3NoYTI1Nic7XG5pbXBvcnQgeyBzaGE1MTIgfSBmcm9tICdAbm9ibGUvaGFzaGVzL3NoYTUxMic7XG5pbXBvcnQgeyBoYXNCaWdJbnQsIHU4YVRvVThhIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgaG1hY1NoYTI1NiwgaG1hY1NoYTUxMiwgaXNSZWFkeSB9IGZyb20gJ0Bwb2xrYWRvdC93YXNtLWNyeXB0byc7XG5jb25zdCBKU19IQVNIID0ge1xuICAgIDI1Njogc2hhMjU2LFxuICAgIDUxMjogc2hhNTEyXG59O1xuY29uc3QgV0FfTUhBQyA9IHtcbiAgICAyNTY6IGhtYWNTaGEyNTYsXG4gICAgNTEyOiBobWFjU2hhNTEyXG59O1xuZnVuY3Rpb24gY3JlYXRlU2hhKGJpdExlbmd0aCkge1xuICAgIHJldHVybiAoa2V5LCBkYXRhLCBvbmx5SnMpID0+IGhtYWNTaGFBc1U4YShrZXksIGRhdGEsIGJpdExlbmd0aCwgb25seUpzKTtcbn1cbi8qKlxuICogQG5hbWUgaG1hY1NoYUFzVThhXG4gKiBAZGVzY3JpcHRpb24gY3JlYXRlcyBhIEhtYWMgU2hhICgyNTYvNTEyKSBVaW50OEFycmF5IGZyb20gdGhlIGtleSAmIGRhdGFcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhtYWNTaGFBc1U4YShrZXksIGRhdGEsIGJpdExlbmd0aCA9IDI1Niwgb25seUpzKSB7XG4gICAgY29uc3QgdThhS2V5ID0gdThhVG9VOGEoa2V5KTtcbiAgICByZXR1cm4gIWhhc0JpZ0ludCB8fCAoIW9ubHlKcyAmJiBpc1JlYWR5KCkpXG4gICAgICAgID8gV0FfTUhBQ1tiaXRMZW5ndGhdKHU4YUtleSwgZGF0YSlcbiAgICAgICAgOiBobWFjKEpTX0hBU0hbYml0TGVuZ3RoXSwgdThhS2V5LCBkYXRhKTtcbn1cbi8qKlxuICogQG5hbWUgaG1hY1NoYTI1NkFzVThhXG4gKiBAZGVzY3JpcHRpb24gY3JlYXRlcyBhIEhtYWMgU2hhMjU2IFVpbnQ4QXJyYXkgZnJvbSB0aGUga2V5ICYgZGF0YVxuICovXG5leHBvcnQgY29uc3QgaG1hY1NoYTI1NkFzVThhID0gLyojX19QVVJFX18qLyBjcmVhdGVTaGEoMjU2KTtcbi8qKlxuICogQG5hbWUgaG1hY1NoYTUxMkFzVThhXG4gKiBAZGVzY3JpcHRpb24gY3JlYXRlcyBhIEhtYWMgU2hhNTEyIFVpbnQ4QXJyYXkgZnJvbSB0aGUga2V5ICYgZGF0YVxuICovXG5leHBvcnQgY29uc3QgaG1hY1NoYTUxMkFzVThhID0gLyojX19QVVJFX18qLyBjcmVhdGVTaGEoNTEyKTtcbiJdLCJuYW1lcyI6WyJobWFjIiwic2hhMjU2Iiwic2hhNTEyIiwiaGFzQmlnSW50IiwidThhVG9VOGEiLCJobWFjU2hhMjU2IiwiaG1hY1NoYTUxMiIsImlzUmVhZHkiLCJKU19IQVNIIiwiV0FfTUhBQyIsImNyZWF0ZVNoYSIsImJpdExlbmd0aCIsImtleSIsImRhdGEiLCJvbmx5SnMiLCJobWFjU2hhQXNVOGEiLCJ1OGFLZXkiLCJobWFjU2hhMjU2QXNVOGEiLCJobWFjU2hhNTEyQXNVOGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/hmac/shaAsU8a.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/index.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addressEq: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.addressEq; },\n/* harmony export */   addressToEvm: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.addressToEvm; },\n/* harmony export */   allNetworks: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.allNetworks; },\n/* harmony export */   availableNetworks: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.availableNetworks; },\n/* harmony export */   base32Decode: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.base32Decode; },\n/* harmony export */   base32Encode: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.base32Encode; },\n/* harmony export */   base32Validate: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.base32Validate; },\n/* harmony export */   base58Decode: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.base58Decode; },\n/* harmony export */   base58Encode: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.base58Encode; },\n/* harmony export */   base58Validate: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.base58Validate; },\n/* harmony export */   base64Decode: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.base64Decode; },\n/* harmony export */   base64Encode: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.base64Encode; },\n/* harmony export */   base64Pad: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.base64Pad; },\n/* harmony export */   base64Trim: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.base64Trim; },\n/* harmony export */   base64Validate: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.base64Validate; },\n/* harmony export */   blake2AsHex: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.blake2AsHex; },\n/* harmony export */   blake2AsU8a: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.blake2AsU8a; },\n/* harmony export */   checkAddress: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.checkAddress; },\n/* harmony export */   checkAddressChecksum: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.checkAddressChecksum; },\n/* harmony export */   createKeyDerived: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.createKeyDerived; },\n/* harmony export */   createKeyMulti: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.createKeyMulti; },\n/* harmony export */   cryptoIsReady: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.cryptoIsReady; },\n/* harmony export */   cryptoWaitReady: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.cryptoWaitReady; },\n/* harmony export */   decodeAddress: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.decodeAddress; },\n/* harmony export */   deriveAddress: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.deriveAddress; },\n/* harmony export */   ed25519DeriveHard: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.ed25519DeriveHard; },\n/* harmony export */   ed25519PairFromRandom: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.ed25519PairFromRandom; },\n/* harmony export */   ed25519PairFromSecret: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.ed25519PairFromSecret; },\n/* harmony export */   ed25519PairFromSeed: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.ed25519PairFromSeed; },\n/* harmony export */   ed25519PairFromString: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.ed25519PairFromString; },\n/* harmony export */   ed25519Sign: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.ed25519Sign; },\n/* harmony export */   ed25519Verify: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.ed25519Verify; },\n/* harmony export */   encodeAddress: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.encodeAddress; },\n/* harmony export */   encodeDerivedAddress: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.encodeDerivedAddress; },\n/* harmony export */   encodeMultiAddress: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.encodeMultiAddress; },\n/* harmony export */   ethereumEncode: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.ethereumEncode; },\n/* harmony export */   evmToAddress: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.evmToAddress; },\n/* harmony export */   hdEthereum: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.hdEthereum; },\n/* harmony export */   hdLedger: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.hdLedger; },\n/* harmony export */   hdValidatePath: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.hdValidatePath; },\n/* harmony export */   hmacSha256AsU8a: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.hmacSha256AsU8a; },\n/* harmony export */   hmacSha512AsU8a: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.hmacSha512AsU8a; },\n/* harmony export */   hmacShaAsU8a: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.hmacShaAsU8a; },\n/* harmony export */   isAddress: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.isAddress; },\n/* harmony export */   isBase32: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.isBase32; },\n/* harmony export */   isBase58: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.isBase58; },\n/* harmony export */   isBase64: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.isBase64; },\n/* harmony export */   isEthereumAddress: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.isEthereumAddress; },\n/* harmony export */   isEthereumChecksum: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.isEthereumChecksum; },\n/* harmony export */   jsonDecrypt: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.jsonDecrypt; },\n/* harmony export */   jsonDecryptData: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.jsonDecryptData; },\n/* harmony export */   jsonEncrypt: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.jsonEncrypt; },\n/* harmony export */   jsonEncryptFormat: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.jsonEncryptFormat; },\n/* harmony export */   keccak256AsU8a: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.keccak256AsU8a; },\n/* harmony export */   keccak512AsU8a: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.keccak512AsU8a; },\n/* harmony export */   keccakAsHex: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.keccakAsHex; },\n/* harmony export */   keccakAsU8a: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.keccakAsU8a; },\n/* harmony export */   keyExtractPath: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.keyExtractPath; },\n/* harmony export */   keyExtractSuri: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.keyExtractSuri; },\n/* harmony export */   keyFromPath: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.keyFromPath; },\n/* harmony export */   keyHdkdEcdsa: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.keyHdkdEcdsa; },\n/* harmony export */   keyHdkdEd25519: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.keyHdkdEd25519; },\n/* harmony export */   keyHdkdSr25519: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.keyHdkdSr25519; },\n/* harmony export */   mnemonicGenerate: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.mnemonicGenerate; },\n/* harmony export */   mnemonicToEntropy: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.mnemonicToEntropy; },\n/* harmony export */   mnemonicToLegacySeed: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.mnemonicToLegacySeed; },\n/* harmony export */   mnemonicToMiniSecret: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.mnemonicToMiniSecret; },\n/* harmony export */   mnemonicValidate: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.mnemonicValidate; },\n/* harmony export */   naclDecrypt: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.naclDecrypt; },\n/* harmony export */   naclEncrypt: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.naclEncrypt; },\n/* harmony export */   packageInfo: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.packageInfo; },\n/* harmony export */   pbkdf2Encode: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.pbkdf2Encode; },\n/* harmony export */   randomAsHex: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.randomAsHex; },\n/* harmony export */   randomAsNumber: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.randomAsNumber; },\n/* harmony export */   randomAsU8a: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.randomAsU8a; },\n/* harmony export */   scryptEncode: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.scryptEncode; },\n/* harmony export */   scryptFromU8a: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.scryptFromU8a; },\n/* harmony export */   scryptToU8a: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.scryptToU8a; },\n/* harmony export */   secp256k1Compress: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1Compress; },\n/* harmony export */   secp256k1Expand: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1Expand; },\n/* harmony export */   secp256k1PairFromSeed: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1PairFromSeed; },\n/* harmony export */   secp256k1PrivateKeyTweakAdd: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1PrivateKeyTweakAdd; },\n/* harmony export */   secp256k1Recover: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1Recover; },\n/* harmony export */   secp256k1Sign: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1Sign; },\n/* harmony export */   secp256k1Verify: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1Verify; },\n/* harmony export */   selectableNetworks: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.selectableNetworks; },\n/* harmony export */   setSS58Format: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.setSS58Format; },\n/* harmony export */   sha256AsU8a: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.sha256AsU8a; },\n/* harmony export */   sha512AsU8a: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.sha512AsU8a; },\n/* harmony export */   shaAsU8a: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.shaAsU8a; },\n/* harmony export */   signatureVerify: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.signatureVerify; },\n/* harmony export */   sortAddresses: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.sortAddresses; },\n/* harmony export */   sr25519Agreement: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.sr25519Agreement; },\n/* harmony export */   sr25519DeriveHard: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.sr25519DeriveHard; },\n/* harmony export */   sr25519DerivePublic: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.sr25519DerivePublic; },\n/* harmony export */   sr25519DeriveSoft: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.sr25519DeriveSoft; },\n/* harmony export */   sr25519PairFromSeed: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.sr25519PairFromSeed; },\n/* harmony export */   sr25519Sign: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.sr25519Sign; },\n/* harmony export */   sr25519Verify: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.sr25519Verify; },\n/* harmony export */   sr25519VrfSign: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.sr25519VrfSign; },\n/* harmony export */   sr25519VrfVerify: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.sr25519VrfVerify; },\n/* harmony export */   validateAddress: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.validateAddress; },\n/* harmony export */   xxhashAsHex: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.xxhashAsHex; },\n/* harmony export */   xxhashAsU8a: function() { return /* reexport safe */ _bundle_js__WEBPACK_IMPORTED_MODULE_1__.xxhashAsU8a; }\n/* harmony export */ });\n/* harmony import */ var _packageDetect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./packageDetect.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/packageDetect.js\");\n/* harmony import */ var _bundle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bundle.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/bundle.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE0QjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vaW5kZXguanM/ZGU4OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4vcGFja2FnZURldGVjdC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2J1bmRsZS5qcyc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/json/constants.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/json/constants.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ENCODING: function() { return /* binding */ ENCODING; },\n/* harmony export */   ENCODING_NONE: function() { return /* binding */ ENCODING_NONE; },\n/* harmony export */   ENCODING_VERSION: function() { return /* binding */ ENCODING_VERSION; },\n/* harmony export */   NONCE_LENGTH: function() { return /* binding */ NONCE_LENGTH; },\n/* harmony export */   SCRYPT_LENGTH: function() { return /* binding */ SCRYPT_LENGTH; }\n/* harmony export */ });\nconst ENCODING = [\n    \"scrypt\",\n    \"xsalsa20-poly1305\"\n];\nconst ENCODING_NONE = [\n    \"none\"\n];\nconst ENCODING_VERSION = \"3\";\nconst NONCE_LENGTH = 24;\nconst SCRYPT_LENGTH = 32 + 3 * 4;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vanNvbi9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBTyxNQUFNQSxXQUFXO0lBQUM7SUFBVTtDQUFvQixDQUFDO0FBQ2pELE1BQU1DLGdCQUFnQjtJQUFDO0NBQU8sQ0FBQztBQUMvQixNQUFNQyxtQkFBbUIsSUFBSTtBQUM3QixNQUFNQyxlQUFlLEdBQUc7QUFDeEIsTUFBTUMsZ0JBQWdCLEtBQU0sSUFBSSxFQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vanNvbi9jb25zdGFudHMuanM/ZDljNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgRU5DT0RJTkcgPSBbJ3NjcnlwdCcsICd4c2Fsc2EyMC1wb2x5MTMwNSddO1xuZXhwb3J0IGNvbnN0IEVOQ09ESU5HX05PTkUgPSBbJ25vbmUnXTtcbmV4cG9ydCBjb25zdCBFTkNPRElOR19WRVJTSU9OID0gJzMnO1xuZXhwb3J0IGNvbnN0IE5PTkNFX0xFTkdUSCA9IDI0O1xuZXhwb3J0IGNvbnN0IFNDUllQVF9MRU5HVEggPSAzMiArICgzICogNCk7XG4iXSwibmFtZXMiOlsiRU5DT0RJTkciLCJFTkNPRElOR19OT05FIiwiRU5DT0RJTkdfVkVSU0lPTiIsIk5PTkNFX0xFTkdUSCIsIlNDUllQVF9MRU5HVEgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/json/constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/json/decrypt.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/json/decrypt.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jsonDecrypt: function() { return /* binding */ jsonDecrypt; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/hex.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/hex/toU8a.js\");\n/* harmony import */ var _base64_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base64/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/base64/bs64.js\");\n/* harmony import */ var _decryptData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decryptData.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/json/decryptData.js\");\n\n\n\nfunction jsonDecrypt(param, passphrase) {\n    let { encoded, encoding } = param;\n    if (!encoded) {\n        throw new Error(\"No encrypted data available to decode\");\n    }\n    return (0,_decryptData_js__WEBPACK_IMPORTED_MODULE_0__.jsonDecryptData)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isHex)(encoded) ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.hexToU8a)(encoded) : (0,_base64_index_js__WEBPACK_IMPORTED_MODULE_3__.base64Decode)(encoded), passphrase, Array.isArray(encoding.type) ? encoding.type : [\n        encoding.type\n    ]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vanNvbi9kZWNyeXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWlEO0FBQ0M7QUFDQztBQUM1QyxTQUFTSSxZQUFZLEtBQXFCLEVBQUVDLFVBQVU7UUFBakMsRUFBRUMsT0FBTyxFQUFFQyxRQUFRLEVBQUUsR0FBckI7SUFDeEIsSUFBSSxDQUFDRCxTQUFTO1FBQ1YsTUFBTSxJQUFJRSxNQUFNO0lBQ3BCO0lBQ0EsT0FBT0wsZ0VBQWVBLENBQUNGLHFEQUFLQSxDQUFDSyxXQUN2Qk4sd0RBQVFBLENBQUNNLFdBQ1RKLDhEQUFZQSxDQUFDSSxVQUFVRCxZQUFZSSxNQUFNQyxPQUFPLENBQUNILFNBQVNJLElBQUksSUFDOURKLFNBQVNJLElBQUksR0FDYjtRQUFDSixTQUFTSSxJQUFJO0tBQUM7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9qc29uL2RlY3J5cHQuanM/MDI5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBoZXhUb1U4YSwgaXNIZXggfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG5pbXBvcnQgeyBiYXNlNjREZWNvZGUgfSBmcm9tICcuLi9iYXNlNjQvaW5kZXguanMnO1xuaW1wb3J0IHsganNvbkRlY3J5cHREYXRhIH0gZnJvbSAnLi9kZWNyeXB0RGF0YS5qcyc7XG5leHBvcnQgZnVuY3Rpb24ganNvbkRlY3J5cHQoeyBlbmNvZGVkLCBlbmNvZGluZyB9LCBwYXNzcGhyYXNlKSB7XG4gICAgaWYgKCFlbmNvZGVkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gZW5jcnlwdGVkIGRhdGEgYXZhaWxhYmxlIHRvIGRlY29kZScpO1xuICAgIH1cbiAgICByZXR1cm4ganNvbkRlY3J5cHREYXRhKGlzSGV4KGVuY29kZWQpXG4gICAgICAgID8gaGV4VG9VOGEoZW5jb2RlZClcbiAgICAgICAgOiBiYXNlNjREZWNvZGUoZW5jb2RlZCksIHBhc3NwaHJhc2UsIEFycmF5LmlzQXJyYXkoZW5jb2RpbmcudHlwZSlcbiAgICAgICAgPyBlbmNvZGluZy50eXBlXG4gICAgICAgIDogW2VuY29kaW5nLnR5cGVdKTtcbn1cbiJdLCJuYW1lcyI6WyJoZXhUb1U4YSIsImlzSGV4IiwiYmFzZTY0RGVjb2RlIiwianNvbkRlY3J5cHREYXRhIiwianNvbkRlY3J5cHQiLCJwYXNzcGhyYXNlIiwiZW5jb2RlZCIsImVuY29kaW5nIiwiRXJyb3IiLCJBcnJheSIsImlzQXJyYXkiLCJ0eXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/json/decrypt.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/json/decryptData.js":
/*!****************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/json/decryptData.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jsonDecryptData: function() { return /* binding */ jsonDecryptData; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/string/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/fixLength.js\");\n/* harmony import */ var _nacl_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../nacl/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/nacl/decrypt.js\");\n/* harmony import */ var _scrypt_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scrypt/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/scrypt/fromU8a.js\");\n/* harmony import */ var _scrypt_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scrypt/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/scrypt/encode.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/json/constants.js\");\n\n\n\n\nfunction jsonDecryptData(encrypted, passphrase) {\n    let encType = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : _constants_js__WEBPACK_IMPORTED_MODULE_0__.ENCODING;\n    if (!encrypted) {\n        throw new Error(\"No encrypted data available to decode\");\n    } else if (encType.includes(\"xsalsa20-poly1305\") && !passphrase) {\n        throw new Error(\"Password required to decode encrypted data\");\n    }\n    let encoded = encrypted;\n    if (passphrase) {\n        let password;\n        if (encType.includes(\"scrypt\")) {\n            const { params, salt } = (0,_scrypt_index_js__WEBPACK_IMPORTED_MODULE_1__.scryptFromU8a)(encrypted);\n            password = (0,_scrypt_index_js__WEBPACK_IMPORTED_MODULE_2__.scryptEncode)(passphrase, salt, params).password;\n            encrypted = encrypted.subarray(_constants_js__WEBPACK_IMPORTED_MODULE_0__.SCRYPT_LENGTH);\n        } else {\n            password = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.stringToU8a)(passphrase);\n        }\n        encoded = (0,_nacl_index_js__WEBPACK_IMPORTED_MODULE_4__.naclDecrypt)(encrypted.subarray(_constants_js__WEBPACK_IMPORTED_MODULE_0__.NONCE_LENGTH), encrypted.subarray(0, _constants_js__WEBPACK_IMPORTED_MODULE_0__.NONCE_LENGTH), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.u8aFixLength)(password, 256, true));\n    }\n    if (!encoded) {\n        throw new Error(\"Unable to decode using the supplied passphrase\");\n    }\n    return encoded;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vanNvbi9kZWNyeXB0RGF0YS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTJEO0FBQ1o7QUFDa0I7QUFDTTtBQUNoRSxTQUFTUSxnQkFBZ0JDLFNBQVMsRUFBRUMsVUFBVTtRQUFFQyxVQUFBQSxpRUFBVU4sbURBQVFBO0lBQ3JFLElBQUksQ0FBQ0ksV0FBVztRQUNaLE1BQU0sSUFBSUcsTUFBTTtJQUNwQixPQUNLLElBQUlELFFBQVFFLFFBQVEsQ0FBQyx3QkFBd0IsQ0FBQ0gsWUFBWTtRQUMzRCxNQUFNLElBQUlFLE1BQU07SUFDcEI7SUFDQSxJQUFJRSxVQUFVTDtJQUNkLElBQUlDLFlBQVk7UUFDWixJQUFJSztRQUNKLElBQUlKLFFBQVFFLFFBQVEsQ0FBQyxXQUFXO1lBQzVCLE1BQU0sRUFBRUcsTUFBTSxFQUFFQyxJQUFJLEVBQUUsR0FBR2IsK0RBQWFBLENBQUNLO1lBQ3ZDTSxXQUFXWiw4REFBWUEsQ0FBQ08sWUFBWU8sTUFBTUQsUUFBUUQsUUFBUTtZQUMxRE4sWUFBWUEsVUFBVVMsUUFBUSxDQUFDWCx3REFBYUE7UUFDaEQsT0FDSztZQUNEUSxXQUFXZiwyREFBV0EsQ0FBQ1U7UUFDM0I7UUFDQUksVUFBVVosMkRBQVdBLENBQUNPLFVBQVVTLFFBQVEsQ0FBQ1osdURBQVlBLEdBQUdHLFVBQVVTLFFBQVEsQ0FBQyxHQUFHWix1REFBWUEsR0FBR0wsNERBQVlBLENBQUNjLFVBQVUsS0FBSztJQUM3SDtJQUNBLElBQUksQ0FBQ0QsU0FBUztRQUNWLE1BQU0sSUFBSUYsTUFBTTtJQUNwQjtJQUNBLE9BQU9FO0FBQ1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9qc29uL2RlY3J5cHREYXRhLmpzP2YxODkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3RyaW5nVG9VOGEsIHU4YUZpeExlbmd0aCB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbmltcG9ydCB7IG5hY2xEZWNyeXB0IH0gZnJvbSAnLi4vbmFjbC9pbmRleC5qcyc7XG5pbXBvcnQgeyBzY3J5cHRFbmNvZGUsIHNjcnlwdEZyb21VOGEgfSBmcm9tICcuLi9zY3J5cHQvaW5kZXguanMnO1xuaW1wb3J0IHsgRU5DT0RJTkcsIE5PTkNFX0xFTkdUSCwgU0NSWVBUX0xFTkdUSCB9IGZyb20gJy4vY29uc3RhbnRzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBqc29uRGVjcnlwdERhdGEoZW5jcnlwdGVkLCBwYXNzcGhyYXNlLCBlbmNUeXBlID0gRU5DT0RJTkcpIHtcbiAgICBpZiAoIWVuY3J5cHRlZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIGVuY3J5cHRlZCBkYXRhIGF2YWlsYWJsZSB0byBkZWNvZGUnKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoZW5jVHlwZS5pbmNsdWRlcygneHNhbHNhMjAtcG9seTEzMDUnKSAmJiAhcGFzc3BocmFzZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Bhc3N3b3JkIHJlcXVpcmVkIHRvIGRlY29kZSBlbmNyeXB0ZWQgZGF0YScpO1xuICAgIH1cbiAgICBsZXQgZW5jb2RlZCA9IGVuY3J5cHRlZDtcbiAgICBpZiAocGFzc3BocmFzZSkge1xuICAgICAgICBsZXQgcGFzc3dvcmQ7XG4gICAgICAgIGlmIChlbmNUeXBlLmluY2x1ZGVzKCdzY3J5cHQnKSkge1xuICAgICAgICAgICAgY29uc3QgeyBwYXJhbXMsIHNhbHQgfSA9IHNjcnlwdEZyb21VOGEoZW5jcnlwdGVkKTtcbiAgICAgICAgICAgIHBhc3N3b3JkID0gc2NyeXB0RW5jb2RlKHBhc3NwaHJhc2UsIHNhbHQsIHBhcmFtcykucGFzc3dvcmQ7XG4gICAgICAgICAgICBlbmNyeXB0ZWQgPSBlbmNyeXB0ZWQuc3ViYXJyYXkoU0NSWVBUX0xFTkdUSCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBwYXNzd29yZCA9IHN0cmluZ1RvVThhKHBhc3NwaHJhc2UpO1xuICAgICAgICB9XG4gICAgICAgIGVuY29kZWQgPSBuYWNsRGVjcnlwdChlbmNyeXB0ZWQuc3ViYXJyYXkoTk9OQ0VfTEVOR1RIKSwgZW5jcnlwdGVkLnN1YmFycmF5KDAsIE5PTkNFX0xFTkdUSCksIHU4YUZpeExlbmd0aChwYXNzd29yZCwgMjU2LCB0cnVlKSk7XG4gICAgfVxuICAgIGlmICghZW5jb2RlZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VuYWJsZSB0byBkZWNvZGUgdXNpbmcgdGhlIHN1cHBsaWVkIHBhc3NwaHJhc2UnKTtcbiAgICB9XG4gICAgcmV0dXJuIGVuY29kZWQ7XG59XG4iXSwibmFtZXMiOlsic3RyaW5nVG9VOGEiLCJ1OGFGaXhMZW5ndGgiLCJuYWNsRGVjcnlwdCIsInNjcnlwdEVuY29kZSIsInNjcnlwdEZyb21VOGEiLCJFTkNPRElORyIsIk5PTkNFX0xFTkdUSCIsIlNDUllQVF9MRU5HVEgiLCJqc29uRGVjcnlwdERhdGEiLCJlbmNyeXB0ZWQiLCJwYXNzcGhyYXNlIiwiZW5jVHlwZSIsIkVycm9yIiwiaW5jbHVkZXMiLCJlbmNvZGVkIiwicGFzc3dvcmQiLCJwYXJhbXMiLCJzYWx0Iiwic3ViYXJyYXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/json/decryptData.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/json/encrypt.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/json/encrypt.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jsonEncrypt: function() { return /* binding */ jsonEncrypt; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/concat.js\");\n/* harmony import */ var _nacl_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../nacl/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/nacl/encrypt.js\");\n/* harmony import */ var _scrypt_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scrypt/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/scrypt/encode.js\");\n/* harmony import */ var _scrypt_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../scrypt/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/scrypt/toU8a.js\");\n/* harmony import */ var _encryptFormat_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./encryptFormat.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/json/encryptFormat.js\");\n\n\n\n\nfunction jsonEncrypt(data, contentType, passphrase) {\n    let isEncrypted = false;\n    let encoded = data;\n    if (passphrase) {\n        const { params, password, salt } = (0,_scrypt_index_js__WEBPACK_IMPORTED_MODULE_0__.scryptEncode)(passphrase);\n        const { encrypted, nonce } = (0,_nacl_index_js__WEBPACK_IMPORTED_MODULE_1__.naclEncrypt)(encoded, password.subarray(0, 32));\n        isEncrypted = true;\n        encoded = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aConcat)((0,_scrypt_index_js__WEBPACK_IMPORTED_MODULE_3__.scryptToU8a)(salt, params), nonce, encrypted);\n    }\n    return (0,_encryptFormat_js__WEBPACK_IMPORTED_MODULE_4__.jsonEncryptFormat)(encoded, contentType, isEncrypted);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vanNvbi9lbmNyeXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEyQztBQUNJO0FBQ2dCO0FBQ1I7QUFDaEQsU0FBU0ssWUFBWUMsSUFBSSxFQUFFQyxXQUFXLEVBQUVDLFVBQVU7SUFDckQsSUFBSUMsY0FBYztJQUNsQixJQUFJQyxVQUFVSjtJQUNkLElBQUlFLFlBQVk7UUFDWixNQUFNLEVBQUVHLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxJQUFJLEVBQUUsR0FBR1gsOERBQVlBLENBQUNNO1FBQ2hELE1BQU0sRUFBRU0sU0FBUyxFQUFFQyxLQUFLLEVBQUUsR0FBR2QsMkRBQVdBLENBQUNTLFNBQVNFLFNBQVNJLFFBQVEsQ0FBQyxHQUFHO1FBQ3ZFUCxjQUFjO1FBQ2RDLFVBQVVWLHlEQUFTQSxDQUFDRyw2REFBV0EsQ0FBQ1UsTUFBTUYsU0FBU0ksT0FBT0Q7SUFDMUQ7SUFDQSxPQUFPVixvRUFBaUJBLENBQUNNLFNBQVNILGFBQWFFO0FBQ25EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vanNvbi9lbmNyeXB0LmpzP2YwNzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdThhQ29uY2F0IH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgbmFjbEVuY3J5cHQgfSBmcm9tICcuLi9uYWNsL2luZGV4LmpzJztcbmltcG9ydCB7IHNjcnlwdEVuY29kZSwgc2NyeXB0VG9VOGEgfSBmcm9tICcuLi9zY3J5cHQvaW5kZXguanMnO1xuaW1wb3J0IHsganNvbkVuY3J5cHRGb3JtYXQgfSBmcm9tICcuL2VuY3J5cHRGb3JtYXQuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGpzb25FbmNyeXB0KGRhdGEsIGNvbnRlbnRUeXBlLCBwYXNzcGhyYXNlKSB7XG4gICAgbGV0IGlzRW5jcnlwdGVkID0gZmFsc2U7XG4gICAgbGV0IGVuY29kZWQgPSBkYXRhO1xuICAgIGlmIChwYXNzcGhyYXNlKSB7XG4gICAgICAgIGNvbnN0IHsgcGFyYW1zLCBwYXNzd29yZCwgc2FsdCB9ID0gc2NyeXB0RW5jb2RlKHBhc3NwaHJhc2UpO1xuICAgICAgICBjb25zdCB7IGVuY3J5cHRlZCwgbm9uY2UgfSA9IG5hY2xFbmNyeXB0KGVuY29kZWQsIHBhc3N3b3JkLnN1YmFycmF5KDAsIDMyKSk7XG4gICAgICAgIGlzRW5jcnlwdGVkID0gdHJ1ZTtcbiAgICAgICAgZW5jb2RlZCA9IHU4YUNvbmNhdChzY3J5cHRUb1U4YShzYWx0LCBwYXJhbXMpLCBub25jZSwgZW5jcnlwdGVkKTtcbiAgICB9XG4gICAgcmV0dXJuIGpzb25FbmNyeXB0Rm9ybWF0KGVuY29kZWQsIGNvbnRlbnRUeXBlLCBpc0VuY3J5cHRlZCk7XG59XG4iXSwibmFtZXMiOlsidThhQ29uY2F0IiwibmFjbEVuY3J5cHQiLCJzY3J5cHRFbmNvZGUiLCJzY3J5cHRUb1U4YSIsImpzb25FbmNyeXB0Rm9ybWF0IiwianNvbkVuY3J5cHQiLCJkYXRhIiwiY29udGVudFR5cGUiLCJwYXNzcGhyYXNlIiwiaXNFbmNyeXB0ZWQiLCJlbmNvZGVkIiwicGFyYW1zIiwicGFzc3dvcmQiLCJzYWx0IiwiZW5jcnlwdGVkIiwibm9uY2UiLCJzdWJhcnJheSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/json/encrypt.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/json/encryptFormat.js":
/*!******************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/json/encryptFormat.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jsonEncryptFormat: function() { return /* binding */ jsonEncryptFormat; }\n/* harmony export */ });\n/* harmony import */ var _base64_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base64/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/base64/bs64.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/json/constants.js\");\n\n\nfunction jsonEncryptFormat(encoded, contentType, isEncrypted) {\n    return {\n        encoded: (0,_base64_index_js__WEBPACK_IMPORTED_MODULE_0__.base64Encode)(encoded),\n        encoding: {\n            content: contentType,\n            type: isEncrypted ? _constants_js__WEBPACK_IMPORTED_MODULE_1__.ENCODING : _constants_js__WEBPACK_IMPORTED_MODULE_1__.ENCODING_NONE,\n            version: _constants_js__WEBPACK_IMPORTED_MODULE_1__.ENCODING_VERSION\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vanNvbi9lbmNyeXB0Rm9ybWF0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrRDtBQUN5QjtBQUNwRSxTQUFTSSxrQkFBa0JDLE9BQU8sRUFBRUMsV0FBVyxFQUFFQyxXQUFXO0lBQy9ELE9BQU87UUFDSEYsU0FBU0wsOERBQVlBLENBQUNLO1FBQ3RCRyxVQUFVO1lBQ05DLFNBQVNIO1lBQ1RJLE1BQU1ILGNBQ0FOLG1EQUFRQSxHQUNSQyx3REFBYUE7WUFDbkJTLFNBQVNSLDJEQUFnQkE7UUFDN0I7SUFDSjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vanNvbi9lbmNyeXB0Rm9ybWF0LmpzP2I4OGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZTY0RW5jb2RlIH0gZnJvbSAnLi4vYmFzZTY0L2luZGV4LmpzJztcbmltcG9ydCB7IEVOQ09ESU5HLCBFTkNPRElOR19OT05FLCBFTkNPRElOR19WRVJTSU9OIH0gZnJvbSAnLi9jb25zdGFudHMuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGpzb25FbmNyeXB0Rm9ybWF0KGVuY29kZWQsIGNvbnRlbnRUeXBlLCBpc0VuY3J5cHRlZCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGVuY29kZWQ6IGJhc2U2NEVuY29kZShlbmNvZGVkKSxcbiAgICAgICAgZW5jb2Rpbmc6IHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IGNvbnRlbnRUeXBlLFxuICAgICAgICAgICAgdHlwZTogaXNFbmNyeXB0ZWRcbiAgICAgICAgICAgICAgICA/IEVOQ09ESU5HXG4gICAgICAgICAgICAgICAgOiBFTkNPRElOR19OT05FLFxuICAgICAgICAgICAgdmVyc2lvbjogRU5DT0RJTkdfVkVSU0lPTlxuICAgICAgICB9XG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6WyJiYXNlNjRFbmNvZGUiLCJFTkNPRElORyIsIkVOQ09ESU5HX05PTkUiLCJFTkNPRElOR19WRVJTSU9OIiwianNvbkVuY3J5cHRGb3JtYXQiLCJlbmNvZGVkIiwiY29udGVudFR5cGUiLCJpc0VuY3J5cHRlZCIsImVuY29kaW5nIiwiY29udGVudCIsInR5cGUiLCJ2ZXJzaW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/json/encryptFormat.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/json/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/json/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jsonDecrypt: function() { return /* reexport safe */ _decrypt_js__WEBPACK_IMPORTED_MODULE_0__.jsonDecrypt; },\n/* harmony export */   jsonDecryptData: function() { return /* reexport safe */ _decryptData_js__WEBPACK_IMPORTED_MODULE_1__.jsonDecryptData; },\n/* harmony export */   jsonEncrypt: function() { return /* reexport safe */ _encrypt_js__WEBPACK_IMPORTED_MODULE_2__.jsonEncrypt; },\n/* harmony export */   jsonEncryptFormat: function() { return /* reexport safe */ _encryptFormat_js__WEBPACK_IMPORTED_MODULE_3__.jsonEncryptFormat; }\n/* harmony export */ });\n/* harmony import */ var _decrypt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decrypt.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/json/decrypt.js\");\n/* harmony import */ var _decryptData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decryptData.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/json/decryptData.js\");\n/* harmony import */ var _encrypt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./encrypt.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/json/encrypt.js\");\n/* harmony import */ var _encryptFormat_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./encryptFormat.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/json/encryptFormat.js\");\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vanNvbi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUEyQztBQUNRO0FBQ1I7QUFDWSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2pzb24vaW5kZXguanM/OGU1MyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBqc29uRGVjcnlwdCB9IGZyb20gJy4vZGVjcnlwdC5qcyc7XG5leHBvcnQgeyBqc29uRGVjcnlwdERhdGEgfSBmcm9tICcuL2RlY3J5cHREYXRhLmpzJztcbmV4cG9ydCB7IGpzb25FbmNyeXB0IH0gZnJvbSAnLi9lbmNyeXB0LmpzJztcbmV4cG9ydCB7IGpzb25FbmNyeXB0Rm9ybWF0IH0gZnJvbSAnLi9lbmNyeXB0Rm9ybWF0LmpzJztcbiJdLCJuYW1lcyI6WyJqc29uRGVjcnlwdCIsImpzb25EZWNyeXB0RGF0YSIsImpzb25FbmNyeXB0IiwianNvbkVuY3J5cHRGb3JtYXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/json/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/keccak/asU8a.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/keccak/asU8a.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   keccak256AsU8a: function() { return /* binding */ keccak256AsU8a; },\n/* harmony export */   keccak512AsU8a: function() { return /* binding */ keccak512AsU8a; },\n/* harmony export */   keccakAsHex: function() { return /* binding */ keccakAsHex; },\n/* harmony export */   keccakAsU8a: function() { return /* binding */ keccakAsU8a; }\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/hashes/sha3 */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/sha3.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/helpers.js\");\n\n\n\n/**\n * @name keccakAsU8a\n * @summary Creates a keccak Uint8Array from the input.\n * @description\n * From either a `string` or a `Buffer` input, create the keccak and return the result as a `Uint8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { keccakAsU8a } from '@polkadot/util-crypto';\n *\n * keccakAsU8a('123'); // => Uint8Array\n * ```\n */ const keccakAsU8a = /*#__PURE__*/ (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.createDualHasher)({\n    256: _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.keccak256,\n    512: _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.keccak512\n}, {\n    256: _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_2__.keccak_256,\n    512: _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_2__.keccak_512\n});\n/**\n * @name keccak256AsU8a\n * @description Creates a keccak256 Uint8Array from the input.\n */ const keccak256AsU8a = /*#__PURE__*/ (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.createBitHasher)(256, keccakAsU8a);\n/**\n * @name keccak512AsU8a\n * @description Creates a keccak512 Uint8Array from the input.\n */ const keccak512AsU8a = /*#__PURE__*/ (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.createBitHasher)(512, keccakAsU8a);\n/**\n * @name keccakAsHex\n * @description Creates a keccak hex string from the input.\n */ const keccakAsHex = /*#__PURE__*/ (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.createAsHex)(keccakAsU8a);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8va2VjY2FrL2FzVThhLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBMEY7QUFDN0I7QUFDa0I7QUFDL0U7Ozs7Ozs7Ozs7Ozs7Q0FhQyxHQUNNLE1BQU1TLGNBQWMsV0FBVyxHQUFHRCw2REFBZ0JBLENBQUM7SUFBRSxLQUFLSiw0REFBU0E7SUFBRSxLQUFLQyw0REFBU0E7QUFBQyxHQUFHO0lBQUUsS0FBS0osMERBQVdBO0lBQUUsS0FBS0UsMERBQVdBO0FBQUMsR0FBRztBQUN0STs7O0NBR0MsR0FDTSxNQUFNTyxpQkFBaUIsV0FBVyxHQUFHSCw0REFBZUEsQ0FBQyxLQUFLRSxhQUFhO0FBQzlFOzs7Q0FHQyxHQUNNLE1BQU1FLGlCQUFpQixXQUFXLEdBQUdKLDREQUFlQSxDQUFDLEtBQUtFLGFBQWE7QUFDOUU7OztDQUdDLEdBQ00sTUFBTUcsY0FBYyxXQUFXLEdBQUdOLHdEQUFXQSxDQUFDRyxhQUFhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8va2VjY2FrL2FzVThhLmpzP2M0NDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsga2VjY2FrXzI1NiBhcyBrZWNjYWsyNTZKcywga2VjY2FrXzUxMiBhcyBrZWNjYWs1MTJKcyB9IGZyb20gJ0Bub2JsZS9oYXNoZXMvc2hhMyc7XG5pbXBvcnQgeyBrZWNjYWsyNTYsIGtlY2NhazUxMiB9IGZyb20gJ0Bwb2xrYWRvdC93YXNtLWNyeXB0byc7XG5pbXBvcnQgeyBjcmVhdGVBc0hleCwgY3JlYXRlQml0SGFzaGVyLCBjcmVhdGVEdWFsSGFzaGVyIH0gZnJvbSAnLi4vaGVscGVycy5qcyc7XG4vKipcbiAqIEBuYW1lIGtlY2Nha0FzVThhXG4gKiBAc3VtbWFyeSBDcmVhdGVzIGEga2VjY2FrIFVpbnQ4QXJyYXkgZnJvbSB0aGUgaW5wdXQuXG4gKiBAZGVzY3JpcHRpb25cbiAqIEZyb20gZWl0aGVyIGEgYHN0cmluZ2Agb3IgYSBgQnVmZmVyYCBpbnB1dCwgY3JlYXRlIHRoZSBrZWNjYWsgYW5kIHJldHVybiB0aGUgcmVzdWx0IGFzIGEgYFVpbnQ4QXJyYXlgLlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyBrZWNjYWtBc1U4YSB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsLWNyeXB0byc7XG4gKlxuICoga2VjY2FrQXNVOGEoJzEyMycpOyAvLyA9PiBVaW50OEFycmF5XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNvbnN0IGtlY2Nha0FzVThhID0gLyojX19QVVJFX18qLyBjcmVhdGVEdWFsSGFzaGVyKHsgMjU2OiBrZWNjYWsyNTYsIDUxMjoga2VjY2FrNTEyIH0sIHsgMjU2OiBrZWNjYWsyNTZKcywgNTEyOiBrZWNjYWs1MTJKcyB9KTtcbi8qKlxuICogQG5hbWUga2VjY2FrMjU2QXNVOGFcbiAqIEBkZXNjcmlwdGlvbiBDcmVhdGVzIGEga2VjY2FrMjU2IFVpbnQ4QXJyYXkgZnJvbSB0aGUgaW5wdXQuXG4gKi9cbmV4cG9ydCBjb25zdCBrZWNjYWsyNTZBc1U4YSA9IC8qI19fUFVSRV9fKi8gY3JlYXRlQml0SGFzaGVyKDI1Niwga2VjY2FrQXNVOGEpO1xuLyoqXG4gKiBAbmFtZSBrZWNjYWs1MTJBc1U4YVxuICogQGRlc2NyaXB0aW9uIENyZWF0ZXMgYSBrZWNjYWs1MTIgVWludDhBcnJheSBmcm9tIHRoZSBpbnB1dC5cbiAqL1xuZXhwb3J0IGNvbnN0IGtlY2NhazUxMkFzVThhID0gLyojX19QVVJFX18qLyBjcmVhdGVCaXRIYXNoZXIoNTEyLCBrZWNjYWtBc1U4YSk7XG4vKipcbiAqIEBuYW1lIGtlY2Nha0FzSGV4XG4gKiBAZGVzY3JpcHRpb24gQ3JlYXRlcyBhIGtlY2NhayBoZXggc3RyaW5nIGZyb20gdGhlIGlucHV0LlxuICovXG5leHBvcnQgY29uc3Qga2VjY2FrQXNIZXggPSAvKiNfX1BVUkVfXyovIGNyZWF0ZUFzSGV4KGtlY2Nha0FzVThhKTtcbiJdLCJuYW1lcyI6WyJrZWNjYWtfMjU2Iiwia2VjY2FrMjU2SnMiLCJrZWNjYWtfNTEyIiwia2VjY2FrNTEySnMiLCJrZWNjYWsyNTYiLCJrZWNjYWs1MTIiLCJjcmVhdGVBc0hleCIsImNyZWF0ZUJpdEhhc2hlciIsImNyZWF0ZUR1YWxIYXNoZXIiLCJrZWNjYWtBc1U4YSIsImtlY2NhazI1NkFzVThhIiwia2VjY2FrNTEyQXNVOGEiLCJrZWNjYWtBc0hleCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/keccak/asU8a.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/keccak/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/keccak/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   keccak256AsU8a: function() { return /* reexport safe */ _asU8a_js__WEBPACK_IMPORTED_MODULE_0__.keccak256AsU8a; },\n/* harmony export */   keccak512AsU8a: function() { return /* reexport safe */ _asU8a_js__WEBPACK_IMPORTED_MODULE_0__.keccak512AsU8a; },\n/* harmony export */   keccakAsHex: function() { return /* reexport safe */ _asU8a_js__WEBPACK_IMPORTED_MODULE_0__.keccakAsHex; },\n/* harmony export */   keccakAsU8a: function() { return /* reexport safe */ _asU8a_js__WEBPACK_IMPORTED_MODULE_0__.keccakAsU8a; }\n/* harmony export */ });\n/* harmony import */ var _asU8a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./asU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/keccak/asU8a.js\");\n/**\n * @summary Create Keccak256/512 values as hex & Uint8Array output\n */ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8va2VjY2FrL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0NBRUMsR0FDcUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9rZWNjYWsvaW5kZXguanM/MGE3NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBzdW1tYXJ5IENyZWF0ZSBLZWNjYWsyNTYvNTEyIHZhbHVlcyBhcyBoZXggJiBVaW50OEFycmF5IG91dHB1dFxuICovXG5leHBvcnQgeyBrZWNjYWsyNTZBc1U4YSwga2VjY2FrNTEyQXNVOGEsIGtlY2Nha0FzSGV4LCBrZWNjYWtBc1U4YSB9IGZyb20gJy4vYXNVOGEuanMnO1xuIl0sIm5hbWVzIjpbImtlY2NhazI1NkFzVThhIiwia2VjY2FrNTEyQXNVOGEiLCJrZWNjYWtBc0hleCIsImtlY2Nha0FzVThhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/keccak/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/DeriveJunction.js":
/*!******************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/key/DeriveJunction.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeriveJunction: function() { return /* binding */ DeriveJunction; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/number.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/bn.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/bigInt.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/bn/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/hex.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/hex/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/string.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/compact/addLength.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/string/toU8a.js\");\n/* harmony import */ var _blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../blake2/asU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/blake2/asU8a.js\");\n/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../bn.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/bn.js\");\n\n\n\nconst RE_NUMBER = /^\\d+$/;\nconst JUNCTION_ID_LEN = 32;\nclass DeriveJunction {\n    static from(value) {\n        const result = new DeriveJunction();\n        const [code, isHard] = value.startsWith(\"/\") ? [\n            value.substring(1),\n            true\n        ] : [\n            value,\n            false\n        ];\n        result.soft(RE_NUMBER.test(code) ? new _polkadot_util__WEBPACK_IMPORTED_MODULE_0__(code, 10) : code);\n        return isHard ? result.harden() : result;\n    }\n    get chainCode() {\n        return this.__internal__chainCode;\n    }\n    get isHard() {\n        return this.__internal__isHard;\n    }\n    get isSoft() {\n        return !this.__internal__isHard;\n    }\n    hard(value) {\n        return this.soft(value).harden();\n    }\n    harden() {\n        this.__internal__isHard = true;\n        return this;\n    }\n    soft(value) {\n        if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isNumber)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isBn)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isBigInt)(value)) {\n            return this.soft((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.bnToU8a)(value, _bn_js__WEBPACK_IMPORTED_MODULE_5__.BN_LE_256_OPTS));\n        } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.isHex)(value)) {\n            return this.soft((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.hexToU8a)(value));\n        } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.isString)(value)) {\n            return this.soft((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.compactAddLength)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.stringToU8a)(value)));\n        } else if (value.length > JUNCTION_ID_LEN) {\n            return this.soft((0,_blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_11__.blake2AsU8a)(value));\n        }\n        this.__internal__chainCode.fill(0);\n        this.__internal__chainCode.set(value, 0);\n        return this;\n    }\n    soften() {\n        this.__internal__isHard = false;\n        return this;\n    }\n    constructor(){\n        this.__internal__chainCode = new Uint8Array(32);\n        this.__internal__isHard = false;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8va2V5L0Rlcml2ZUp1bmN0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBaUk7QUFDaEY7QUFDUDtBQUMxQyxNQUFNWSxZQUFZO0FBQ2xCLE1BQU1DLGtCQUFrQjtBQUNqQixNQUFNQztJQUdULE9BQU9DLEtBQUtDLEtBQUssRUFBRTtRQUNmLE1BQU1DLFNBQVMsSUFBSUg7UUFDbkIsTUFBTSxDQUFDSSxNQUFNQyxPQUFPLEdBQUdILE1BQU1JLFVBQVUsQ0FBQyxPQUNsQztZQUFDSixNQUFNSyxTQUFTLENBQUM7WUFBSTtTQUFLLEdBQzFCO1lBQUNMO1lBQU87U0FBTTtRQUNwQkMsT0FBT0ssSUFBSSxDQUFDVixVQUFVVyxJQUFJLENBQUNMLFFBQ3JCLElBQUlsQiwyQ0FBRUEsQ0FBQ2tCLE1BQU0sTUFDYkE7UUFDTixPQUFPQyxTQUNERixPQUFPTyxNQUFNLEtBQ2JQO0lBQ1Y7SUFDQSxJQUFJUSxZQUFZO1FBQ1osT0FBTyxJQUFJLENBQUNDLHFCQUFxQjtJQUNyQztJQUNBLElBQUlQLFNBQVM7UUFDVCxPQUFPLElBQUksQ0FBQ1Esa0JBQWtCO0lBQ2xDO0lBQ0EsSUFBSUMsU0FBUztRQUNULE9BQU8sQ0FBQyxJQUFJLENBQUNELGtCQUFrQjtJQUNuQztJQUNBRSxLQUFLYixLQUFLLEVBQUU7UUFDUixPQUFPLElBQUksQ0FBQ00sSUFBSSxDQUFDTixPQUFPUSxNQUFNO0lBQ2xDO0lBQ0FBLFNBQVM7UUFDTCxJQUFJLENBQUNHLGtCQUFrQixHQUFHO1FBQzFCLE9BQU8sSUFBSTtJQUNmO0lBQ0FMLEtBQUtOLEtBQUssRUFBRTtRQUNSLElBQUlULHdEQUFRQSxDQUFDUyxVQUFVWCxvREFBSUEsQ0FBQ1csVUFBVVosd0RBQVFBLENBQUNZLFFBQVE7WUFDbkQsT0FBTyxJQUFJLENBQUNNLElBQUksQ0FBQ3JCLHVEQUFPQSxDQUFDZSxPQUFPTCxrREFBY0E7UUFDbEQsT0FDSyxJQUFJTCxxREFBS0EsQ0FBQ1UsUUFBUTtZQUNuQixPQUFPLElBQUksQ0FBQ00sSUFBSSxDQUFDbkIsd0RBQVFBLENBQUNhO1FBQzlCLE9BQ0ssSUFBSVIsd0RBQVFBLENBQUNRLFFBQVE7WUFDdEIsT0FBTyxJQUFJLENBQUNNLElBQUksQ0FBQ3BCLGdFQUFnQkEsQ0FBQ08sNERBQVdBLENBQUNPO1FBQ2xELE9BQ0ssSUFBSUEsTUFBTWMsTUFBTSxHQUFHakIsaUJBQWlCO1lBQ3JDLE9BQU8sSUFBSSxDQUFDUyxJQUFJLENBQUNaLDhEQUFXQSxDQUFDTTtRQUNqQztRQUNBLElBQUksQ0FBQ1UscUJBQXFCLENBQUNLLElBQUksQ0FBQztRQUNoQyxJQUFJLENBQUNMLHFCQUFxQixDQUFDTSxHQUFHLENBQUNoQixPQUFPO1FBQ3RDLE9BQU8sSUFBSTtJQUNmO0lBQ0FpQixTQUFTO1FBQ0wsSUFBSSxDQUFDTixrQkFBa0IsR0FBRztRQUMxQixPQUFPLElBQUk7SUFDZjs7YUFsREFELHdCQUF3QixJQUFJUSxXQUFXO2FBQ3ZDUCxxQkFBcUI7O0FBa0R6QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2tleS9EZXJpdmVKdW5jdGlvbi5qcz82Mjk1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJOLCBiblRvVThhLCBjb21wYWN0QWRkTGVuZ3RoLCBoZXhUb1U4YSwgaXNCaWdJbnQsIGlzQm4sIGlzSGV4LCBpc051bWJlciwgaXNTdHJpbmcsIHN0cmluZ1RvVThhIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgYmxha2UyQXNVOGEgfSBmcm9tICcuLi9ibGFrZTIvYXNVOGEuanMnO1xuaW1wb3J0IHsgQk5fTEVfMjU2X09QVFMgfSBmcm9tICcuLi9ibi5qcyc7XG5jb25zdCBSRV9OVU1CRVIgPSAvXlxcZCskLztcbmNvbnN0IEpVTkNUSU9OX0lEX0xFTiA9IDMyO1xuZXhwb3J0IGNsYXNzIERlcml2ZUp1bmN0aW9uIHtcbiAgICBfX2ludGVybmFsX19jaGFpbkNvZGUgPSBuZXcgVWludDhBcnJheSgzMik7XG4gICAgX19pbnRlcm5hbF9faXNIYXJkID0gZmFsc2U7XG4gICAgc3RhdGljIGZyb20odmFsdWUpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gbmV3IERlcml2ZUp1bmN0aW9uKCk7XG4gICAgICAgIGNvbnN0IFtjb2RlLCBpc0hhcmRdID0gdmFsdWUuc3RhcnRzV2l0aCgnLycpXG4gICAgICAgICAgICA/IFt2YWx1ZS5zdWJzdHJpbmcoMSksIHRydWVdXG4gICAgICAgICAgICA6IFt2YWx1ZSwgZmFsc2VdO1xuICAgICAgICByZXN1bHQuc29mdChSRV9OVU1CRVIudGVzdChjb2RlKVxuICAgICAgICAgICAgPyBuZXcgQk4oY29kZSwgMTApXG4gICAgICAgICAgICA6IGNvZGUpO1xuICAgICAgICByZXR1cm4gaXNIYXJkXG4gICAgICAgICAgICA/IHJlc3VsdC5oYXJkZW4oKVxuICAgICAgICAgICAgOiByZXN1bHQ7XG4gICAgfVxuICAgIGdldCBjaGFpbkNvZGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9faW50ZXJuYWxfX2NoYWluQ29kZTtcbiAgICB9XG4gICAgZ2V0IGlzSGFyZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX19pbnRlcm5hbF9faXNIYXJkO1xuICAgIH1cbiAgICBnZXQgaXNTb2Z0KCkge1xuICAgICAgICByZXR1cm4gIXRoaXMuX19pbnRlcm5hbF9faXNIYXJkO1xuICAgIH1cbiAgICBoYXJkKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNvZnQodmFsdWUpLmhhcmRlbigpO1xuICAgIH1cbiAgICBoYXJkZW4oKSB7XG4gICAgICAgIHRoaXMuX19pbnRlcm5hbF9faXNIYXJkID0gdHJ1ZTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNvZnQodmFsdWUpIHtcbiAgICAgICAgaWYgKGlzTnVtYmVyKHZhbHVlKSB8fCBpc0JuKHZhbHVlKSB8fCBpc0JpZ0ludCh2YWx1ZSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnNvZnQoYm5Ub1U4YSh2YWx1ZSwgQk5fTEVfMjU2X09QVFMpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpc0hleCh2YWx1ZSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnNvZnQoaGV4VG9VOGEodmFsdWUpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpc1N0cmluZyh2YWx1ZSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnNvZnQoY29tcGFjdEFkZExlbmd0aChzdHJpbmdUb1U4YSh2YWx1ZSkpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh2YWx1ZS5sZW5ndGggPiBKVU5DVElPTl9JRF9MRU4pIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnNvZnQoYmxha2UyQXNVOGEodmFsdWUpKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9faW50ZXJuYWxfX2NoYWluQ29kZS5maWxsKDApO1xuICAgICAgICB0aGlzLl9faW50ZXJuYWxfX2NoYWluQ29kZS5zZXQodmFsdWUsIDApO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc29mdGVuKCkge1xuICAgICAgICB0aGlzLl9faW50ZXJuYWxfX2lzSGFyZCA9IGZhbHNlO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59XG4iXSwibmFtZXMiOlsiQk4iLCJiblRvVThhIiwiY29tcGFjdEFkZExlbmd0aCIsImhleFRvVThhIiwiaXNCaWdJbnQiLCJpc0JuIiwiaXNIZXgiLCJpc051bWJlciIsImlzU3RyaW5nIiwic3RyaW5nVG9VOGEiLCJibGFrZTJBc1U4YSIsIkJOX0xFXzI1Nl9PUFRTIiwiUkVfTlVNQkVSIiwiSlVOQ1RJT05fSURfTEVOIiwiRGVyaXZlSnVuY3Rpb24iLCJmcm9tIiwidmFsdWUiLCJyZXN1bHQiLCJjb2RlIiwiaXNIYXJkIiwic3RhcnRzV2l0aCIsInN1YnN0cmluZyIsInNvZnQiLCJ0ZXN0IiwiaGFyZGVuIiwiY2hhaW5Db2RlIiwiX19pbnRlcm5hbF9fY2hhaW5Db2RlIiwiX19pbnRlcm5hbF9faXNIYXJkIiwiaXNTb2Z0IiwiaGFyZCIsImxlbmd0aCIsImZpbGwiLCJzZXQiLCJzb2Z0ZW4iLCJVaW50OEFycmF5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/DeriveJunction.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/extractPath.js":
/*!***************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/key/extractPath.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   keyExtractPath: function() { return /* binding */ keyExtractPath; }\n/* harmony export */ });\n/* harmony import */ var _DeriveJunction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DeriveJunction.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/DeriveJunction.js\");\n\nconst RE_JUNCTION = /\\/(\\/?)([^/]+)/g;\n/**\n * @description Extract derivation junctions from the supplied path\n */ function keyExtractPath(derivePath) {\n    const parts = derivePath.match(RE_JUNCTION);\n    const path = [];\n    let constructed = \"\";\n    if (parts) {\n        constructed = parts.join(\"\");\n        for (const p of parts){\n            path.push(_DeriveJunction_js__WEBPACK_IMPORTED_MODULE_0__.DeriveJunction.from(p.substring(1)));\n        }\n    }\n    if (constructed !== derivePath) {\n        throw new Error('Re-constructed path \"'.concat(constructed, '\" does not match input'));\n    }\n    return {\n        parts,\n        path\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8va2V5L2V4dHJhY3RQYXRoLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFEO0FBQ3JELE1BQU1DLGNBQWM7QUFDcEI7O0NBRUMsR0FDTSxTQUFTQyxlQUFlQyxVQUFVO0lBQ3JDLE1BQU1DLFFBQVFELFdBQVdFLEtBQUssQ0FBQ0o7SUFDL0IsTUFBTUssT0FBTyxFQUFFO0lBQ2YsSUFBSUMsY0FBYztJQUNsQixJQUFJSCxPQUFPO1FBQ1BHLGNBQWNILE1BQU1JLElBQUksQ0FBQztRQUN6QixLQUFLLE1BQU1DLEtBQUtMLE1BQU87WUFDbkJFLEtBQUtJLElBQUksQ0FBQ1YsOERBQWNBLENBQUNXLElBQUksQ0FBQ0YsRUFBRUcsU0FBUyxDQUFDO1FBQzlDO0lBQ0o7SUFDQSxJQUFJTCxnQkFBZ0JKLFlBQVk7UUFDNUIsTUFBTSxJQUFJVSxNQUFNLHdCQUFvQyxPQUFaTixhQUFZO0lBQ3hEO0lBQ0EsT0FBTztRQUNISDtRQUNBRTtJQUNKO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9rZXkvZXh0cmFjdFBhdGguanM/ZjBkYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEZXJpdmVKdW5jdGlvbiB9IGZyb20gJy4vRGVyaXZlSnVuY3Rpb24uanMnO1xuY29uc3QgUkVfSlVOQ1RJT04gPSAvXFwvKFxcLz8pKFteL10rKS9nO1xuLyoqXG4gKiBAZGVzY3JpcHRpb24gRXh0cmFjdCBkZXJpdmF0aW9uIGp1bmN0aW9ucyBmcm9tIHRoZSBzdXBwbGllZCBwYXRoXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBrZXlFeHRyYWN0UGF0aChkZXJpdmVQYXRoKSB7XG4gICAgY29uc3QgcGFydHMgPSBkZXJpdmVQYXRoLm1hdGNoKFJFX0pVTkNUSU9OKTtcbiAgICBjb25zdCBwYXRoID0gW107XG4gICAgbGV0IGNvbnN0cnVjdGVkID0gJyc7XG4gICAgaWYgKHBhcnRzKSB7XG4gICAgICAgIGNvbnN0cnVjdGVkID0gcGFydHMuam9pbignJyk7XG4gICAgICAgIGZvciAoY29uc3QgcCBvZiBwYXJ0cykge1xuICAgICAgICAgICAgcGF0aC5wdXNoKERlcml2ZUp1bmN0aW9uLmZyb20ocC5zdWJzdHJpbmcoMSkpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoY29uc3RydWN0ZWQgIT09IGRlcml2ZVBhdGgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBSZS1jb25zdHJ1Y3RlZCBwYXRoIFwiJHtjb25zdHJ1Y3RlZH1cIiBkb2VzIG5vdCBtYXRjaCBpbnB1dGApO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBwYXJ0cyxcbiAgICAgICAgcGF0aFxuICAgIH07XG59XG4iXSwibmFtZXMiOlsiRGVyaXZlSnVuY3Rpb24iLCJSRV9KVU5DVElPTiIsImtleUV4dHJhY3RQYXRoIiwiZGVyaXZlUGF0aCIsInBhcnRzIiwibWF0Y2giLCJwYXRoIiwiY29uc3RydWN0ZWQiLCJqb2luIiwicCIsInB1c2giLCJmcm9tIiwic3Vic3RyaW5nIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/extractPath.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/extractSuri.js":
/*!***************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/key/extractSuri.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   keyExtractSuri: function() { return /* binding */ keyExtractSuri; }\n/* harmony export */ });\n/* harmony import */ var _extractPath_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./extractPath.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/extractPath.js\");\n\nconst RE_CAPTURE = RegExp(\"^((0x[a-fA-F0-9]+|[\\\\p{L}\\\\d]+(?: [\\\\p{L}\\\\d]+)*))((\\\\/\\\\/?[^/]+)*)(\\\\/\\\\/\\\\/(.*))?$\", \"u\");\n/**\n * @description Extracts the phrase, path and password from a SURI format for specifying secret keys `<secret>/<soft-key>//<hard-key>///<password>` (the `///password` may be omitted, and `/<soft-key>` and `//<hard-key>` maybe repeated and mixed).\n */ function keyExtractSuri(suri) {\n    // Normalize Unicode to NFC to avoid accent-related mismatches\n    const normalizedSuri = suri.normalize(\"NFC\");\n    // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\n    const matches = normalizedSuri.match(RE_CAPTURE);\n    if (matches === null) {\n        throw new Error(\"Unable to match provided value to a secret URI\");\n    }\n    const [, phrase, , derivePath, , , password] = matches;\n    const { path } = (0,_extractPath_js__WEBPACK_IMPORTED_MODULE_0__.keyExtractPath)(derivePath);\n    return {\n        derivePath,\n        password,\n        path,\n        phrase\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8va2V5L2V4dHJhY3RTdXJpLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtEO0FBQ2xELE1BQU1DLGFBQWE7QUFDbkI7O0NBRUMsR0FDTSxTQUFTQyxlQUFlQyxJQUFJO0lBQy9CLDhEQUE4RDtJQUM5RCxNQUFNQyxpQkFBaUJELEtBQUtFLFNBQVMsQ0FBQztJQUN0QyxpRUFBaUU7SUFDakUsTUFBTUMsVUFBVUYsZUFBZUcsS0FBSyxDQUFDTjtJQUNyQyxJQUFJSyxZQUFZLE1BQU07UUFDbEIsTUFBTSxJQUFJRSxNQUFNO0lBQ3BCO0lBQ0EsTUFBTSxHQUFHQyxVQUFVQyxnQkFBZ0JDLFNBQVMsR0FBR0w7SUFDL0MsTUFBTSxFQUFFTSxJQUFJLEVBQUUsR0FBR1osK0RBQWNBLENBQUNVO0lBQ2hDLE9BQU87UUFDSEE7UUFDQUM7UUFDQUM7UUFDQUg7SUFDSjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8va2V5L2V4dHJhY3RTdXJpLmpzPzljMWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsga2V5RXh0cmFjdFBhdGggfSBmcm9tICcuL2V4dHJhY3RQYXRoLmpzJztcbmNvbnN0IFJFX0NBUFRVUkUgPSAvXigoMHhbYS1mQS1GMC05XSt8W1xccHtMfVxcZF0rKD86IFtcXHB7TH1cXGRdKykqKSkoKFxcL1xcLz9bXi9dKykqKShcXC9cXC9cXC8oLiopKT8kL3U7XG4vKipcbiAqIEBkZXNjcmlwdGlvbiBFeHRyYWN0cyB0aGUgcGhyYXNlLCBwYXRoIGFuZCBwYXNzd29yZCBmcm9tIGEgU1VSSSBmb3JtYXQgZm9yIHNwZWNpZnlpbmcgc2VjcmV0IGtleXMgYDxzZWNyZXQ+Lzxzb2Z0LWtleT4vLzxoYXJkLWtleT4vLy88cGFzc3dvcmQ+YCAodGhlIGAvLy9wYXNzd29yZGAgbWF5IGJlIG9taXR0ZWQsIGFuZCBgLzxzb2Z0LWtleT5gIGFuZCBgLy88aGFyZC1rZXk+YCBtYXliZSByZXBlYXRlZCBhbmQgbWl4ZWQpLlxuICovXG5leHBvcnQgZnVuY3Rpb24ga2V5RXh0cmFjdFN1cmkoc3VyaSkge1xuICAgIC8vIE5vcm1hbGl6ZSBVbmljb2RlIHRvIE5GQyB0byBhdm9pZCBhY2NlbnQtcmVsYXRlZCBtaXNtYXRjaGVzXG4gICAgY29uc3Qgbm9ybWFsaXplZFN1cmkgPSBzdXJpLm5vcm1hbGl6ZSgnTkZDJyk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9wcmVmZXItcmVnZXhwLWV4ZWNcbiAgICBjb25zdCBtYXRjaGVzID0gbm9ybWFsaXplZFN1cmkubWF0Y2goUkVfQ0FQVFVSRSk7XG4gICAgaWYgKG1hdGNoZXMgPT09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmFibGUgdG8gbWF0Y2ggcHJvdmlkZWQgdmFsdWUgdG8gYSBzZWNyZXQgVVJJJyk7XG4gICAgfVxuICAgIGNvbnN0IFssIHBocmFzZSwgLCBkZXJpdmVQYXRoLCAsICwgcGFzc3dvcmRdID0gbWF0Y2hlcztcbiAgICBjb25zdCB7IHBhdGggfSA9IGtleUV4dHJhY3RQYXRoKGRlcml2ZVBhdGgpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGRlcml2ZVBhdGgsXG4gICAgICAgIHBhc3N3b3JkLFxuICAgICAgICBwYXRoLFxuICAgICAgICBwaHJhc2VcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbImtleUV4dHJhY3RQYXRoIiwiUkVfQ0FQVFVSRSIsImtleUV4dHJhY3RTdXJpIiwic3VyaSIsIm5vcm1hbGl6ZWRTdXJpIiwibm9ybWFsaXplIiwibWF0Y2hlcyIsIm1hdGNoIiwiRXJyb3IiLCJwaHJhc2UiLCJkZXJpdmVQYXRoIiwicGFzc3dvcmQiLCJwYXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/extractSuri.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/fromPath.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/key/fromPath.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   keyFromPath: function() { return /* binding */ keyFromPath; }\n/* harmony export */ });\n/* harmony import */ var _hdkdEcdsa_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hdkdEcdsa.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/hdkdEcdsa.js\");\n/* harmony import */ var _hdkdEd25519_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hdkdEd25519.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/hdkdEd25519.js\");\n/* harmony import */ var _hdkdSr25519_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hdkdSr25519.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/hdkdSr25519.js\");\n\n\n\nconst generators = {\n    ecdsa: _hdkdEcdsa_js__WEBPACK_IMPORTED_MODULE_0__.keyHdkdEcdsa,\n    ed25519: _hdkdEd25519_js__WEBPACK_IMPORTED_MODULE_1__.keyHdkdEd25519,\n    // FIXME This is Substrate-compatible, not Ethereum-compatible\n    ethereum: _hdkdEcdsa_js__WEBPACK_IMPORTED_MODULE_0__.keyHdkdEcdsa,\n    sr25519: _hdkdSr25519_js__WEBPACK_IMPORTED_MODULE_2__.keyHdkdSr25519\n};\nfunction keyFromPath(pair, path, type) {\n    const keyHdkd = generators[type];\n    let result = pair;\n    for (const junction of path){\n        result = keyHdkd(result, junction);\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8va2V5L2Zyb21QYXRoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBOEM7QUFDSTtBQUNBO0FBQ2xELE1BQU1HLGFBQWE7SUFDZkMsT0FBT0osdURBQVlBO0lBQ25CSyxTQUFTSiwyREFBY0E7SUFDdkIsOERBQThEO0lBQzlESyxVQUFVTix1REFBWUE7SUFDdEJPLFNBQVNMLDJEQUFjQTtBQUMzQjtBQUNPLFNBQVNNLFlBQVlDLElBQUksRUFBRUMsSUFBSSxFQUFFQyxJQUFJO0lBQ3hDLE1BQU1DLFVBQVVULFVBQVUsQ0FBQ1EsS0FBSztJQUNoQyxJQUFJRSxTQUFTSjtJQUNiLEtBQUssTUFBTUssWUFBWUosS0FBTTtRQUN6QkcsU0FBU0QsUUFBUUMsUUFBUUM7SUFDN0I7SUFDQSxPQUFPRDtBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8va2V5L2Zyb21QYXRoLmpzP2MyZDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsga2V5SGRrZEVjZHNhIH0gZnJvbSAnLi9oZGtkRWNkc2EuanMnO1xuaW1wb3J0IHsga2V5SGRrZEVkMjU1MTkgfSBmcm9tICcuL2hka2RFZDI1NTE5LmpzJztcbmltcG9ydCB7IGtleUhka2RTcjI1NTE5IH0gZnJvbSAnLi9oZGtkU3IyNTUxOS5qcyc7XG5jb25zdCBnZW5lcmF0b3JzID0ge1xuICAgIGVjZHNhOiBrZXlIZGtkRWNkc2EsXG4gICAgZWQyNTUxOToga2V5SGRrZEVkMjU1MTksXG4gICAgLy8gRklYTUUgVGhpcyBpcyBTdWJzdHJhdGUtY29tcGF0aWJsZSwgbm90IEV0aGVyZXVtLWNvbXBhdGlibGVcbiAgICBldGhlcmV1bToga2V5SGRrZEVjZHNhLFxuICAgIHNyMjU1MTk6IGtleUhka2RTcjI1NTE5XG59O1xuZXhwb3J0IGZ1bmN0aW9uIGtleUZyb21QYXRoKHBhaXIsIHBhdGgsIHR5cGUpIHtcbiAgICBjb25zdCBrZXlIZGtkID0gZ2VuZXJhdG9yc1t0eXBlXTtcbiAgICBsZXQgcmVzdWx0ID0gcGFpcjtcbiAgICBmb3IgKGNvbnN0IGp1bmN0aW9uIG9mIHBhdGgpIHtcbiAgICAgICAgcmVzdWx0ID0ga2V5SGRrZChyZXN1bHQsIGp1bmN0aW9uKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6WyJrZXlIZGtkRWNkc2EiLCJrZXlIZGtkRWQyNTUxOSIsImtleUhka2RTcjI1NTE5IiwiZ2VuZXJhdG9ycyIsImVjZHNhIiwiZWQyNTUxOSIsImV0aGVyZXVtIiwic3IyNTUxOSIsImtleUZyb21QYXRoIiwicGFpciIsInBhdGgiLCJ0eXBlIiwia2V5SGRrZCIsInJlc3VsdCIsImp1bmN0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/fromPath.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/hdkdDerive.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/key/hdkdDerive.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSeedDeriveFn: function() { return /* binding */ createSeedDeriveFn; }\n/* harmony export */ });\nfunction createSeedDeriveFn(fromSeed, derive) {\n    return (keypair, param)=>{\n        let { chainCode, isHard } = param;\n        if (!isHard) {\n            throw new Error(\"A soft key was found in the path and is not supported\");\n        }\n        return fromSeed(derive(keypair.secretKey.subarray(0, 32), chainCode));\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8va2V5L2hka2REZXJpdmUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLG1CQUFtQkMsUUFBUSxFQUFFQyxNQUFNO0lBQy9DLE9BQU8sQ0FBQ0M7WUFBUyxFQUFFQyxTQUFTLEVBQUVDLE1BQU0sRUFBRTtRQUNsQyxJQUFJLENBQUNBLFFBQVE7WUFDVCxNQUFNLElBQUlDLE1BQU07UUFDcEI7UUFDQSxPQUFPTCxTQUFTQyxPQUFPQyxRQUFRSSxTQUFTLENBQUNDLFFBQVEsQ0FBQyxHQUFHLEtBQUtKO0lBQzlEO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9rZXkvaGRrZERlcml2ZS5qcz8wNTA4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTZWVkRGVyaXZlRm4oZnJvbVNlZWQsIGRlcml2ZSkge1xuICAgIHJldHVybiAoa2V5cGFpciwgeyBjaGFpbkNvZGUsIGlzSGFyZCB9KSA9PiB7XG4gICAgICAgIGlmICghaXNIYXJkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Egc29mdCBrZXkgd2FzIGZvdW5kIGluIHRoZSBwYXRoIGFuZCBpcyBub3Qgc3VwcG9ydGVkJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZyb21TZWVkKGRlcml2ZShrZXlwYWlyLnNlY3JldEtleS5zdWJhcnJheSgwLCAzMiksIGNoYWluQ29kZSkpO1xuICAgIH07XG59XG4iXSwibmFtZXMiOlsiY3JlYXRlU2VlZERlcml2ZUZuIiwiZnJvbVNlZWQiLCJkZXJpdmUiLCJrZXlwYWlyIiwiY2hhaW5Db2RlIiwiaXNIYXJkIiwiRXJyb3IiLCJzZWNyZXRLZXkiLCJzdWJhcnJheSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/hdkdDerive.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/hdkdEcdsa.js":
/*!*************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/key/hdkdEcdsa.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   keyHdkdEcdsa: function() { return /* binding */ keyHdkdEcdsa; }\n/* harmony export */ });\n/* harmony import */ var _secp256k1_deriveHard_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../secp256k1/deriveHard.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/deriveHard.js\");\n/* harmony import */ var _secp256k1_pair_fromSeed_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../secp256k1/pair/fromSeed.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/pair/fromSeed.js\");\n/* harmony import */ var _hdkdDerive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hdkdDerive.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/hdkdDerive.js\");\n\n\n\nconst keyHdkdEcdsa = /*#__PURE__*/ (0,_hdkdDerive_js__WEBPACK_IMPORTED_MODULE_0__.createSeedDeriveFn)(_secp256k1_pair_fromSeed_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1PairFromSeed, _secp256k1_deriveHard_js__WEBPACK_IMPORTED_MODULE_2__.secp256k1DeriveHard);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8va2V5L2hka2RFY2RzYS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWlFO0FBQ0s7QUFDakI7QUFDOUMsTUFBTUcsZUFBZSxXQUFXLEdBQUdELGtFQUFrQkEsQ0FBQ0QsOEVBQXFCQSxFQUFFRCx5RUFBbUJBLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9rZXkvaGRrZEVjZHNhLmpzP2E3ZmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2VjcDI1NmsxRGVyaXZlSGFyZCB9IGZyb20gJy4uL3NlY3AyNTZrMS9kZXJpdmVIYXJkLmpzJztcbmltcG9ydCB7IHNlY3AyNTZrMVBhaXJGcm9tU2VlZCB9IGZyb20gJy4uL3NlY3AyNTZrMS9wYWlyL2Zyb21TZWVkLmpzJztcbmltcG9ydCB7IGNyZWF0ZVNlZWREZXJpdmVGbiB9IGZyb20gJy4vaGRrZERlcml2ZS5qcyc7XG5leHBvcnQgY29uc3Qga2V5SGRrZEVjZHNhID0gLyojX19QVVJFX18qLyBjcmVhdGVTZWVkRGVyaXZlRm4oc2VjcDI1NmsxUGFpckZyb21TZWVkLCBzZWNwMjU2azFEZXJpdmVIYXJkKTtcbiJdLCJuYW1lcyI6WyJzZWNwMjU2azFEZXJpdmVIYXJkIiwic2VjcDI1NmsxUGFpckZyb21TZWVkIiwiY3JlYXRlU2VlZERlcml2ZUZuIiwia2V5SGRrZEVjZHNhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/hdkdEcdsa.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/hdkdEd25519.js":
/*!***************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/key/hdkdEd25519.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   keyHdkdEd25519: function() { return /* binding */ keyHdkdEd25519; }\n/* harmony export */ });\n/* harmony import */ var _ed25519_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ed25519/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/pair/fromSeed.js\");\n/* harmony import */ var _ed25519_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ed25519/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/deriveHard.js\");\n/* harmony import */ var _hdkdDerive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hdkdDerive.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/hdkdDerive.js\");\n\n\nconst keyHdkdEd25519 = /*#__PURE__*/ (0,_hdkdDerive_js__WEBPACK_IMPORTED_MODULE_0__.createSeedDeriveFn)(_ed25519_index_js__WEBPACK_IMPORTED_MODULE_1__.ed25519PairFromSeed, _ed25519_index_js__WEBPACK_IMPORTED_MODULE_2__.ed25519DeriveHard);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8va2V5L2hka2RFZDI1NTE5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNkU7QUFDeEI7QUFDOUMsTUFBTUcsaUJBQWlCLFdBQVcsR0FBR0Qsa0VBQWtCQSxDQUFDRCxrRUFBbUJBLEVBQUVELGdFQUFpQkEsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2tleS9oZGtkRWQyNTUxOS5qcz80NmMzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGVkMjU1MTlEZXJpdmVIYXJkLCBlZDI1NTE5UGFpckZyb21TZWVkIH0gZnJvbSAnLi4vZWQyNTUxOS9pbmRleC5qcyc7XG5pbXBvcnQgeyBjcmVhdGVTZWVkRGVyaXZlRm4gfSBmcm9tICcuL2hka2REZXJpdmUuanMnO1xuZXhwb3J0IGNvbnN0IGtleUhka2RFZDI1NTE5ID0gLyojX19QVVJFX18qLyBjcmVhdGVTZWVkRGVyaXZlRm4oZWQyNTUxOVBhaXJGcm9tU2VlZCwgZWQyNTUxOURlcml2ZUhhcmQpO1xuIl0sIm5hbWVzIjpbImVkMjU1MTlEZXJpdmVIYXJkIiwiZWQyNTUxOVBhaXJGcm9tU2VlZCIsImNyZWF0ZVNlZWREZXJpdmVGbiIsImtleUhka2RFZDI1NTE5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/hdkdEd25519.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/hdkdSr25519.js":
/*!***************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/key/hdkdSr25519.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   keyHdkdSr25519: function() { return /* binding */ keyHdkdSr25519; }\n/* harmony export */ });\n/* harmony import */ var _sr25519_deriveHard_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../sr25519/deriveHard.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/deriveHard.js\");\n/* harmony import */ var _sr25519_deriveSoft_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../sr25519/deriveSoft.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/deriveSoft.js\");\n\n\nfunction keyHdkdSr25519(keypair, param) {\n    let { chainCode, isSoft } = param;\n    return isSoft ? (0,_sr25519_deriveSoft_js__WEBPACK_IMPORTED_MODULE_0__.sr25519DeriveSoft)(keypair, chainCode) : (0,_sr25519_deriveHard_js__WEBPACK_IMPORTED_MODULE_1__.sr25519DeriveHard)(keypair, chainCode);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8va2V5L2hka2RTcjI1NTE5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2RDtBQUNBO0FBQ3RELFNBQVNFLGVBQWVDLE9BQU8sRUFBRSxLQUFxQjtRQUFyQixFQUFFQyxTQUFTLEVBQUVDLE1BQU0sRUFBRSxHQUFyQjtJQUNwQyxPQUFPQSxTQUNESix5RUFBaUJBLENBQUNFLFNBQVNDLGFBQzNCSix5RUFBaUJBLENBQUNHLFNBQVNDO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8va2V5L2hka2RTcjI1NTE5LmpzP2NmYjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3IyNTUxOURlcml2ZUhhcmQgfSBmcm9tICcuLi9zcjI1NTE5L2Rlcml2ZUhhcmQuanMnO1xuaW1wb3J0IHsgc3IyNTUxOURlcml2ZVNvZnQgfSBmcm9tICcuLi9zcjI1NTE5L2Rlcml2ZVNvZnQuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGtleUhka2RTcjI1NTE5KGtleXBhaXIsIHsgY2hhaW5Db2RlLCBpc1NvZnQgfSkge1xuICAgIHJldHVybiBpc1NvZnRcbiAgICAgICAgPyBzcjI1NTE5RGVyaXZlU29mdChrZXlwYWlyLCBjaGFpbkNvZGUpXG4gICAgICAgIDogc3IyNTUxOURlcml2ZUhhcmQoa2V5cGFpciwgY2hhaW5Db2RlKTtcbn1cbiJdLCJuYW1lcyI6WyJzcjI1NTE5RGVyaXZlSGFyZCIsInNyMjU1MTlEZXJpdmVTb2Z0Iiwia2V5SGRrZFNyMjU1MTkiLCJrZXlwYWlyIiwiY2hhaW5Db2RlIiwiaXNTb2Z0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/hdkdSr25519.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/key/index.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   keyExtractPath: function() { return /* reexport safe */ _extractPath_js__WEBPACK_IMPORTED_MODULE_0__.keyExtractPath; },\n/* harmony export */   keyExtractSuri: function() { return /* reexport safe */ _extractSuri_js__WEBPACK_IMPORTED_MODULE_1__.keyExtractSuri; },\n/* harmony export */   keyFromPath: function() { return /* reexport safe */ _fromPath_js__WEBPACK_IMPORTED_MODULE_2__.keyFromPath; },\n/* harmony export */   keyHdkdEcdsa: function() { return /* reexport safe */ _hdkdEcdsa_js__WEBPACK_IMPORTED_MODULE_3__.keyHdkdEcdsa; },\n/* harmony export */   keyHdkdEd25519: function() { return /* reexport safe */ _hdkdEd25519_js__WEBPACK_IMPORTED_MODULE_4__.keyHdkdEd25519; },\n/* harmony export */   keyHdkdSr25519: function() { return /* reexport safe */ _hdkdSr25519_js__WEBPACK_IMPORTED_MODULE_5__.keyHdkdSr25519; }\n/* harmony export */ });\n/* harmony import */ var _extractPath_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./extractPath.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/extractPath.js\");\n/* harmony import */ var _extractSuri_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./extractSuri.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/extractSuri.js\");\n/* harmony import */ var _fromPath_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fromPath.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/fromPath.js\");\n/* harmony import */ var _hdkdEcdsa_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hdkdEcdsa.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/hdkdEcdsa.js\");\n/* harmony import */ var _hdkdEd25519_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hdkdEd25519.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/hdkdEd25519.js\");\n/* harmony import */ var _hdkdSr25519_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./hdkdSr25519.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/hdkdSr25519.js\");\n/**\n * @summary Create keys from paths, seeds and password\n */ \n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8va2V5L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztDQUVDLEdBQ2lEO0FBQ0E7QUFDTjtBQUNFO0FBQ0k7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2tleS9pbmRleC5qcz81ZTQ3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHN1bW1hcnkgQ3JlYXRlIGtleXMgZnJvbSBwYXRocywgc2VlZHMgYW5kIHBhc3N3b3JkXG4gKi9cbmV4cG9ydCB7IGtleUV4dHJhY3RQYXRoIH0gZnJvbSAnLi9leHRyYWN0UGF0aC5qcyc7XG5leHBvcnQgeyBrZXlFeHRyYWN0U3VyaSB9IGZyb20gJy4vZXh0cmFjdFN1cmkuanMnO1xuZXhwb3J0IHsga2V5RnJvbVBhdGggfSBmcm9tICcuL2Zyb21QYXRoLmpzJztcbmV4cG9ydCB7IGtleUhka2RFY2RzYSB9IGZyb20gJy4vaGRrZEVjZHNhLmpzJztcbmV4cG9ydCB7IGtleUhka2RFZDI1NTE5IH0gZnJvbSAnLi9oZGtkRWQyNTUxOS5qcyc7XG5leHBvcnQgeyBrZXlIZGtkU3IyNTUxOSB9IGZyb20gJy4vaGRrZFNyMjU1MTkuanMnO1xuIl0sIm5hbWVzIjpbImtleUV4dHJhY3RQYXRoIiwia2V5RXh0cmFjdFN1cmkiLCJrZXlGcm9tUGF0aCIsImtleUhka2RFY2RzYSIsImtleUhka2RFZDI1NTE5Iiwia2V5SGRrZFNyMjU1MTkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/key/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/bip39.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/mnemonic/bip39.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   entropyToMnemonic: function() { return /* binding */ entropyToMnemonic; },\n/* harmony export */   generateMnemonic: function() { return /* binding */ generateMnemonic; },\n/* harmony export */   mnemonicToEntropy: function() { return /* binding */ mnemonicToEntropy; },\n/* harmony export */   mnemonicToSeedSync: function() { return /* binding */ mnemonicToSeedSync; },\n/* harmony export */   validateMnemonic: function() { return /* binding */ validateMnemonic; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/string/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _pbkdf2_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../pbkdf2/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/pbkdf2/encode.js\");\n/* harmony import */ var _random_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../random/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/random/asU8a.js\");\n/* harmony import */ var _sha_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../sha/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/sha/asU8a.js\");\n/* harmony import */ var _wordlists_en_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./wordlists/en.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/wordlists/en.js\");\n\n\n\n\n\nconst INVALID_MNEMONIC = \"Invalid mnemonic\";\nconst INVALID_ENTROPY = \"Invalid entropy\";\nconst INVALID_CHECKSUM = \"Invalid mnemonic checksum\";\n/** @internal */ function normalize(str) {\n    return (str || \"\").normalize(\"NFKD\");\n}\n/** @internal */ function binaryToByte(bin) {\n    return parseInt(bin, 2);\n}\n/** @internal */ function bytesToBinary(bytes) {\n    return bytes.map((x)=>x.toString(2).padStart(8, \"0\")).join(\"\");\n}\n/** @internal */ function deriveChecksumBits(entropyBuffer) {\n    return bytesToBinary(Array.from((0,_sha_index_js__WEBPACK_IMPORTED_MODULE_0__.sha256AsU8a)(entropyBuffer))).slice(0, entropyBuffer.length * 8 / 32);\n}\nfunction mnemonicToSeedSync(mnemonic, password) {\n    return (0,_pbkdf2_index_js__WEBPACK_IMPORTED_MODULE_1__.pbkdf2Encode)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.stringToU8a)(normalize(mnemonic)), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.stringToU8a)(\"mnemonic\".concat(normalize(password)))).password;\n}\nfunction mnemonicToEntropy(mnemonic) {\n    let wordlist = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : _wordlists_en_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\n    const words = normalize(mnemonic).split(\" \");\n    if (words.length % 3 !== 0) {\n        throw new Error(INVALID_MNEMONIC);\n    }\n    // convert word indices to 11 bit binary strings\n    const bits = words.map((word)=>{\n        const index = wordlist.indexOf(word);\n        if (index === -1) {\n            throw new Error(INVALID_MNEMONIC);\n        }\n        return index.toString(2).padStart(11, \"0\");\n    }).join(\"\");\n    // split the binary string into ENT/CS\n    const dividerIndex = Math.floor(bits.length / 33) * 32;\n    const entropyBits = bits.slice(0, dividerIndex);\n    const checksumBits = bits.slice(dividerIndex);\n    // calculate the checksum and compare\n    const matched = entropyBits.match(/(.{1,8})/g);\n    const entropyBytes = matched === null || matched === void 0 ? void 0 : matched.map(binaryToByte);\n    if (!entropyBytes || entropyBytes.length % 4 !== 0 || entropyBytes.length < 16 || entropyBytes.length > 32) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    const entropy = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.u8aToU8a)(entropyBytes);\n    if (deriveChecksumBits(entropy) !== checksumBits) {\n        throw new Error(INVALID_CHECKSUM);\n    }\n    return entropy;\n}\nfunction entropyToMnemonic(entropy) {\n    let wordlist = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : _wordlists_en_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\n    // 128 <= ENT <= 256\n    if (entropy.length % 4 !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    const matched = \"\".concat(bytesToBinary(Array.from(entropy))).concat(deriveChecksumBits(entropy)).match(/(.{1,11})/g);\n    const mapped = matched === null || matched === void 0 ? void 0 : matched.map((b)=>wordlist[binaryToByte(b)]);\n    if (!mapped || mapped.length < 12) {\n        throw new Error(\"Unable to map entropy to mnemonic\");\n    }\n    return mapped.join(\" \");\n}\nfunction generateMnemonic(numWords, wordlist) {\n    return entropyToMnemonic((0,_random_index_js__WEBPACK_IMPORTED_MODULE_5__.randomAsU8a)(numWords / 3 * 4), wordlist);\n}\nfunction validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/bip39.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/generate.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/mnemonic/generate.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mnemonicGenerate: function() { return /* binding */ mnemonicGenerate; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/has.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n/* harmony import */ var _bip39_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bip39.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/bip39.js\");\n\n\n\n/**\n * @name mnemonicGenerate\n * @summary Creates a valid mnemonic string using using [BIP39](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki).\n * @example\n * <BR>\n *\n * ```javascript\n * import { mnemonicGenerate } from '@polkadot/util-crypto';\n *\n * const mnemonic = mnemonicGenerate(); // => string\n * ```\n */ function mnemonicGenerate() {\n    let numWords = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 12, wordlist = arguments.length > 1 ? arguments[1] : void 0, onlyJs = arguments.length > 2 ? arguments[2] : void 0;\n    return !_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.hasBigInt || !wordlist && !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.isReady)() ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.bip39Generate)(numWords) : (0,_bip39_js__WEBPACK_IMPORTED_MODULE_2__.generateMnemonic)(numWords, wordlist);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vbW5lbW9uaWMvZ2VuZXJhdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEyQztBQUNvQjtBQUNqQjtBQUM5Qzs7Ozs7Ozs7Ozs7Q0FXQyxHQUNNLFNBQVNJO1FBQWlCQyxXQUFBQSxpRUFBVyxJQUFJQyx5REFBVUM7SUFDdEQsT0FBTyxDQUFDUCxxREFBU0EsSUFBSyxDQUFDTSxZQUFZLENBQUNDLFVBQVVMLDhEQUFPQSxLQUMvQ0Qsb0VBQWFBLENBQUNJLFlBQ2RGLDJEQUFnQkEsQ0FBQ0UsVUFBVUM7QUFDckMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9tbmVtb25pYy9nZW5lcmF0ZS5qcz9iY2NlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGhhc0JpZ0ludCB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbmltcG9ydCB7IGJpcDM5R2VuZXJhdGUsIGlzUmVhZHkgfSBmcm9tICdAcG9sa2Fkb3Qvd2FzbS1jcnlwdG8nO1xuaW1wb3J0IHsgZ2VuZXJhdGVNbmVtb25pYyB9IGZyb20gJy4vYmlwMzkuanMnO1xuLyoqXG4gKiBAbmFtZSBtbmVtb25pY0dlbmVyYXRlXG4gKiBAc3VtbWFyeSBDcmVhdGVzIGEgdmFsaWQgbW5lbW9uaWMgc3RyaW5nIHVzaW5nIHVzaW5nIFtCSVAzOV0oaHR0cHM6Ly9naXRodWIuY29tL2JpdGNvaW4vYmlwcy9ibG9iL21hc3Rlci9iaXAtMDAzOS5tZWRpYXdpa2kpLlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyBtbmVtb25pY0dlbmVyYXRlIH0gZnJvbSAnQHBvbGthZG90L3V0aWwtY3J5cHRvJztcbiAqXG4gKiBjb25zdCBtbmVtb25pYyA9IG1uZW1vbmljR2VuZXJhdGUoKTsgLy8gPT4gc3RyaW5nXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1uZW1vbmljR2VuZXJhdGUobnVtV29yZHMgPSAxMiwgd29yZGxpc3QsIG9ubHlKcykge1xuICAgIHJldHVybiAhaGFzQmlnSW50IHx8ICghd29yZGxpc3QgJiYgIW9ubHlKcyAmJiBpc1JlYWR5KCkpXG4gICAgICAgID8gYmlwMzlHZW5lcmF0ZShudW1Xb3JkcylcbiAgICAgICAgOiBnZW5lcmF0ZU1uZW1vbmljKG51bVdvcmRzLCB3b3JkbGlzdCk7XG59XG4iXSwibmFtZXMiOlsiaGFzQmlnSW50IiwiYmlwMzlHZW5lcmF0ZSIsImlzUmVhZHkiLCJnZW5lcmF0ZU1uZW1vbmljIiwibW5lbW9uaWNHZW5lcmF0ZSIsIm51bVdvcmRzIiwid29yZGxpc3QiLCJvbmx5SnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/generate.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/mnemonic/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mnemonicGenerate: function() { return /* reexport safe */ _generate_js__WEBPACK_IMPORTED_MODULE_0__.mnemonicGenerate; },\n/* harmony export */   mnemonicToEntropy: function() { return /* reexport safe */ _toEntropy_js__WEBPACK_IMPORTED_MODULE_1__.mnemonicToEntropy; },\n/* harmony export */   mnemonicToLegacySeed: function() { return /* reexport safe */ _toLegacySeed_js__WEBPACK_IMPORTED_MODULE_2__.mnemonicToLegacySeed; },\n/* harmony export */   mnemonicToMiniSecret: function() { return /* reexport safe */ _toMiniSecret_js__WEBPACK_IMPORTED_MODULE_3__.mnemonicToMiniSecret; },\n/* harmony export */   mnemonicValidate: function() { return /* reexport safe */ _validate_js__WEBPACK_IMPORTED_MODULE_4__.mnemonicValidate; }\n/* harmony export */ });\n/* harmony import */ var _generate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./generate.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/generate.js\");\n/* harmony import */ var _toEntropy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toEntropy.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/toEntropy.js\");\n/* harmony import */ var _toLegacySeed_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./toLegacySeed.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/toLegacySeed.js\");\n/* harmony import */ var _toMiniSecret_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./toMiniSecret.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/toMiniSecret.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./validate.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/validate.js\");\n/**\n * @summary Create valid mnemonic strings, validate them using BIP39, and convert them to valid seeds\n */ \n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vbW5lbW9uaWMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBOztDQUVDLEdBQ2dEO0FBQ0U7QUFDTTtBQUNBO0FBQ1IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9tbmVtb25pYy9pbmRleC5qcz9hOTRjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHN1bW1hcnkgQ3JlYXRlIHZhbGlkIG1uZW1vbmljIHN0cmluZ3MsIHZhbGlkYXRlIHRoZW0gdXNpbmcgQklQMzksIGFuZCBjb252ZXJ0IHRoZW0gdG8gdmFsaWQgc2VlZHNcbiAqL1xuZXhwb3J0IHsgbW5lbW9uaWNHZW5lcmF0ZSB9IGZyb20gJy4vZ2VuZXJhdGUuanMnO1xuZXhwb3J0IHsgbW5lbW9uaWNUb0VudHJvcHkgfSBmcm9tICcuL3RvRW50cm9weS5qcyc7XG5leHBvcnQgeyBtbmVtb25pY1RvTGVnYWN5U2VlZCB9IGZyb20gJy4vdG9MZWdhY3lTZWVkLmpzJztcbmV4cG9ydCB7IG1uZW1vbmljVG9NaW5pU2VjcmV0IH0gZnJvbSAnLi90b01pbmlTZWNyZXQuanMnO1xuZXhwb3J0IHsgbW5lbW9uaWNWYWxpZGF0ZSB9IGZyb20gJy4vdmFsaWRhdGUuanMnO1xuIl0sIm5hbWVzIjpbIm1uZW1vbmljR2VuZXJhdGUiLCJtbmVtb25pY1RvRW50cm9weSIsIm1uZW1vbmljVG9MZWdhY3lTZWVkIiwibW5lbW9uaWNUb01pbmlTZWNyZXQiLCJtbmVtb25pY1ZhbGlkYXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/toEntropy.js":
/*!******************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/mnemonic/toEntropy.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mnemonicToEntropy: function() { return /* binding */ mnemonicToEntropy; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/has.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n/* harmony import */ var _bip39_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bip39.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/bip39.js\");\n\n\n\nfunction mnemonicToEntropy(mnemonic, wordlist, onlyJs) {\n    return !_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.hasBigInt || !wordlist && !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.isReady)() ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.bip39ToEntropy)(mnemonic) : (0,_bip39_js__WEBPACK_IMPORTED_MODULE_2__.mnemonicToEntropy)(mnemonic, wordlist);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vbW5lbW9uaWMvdG9FbnRyb3B5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkM7QUFDcUI7QUFDRjtBQUN2RCxTQUFTRyxrQkFBa0JFLFFBQVEsRUFBRUMsUUFBUSxFQUFFQyxNQUFNO0lBQ3hELE9BQU8sQ0FBQ1AscURBQVNBLElBQUssQ0FBQ00sWUFBWSxDQUFDQyxVQUFVTCw4REFBT0EsS0FDL0NELHFFQUFjQSxDQUFDSSxZQUNmRCw0REFBV0EsQ0FBQ0MsVUFBVUM7QUFDaEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9tbmVtb25pYy90b0VudHJvcHkuanM/YjFlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBoYXNCaWdJbnQgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG5pbXBvcnQgeyBiaXAzOVRvRW50cm9weSwgaXNSZWFkeSB9IGZyb20gJ0Bwb2xrYWRvdC93YXNtLWNyeXB0byc7XG5pbXBvcnQgeyBtbmVtb25pY1RvRW50cm9weSBhcyBqc1RvRW50cm9weSB9IGZyb20gJy4vYmlwMzkuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIG1uZW1vbmljVG9FbnRyb3B5KG1uZW1vbmljLCB3b3JkbGlzdCwgb25seUpzKSB7XG4gICAgcmV0dXJuICFoYXNCaWdJbnQgfHwgKCF3b3JkbGlzdCAmJiAhb25seUpzICYmIGlzUmVhZHkoKSlcbiAgICAgICAgPyBiaXAzOVRvRW50cm9weShtbmVtb25pYylcbiAgICAgICAgOiBqc1RvRW50cm9weShtbmVtb25pYywgd29yZGxpc3QpO1xufVxuIl0sIm5hbWVzIjpbImhhc0JpZ0ludCIsImJpcDM5VG9FbnRyb3B5IiwiaXNSZWFkeSIsIm1uZW1vbmljVG9FbnRyb3B5IiwianNUb0VudHJvcHkiLCJtbmVtb25pYyIsIndvcmRsaXN0Iiwib25seUpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/toEntropy.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/toLegacySeed.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/mnemonic/toLegacySeed.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mnemonicToLegacySeed: function() { return /* binding */ mnemonicToLegacySeed; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/has.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n/* harmony import */ var _bip39_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bip39.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/bip39.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/validate.js\");\n\n\n\n\n/**\n * @name mnemonicToLegacySeed\n * @summary Creates a valid Ethereum/Bitcoin-compatible seed from a mnemonic input\n * @example\n * <BR>\n *\n * ```javascript\n * import { mnemonicGenerate, mnemonicToLegacySeed, mnemonicValidate } from '@polkadot/util-crypto';\n *\n * const mnemonic = mnemonicGenerate(); // => string\n * const isValidMnemonic = mnemonicValidate(mnemonic); // => boolean\n *\n * if (isValidMnemonic) {\n *   console.log(`Seed generated from mnemonic: ${mnemonicToLegacySeed(mnemonic)}`); => u8a\n * }\n * ```\n */ function mnemonicToLegacySeed(mnemonic) {\n    let password = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\", onlyJs = arguments.length > 2 ? arguments[2] : void 0, byteLength = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 32;\n    if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__.mnemonicValidate)(mnemonic)) {\n        throw new Error(\"Invalid bip39 mnemonic specified\");\n    } else if (![\n        32,\n        64\n    ].includes(byteLength)) {\n        throw new Error(\"Invalid seed length \".concat(byteLength, \", expected 32 or 64\"));\n    }\n    return byteLength === 32 ? !_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.isReady)() ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.bip39ToSeed)(mnemonic, password) : (0,_bip39_js__WEBPACK_IMPORTED_MODULE_3__.mnemonicToSeedSync)(mnemonic, password).subarray(0, 32) : (0,_bip39_js__WEBPACK_IMPORTED_MODULE_3__.mnemonicToSeedSync)(mnemonic, password);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vbW5lbW9uaWMvdG9MZWdhY3lTZWVkLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTJDO0FBQ2tCO0FBQ2I7QUFDQztBQUNqRDs7Ozs7Ozs7Ozs7Ozs7OztDQWdCQyxHQUNNLFNBQVNLLHFCQUFxQkMsUUFBUTtRQUFFQyxXQUFBQSxpRUFBVyxJQUFJQyx1REFBUUMsYUFBQUEsaUVBQWE7SUFDL0UsSUFBSSxDQUFDTCw4REFBZ0JBLENBQUNFLFdBQVc7UUFDN0IsTUFBTSxJQUFJSSxNQUFNO0lBQ3BCLE9BQ0ssSUFBSSxDQUFDO1FBQUM7UUFBSTtLQUFHLENBQUNDLFFBQVEsQ0FBQ0YsYUFBYTtRQUNyQyxNQUFNLElBQUlDLE1BQU0sdUJBQWtDLE9BQVhELFlBQVc7SUFDdEQ7SUFDQSxPQUFPQSxlQUFlLEtBQ2hCLENBQUNULHFEQUFTQSxJQUFLLENBQUNRLFVBQVVOLDhEQUFPQSxLQUM3QkQsa0VBQVdBLENBQUNLLFVBQVVDLFlBQ3RCSiw2REFBa0JBLENBQUNHLFVBQVVDLFVBQVVLLFFBQVEsQ0FBQyxHQUFHLE1BQ3ZEVCw2REFBa0JBLENBQUNHLFVBQVVDO0FBQ3ZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vbW5lbW9uaWMvdG9MZWdhY3lTZWVkLmpzPzU2MTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaGFzQmlnSW50IH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgYmlwMzlUb1NlZWQsIGlzUmVhZHkgfSBmcm9tICdAcG9sa2Fkb3Qvd2FzbS1jcnlwdG8nO1xuaW1wb3J0IHsgbW5lbW9uaWNUb1NlZWRTeW5jIH0gZnJvbSAnLi9iaXAzOS5qcyc7XG5pbXBvcnQgeyBtbmVtb25pY1ZhbGlkYXRlIH0gZnJvbSAnLi92YWxpZGF0ZS5qcyc7XG4vKipcbiAqIEBuYW1lIG1uZW1vbmljVG9MZWdhY3lTZWVkXG4gKiBAc3VtbWFyeSBDcmVhdGVzIGEgdmFsaWQgRXRoZXJldW0vQml0Y29pbi1jb21wYXRpYmxlIHNlZWQgZnJvbSBhIG1uZW1vbmljIGlucHV0XG4gKiBAZXhhbXBsZVxuICogPEJSPlxuICpcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGltcG9ydCB7IG1uZW1vbmljR2VuZXJhdGUsIG1uZW1vbmljVG9MZWdhY3lTZWVkLCBtbmVtb25pY1ZhbGlkYXRlIH0gZnJvbSAnQHBvbGthZG90L3V0aWwtY3J5cHRvJztcbiAqXG4gKiBjb25zdCBtbmVtb25pYyA9IG1uZW1vbmljR2VuZXJhdGUoKTsgLy8gPT4gc3RyaW5nXG4gKiBjb25zdCBpc1ZhbGlkTW5lbW9uaWMgPSBtbmVtb25pY1ZhbGlkYXRlKG1uZW1vbmljKTsgLy8gPT4gYm9vbGVhblxuICpcbiAqIGlmIChpc1ZhbGlkTW5lbW9uaWMpIHtcbiAqICAgY29uc29sZS5sb2coYFNlZWQgZ2VuZXJhdGVkIGZyb20gbW5lbW9uaWM6ICR7bW5lbW9uaWNUb0xlZ2FjeVNlZWQobW5lbW9uaWMpfWApOyA9PiB1OGFcbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gbW5lbW9uaWNUb0xlZ2FjeVNlZWQobW5lbW9uaWMsIHBhc3N3b3JkID0gJycsIG9ubHlKcywgYnl0ZUxlbmd0aCA9IDMyKSB7XG4gICAgaWYgKCFtbmVtb25pY1ZhbGlkYXRlKG1uZW1vbmljKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgYmlwMzkgbW5lbW9uaWMgc3BlY2lmaWVkJyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKCFbMzIsIDY0XS5pbmNsdWRlcyhieXRlTGVuZ3RoKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgc2VlZCBsZW5ndGggJHtieXRlTGVuZ3RofSwgZXhwZWN0ZWQgMzIgb3IgNjRgKTtcbiAgICB9XG4gICAgcmV0dXJuIGJ5dGVMZW5ndGggPT09IDMyXG4gICAgICAgID8gIWhhc0JpZ0ludCB8fCAoIW9ubHlKcyAmJiBpc1JlYWR5KCkpXG4gICAgICAgICAgICA/IGJpcDM5VG9TZWVkKG1uZW1vbmljLCBwYXNzd29yZClcbiAgICAgICAgICAgIDogbW5lbW9uaWNUb1NlZWRTeW5jKG1uZW1vbmljLCBwYXNzd29yZCkuc3ViYXJyYXkoMCwgMzIpXG4gICAgICAgIDogbW5lbW9uaWNUb1NlZWRTeW5jKG1uZW1vbmljLCBwYXNzd29yZCk7XG59XG4iXSwibmFtZXMiOlsiaGFzQmlnSW50IiwiYmlwMzlUb1NlZWQiLCJpc1JlYWR5IiwibW5lbW9uaWNUb1NlZWRTeW5jIiwibW5lbW9uaWNWYWxpZGF0ZSIsIm1uZW1vbmljVG9MZWdhY3lTZWVkIiwibW5lbW9uaWMiLCJwYXNzd29yZCIsIm9ubHlKcyIsImJ5dGVMZW5ndGgiLCJFcnJvciIsImluY2x1ZGVzIiwic3ViYXJyYXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/toLegacySeed.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/toMiniSecret.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/mnemonic/toMiniSecret.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mnemonicToMiniSecret: function() { return /* binding */ mnemonicToMiniSecret; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/string/toU8a.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n/* harmony import */ var _pbkdf2_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../pbkdf2/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/pbkdf2/encode.js\");\n/* harmony import */ var _toEntropy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./toEntropy.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/toEntropy.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/validate.js\");\n\n\n\n\n\nfunction mnemonicToMiniSecret(mnemonic) {\n    let password = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\", wordlist = arguments.length > 2 ? arguments[2] : void 0, onlyJs = arguments.length > 3 ? arguments[3] : void 0;\n    if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__.mnemonicValidate)(mnemonic, wordlist, onlyJs)) {\n        throw new Error(\"Invalid bip39 mnemonic specified\");\n    } else if (!wordlist && !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.isReady)()) {\n        return (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.bip39ToMiniSecret)(mnemonic, password);\n    }\n    const entropy = (0,_toEntropy_js__WEBPACK_IMPORTED_MODULE_2__.mnemonicToEntropy)(mnemonic, wordlist);\n    const salt = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.stringToU8a)(\"mnemonic\".concat(password));\n    // return the first 32 bytes as the seed\n    return (0,_pbkdf2_index_js__WEBPACK_IMPORTED_MODULE_4__.pbkdf2Encode)(entropy, salt).password.slice(0, 32);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vbW5lbW9uaWMvdG9NaW5pU2VjcmV0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE2QztBQUNzQjtBQUNqQjtBQUNDO0FBQ0Y7QUFDMUMsU0FBU00scUJBQXFCQyxRQUFRO1FBQUVDLFdBQUFBLGlFQUFXLElBQUlDLHlEQUFVQztJQUNwRSxJQUFJLENBQUNMLDhEQUFnQkEsQ0FBQ0UsVUFBVUUsVUFBVUMsU0FBUztRQUMvQyxNQUFNLElBQUlDLE1BQU07SUFDcEIsT0FDSyxJQUFJLENBQUNGLFlBQVksQ0FBQ0MsVUFBVVIsOERBQU9BLElBQUk7UUFDeEMsT0FBT0Qsd0VBQWlCQSxDQUFDTSxVQUFVQztJQUN2QztJQUNBLE1BQU1JLFVBQVVSLGdFQUFpQkEsQ0FBQ0csVUFBVUU7SUFDNUMsTUFBTUksT0FBT2IsMkRBQVdBLENBQUMsV0FBb0IsT0FBVFE7SUFDcEMsd0NBQXdDO0lBQ3hDLE9BQU9MLDhEQUFZQSxDQUFDUyxTQUFTQyxNQUFNTCxRQUFRLENBQUNNLEtBQUssQ0FBQyxHQUFHO0FBQ3pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vbW5lbW9uaWMvdG9NaW5pU2VjcmV0LmpzP2NjN2YiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3RyaW5nVG9VOGEgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG5pbXBvcnQgeyBiaXAzOVRvTWluaVNlY3JldCwgaXNSZWFkeSB9IGZyb20gJ0Bwb2xrYWRvdC93YXNtLWNyeXB0byc7XG5pbXBvcnQgeyBwYmtkZjJFbmNvZGUgfSBmcm9tICcuLi9wYmtkZjIvaW5kZXguanMnO1xuaW1wb3J0IHsgbW5lbW9uaWNUb0VudHJvcHkgfSBmcm9tICcuL3RvRW50cm9weS5qcyc7XG5pbXBvcnQgeyBtbmVtb25pY1ZhbGlkYXRlIH0gZnJvbSAnLi92YWxpZGF0ZS5qcyc7XG5leHBvcnQgZnVuY3Rpb24gbW5lbW9uaWNUb01pbmlTZWNyZXQobW5lbW9uaWMsIHBhc3N3b3JkID0gJycsIHdvcmRsaXN0LCBvbmx5SnMpIHtcbiAgICBpZiAoIW1uZW1vbmljVmFsaWRhdGUobW5lbW9uaWMsIHdvcmRsaXN0LCBvbmx5SnMpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBiaXAzOSBtbmVtb25pYyBzcGVjaWZpZWQnKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoIXdvcmRsaXN0ICYmICFvbmx5SnMgJiYgaXNSZWFkeSgpKSB7XG4gICAgICAgIHJldHVybiBiaXAzOVRvTWluaVNlY3JldChtbmVtb25pYywgcGFzc3dvcmQpO1xuICAgIH1cbiAgICBjb25zdCBlbnRyb3B5ID0gbW5lbW9uaWNUb0VudHJvcHkobW5lbW9uaWMsIHdvcmRsaXN0KTtcbiAgICBjb25zdCBzYWx0ID0gc3RyaW5nVG9VOGEoYG1uZW1vbmljJHtwYXNzd29yZH1gKTtcbiAgICAvLyByZXR1cm4gdGhlIGZpcnN0IDMyIGJ5dGVzIGFzIHRoZSBzZWVkXG4gICAgcmV0dXJuIHBia2RmMkVuY29kZShlbnRyb3B5LCBzYWx0KS5wYXNzd29yZC5zbGljZSgwLCAzMik7XG59XG4iXSwibmFtZXMiOlsic3RyaW5nVG9VOGEiLCJiaXAzOVRvTWluaVNlY3JldCIsImlzUmVhZHkiLCJwYmtkZjJFbmNvZGUiLCJtbmVtb25pY1RvRW50cm9weSIsIm1uZW1vbmljVmFsaWRhdGUiLCJtbmVtb25pY1RvTWluaVNlY3JldCIsIm1uZW1vbmljIiwicGFzc3dvcmQiLCJ3b3JkbGlzdCIsIm9ubHlKcyIsIkVycm9yIiwiZW50cm9weSIsInNhbHQiLCJzbGljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/toMiniSecret.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/validate.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/mnemonic/validate.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mnemonicValidate: function() { return /* binding */ mnemonicValidate; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/has.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n/* harmony import */ var _bip39_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bip39.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/bip39.js\");\n\n\n\n/**\n * @name mnemonicValidate\n * @summary Validates a mnemonic input using [BIP39](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki).\n * @example\n * <BR>\n *\n * ```javascript\n * import { mnemonicGenerate, mnemonicValidate } from '@polkadot/util-crypto';\n *\n * const mnemonic = mnemonicGenerate(); // => string\n * const isValidMnemonic = mnemonicValidate(mnemonic); // => boolean\n * ```\n */ function mnemonicValidate(mnemonic, wordlist, onlyJs) {\n    return !_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.hasBigInt || !wordlist && !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.isReady)() ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.bip39Validate)(mnemonic) : (0,_bip39_js__WEBPACK_IMPORTED_MODULE_2__.validateMnemonic)(mnemonic, wordlist);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vbW5lbW9uaWMvdmFsaWRhdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEyQztBQUNvQjtBQUNqQjtBQUM5Qzs7Ozs7Ozs7Ozs7O0NBWUMsR0FDTSxTQUFTSSxpQkFBaUJDLFFBQVEsRUFBRUMsUUFBUSxFQUFFQyxNQUFNO0lBQ3ZELE9BQU8sQ0FBQ1AscURBQVNBLElBQUssQ0FBQ00sWUFBWSxDQUFDQyxVQUFVTCw4REFBT0EsS0FDL0NELG9FQUFhQSxDQUFDSSxZQUNkRiwyREFBZ0JBLENBQUNFLFVBQVVDO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vbW5lbW9uaWMvdmFsaWRhdGUuanM/MWY0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBoYXNCaWdJbnQgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG5pbXBvcnQgeyBiaXAzOVZhbGlkYXRlLCBpc1JlYWR5IH0gZnJvbSAnQHBvbGthZG90L3dhc20tY3J5cHRvJztcbmltcG9ydCB7IHZhbGlkYXRlTW5lbW9uaWMgfSBmcm9tICcuL2JpcDM5LmpzJztcbi8qKlxuICogQG5hbWUgbW5lbW9uaWNWYWxpZGF0ZVxuICogQHN1bW1hcnkgVmFsaWRhdGVzIGEgbW5lbW9uaWMgaW5wdXQgdXNpbmcgW0JJUDM5XShodHRwczovL2dpdGh1Yi5jb20vYml0Y29pbi9iaXBzL2Jsb2IvbWFzdGVyL2JpcC0wMDM5Lm1lZGlhd2lraSkuXG4gKiBAZXhhbXBsZVxuICogPEJSPlxuICpcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGltcG9ydCB7IG1uZW1vbmljR2VuZXJhdGUsIG1uZW1vbmljVmFsaWRhdGUgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbC1jcnlwdG8nO1xuICpcbiAqIGNvbnN0IG1uZW1vbmljID0gbW5lbW9uaWNHZW5lcmF0ZSgpOyAvLyA9PiBzdHJpbmdcbiAqIGNvbnN0IGlzVmFsaWRNbmVtb25pYyA9IG1uZW1vbmljVmFsaWRhdGUobW5lbW9uaWMpOyAvLyA9PiBib29sZWFuXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1uZW1vbmljVmFsaWRhdGUobW5lbW9uaWMsIHdvcmRsaXN0LCBvbmx5SnMpIHtcbiAgICByZXR1cm4gIWhhc0JpZ0ludCB8fCAoIXdvcmRsaXN0ICYmICFvbmx5SnMgJiYgaXNSZWFkeSgpKVxuICAgICAgICA/IGJpcDM5VmFsaWRhdGUobW5lbW9uaWMpXG4gICAgICAgIDogdmFsaWRhdGVNbmVtb25pYyhtbmVtb25pYywgd29yZGxpc3QpO1xufVxuIl0sIm5hbWVzIjpbImhhc0JpZ0ludCIsImJpcDM5VmFsaWRhdGUiLCJpc1JlYWR5IiwidmFsaWRhdGVNbmVtb25pYyIsIm1uZW1vbmljVmFsaWRhdGUiLCJtbmVtb25pYyIsIndvcmRsaXN0Iiwib25seUpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/validate.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/wordlists/en.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/mnemonic/wordlists/en.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"abandon|ability|able|about|above|absent|absorb|abstract|absurd|abuse|access|accident|account|accuse|achieve|acid|acoustic|acquire|across|act|action|actor|actress|actual|adapt|add|addict|address|adjust|admit|adult|advance|advice|aerobic|affair|afford|afraid|again|age|agent|agree|ahead|aim|air|airport|aisle|alarm|album|alcohol|alert|alien|all|alley|allow|almost|alone|alpha|already|also|alter|always|amateur|amazing|among|amount|amused|analyst|anchor|ancient|anger|angle|angry|animal|ankle|announce|annual|another|answer|antenna|antique|anxiety|any|apart|apology|appear|apple|approve|april|arch|arctic|area|arena|argue|arm|armed|armor|army|around|arrange|arrest|arrive|arrow|art|artefact|artist|artwork|ask|aspect|assault|asset|assist|assume|asthma|athlete|atom|attack|attend|attitude|attract|auction|audit|august|aunt|author|auto|autumn|average|avocado|avoid|awake|aware|away|awesome|awful|awkward|axis|baby|bachelor|bacon|badge|bag|balance|balcony|ball|bamboo|banana|banner|bar|barely|bargain|barrel|base|basic|basket|battle|beach|bean|beauty|because|become|beef|before|begin|behave|behind|believe|below|belt|bench|benefit|best|betray|better|between|beyond|bicycle|bid|bike|bind|biology|bird|birth|bitter|black|blade|blame|blanket|blast|bleak|bless|blind|blood|blossom|blouse|blue|blur|blush|board|boat|body|boil|bomb|bone|bonus|book|boost|border|boring|borrow|boss|bottom|bounce|box|boy|bracket|brain|brand|brass|brave|bread|breeze|brick|bridge|brief|bright|bring|brisk|broccoli|broken|bronze|broom|brother|brown|brush|bubble|buddy|budget|buffalo|build|bulb|bulk|bullet|bundle|bunker|burden|burger|burst|bus|business|busy|butter|buyer|buzz|cabbage|cabin|cable|cactus|cage|cake|call|calm|camera|camp|can|canal|cancel|candy|cannon|canoe|canvas|canyon|capable|capital|captain|car|carbon|card|cargo|carpet|carry|cart|case|cash|casino|castle|casual|cat|catalog|catch|category|cattle|caught|cause|caution|cave|ceiling|celery|cement|census|century|cereal|certain|chair|chalk|champion|change|chaos|chapter|charge|chase|chat|cheap|check|cheese|chef|cherry|chest|chicken|chief|child|chimney|choice|choose|chronic|chuckle|chunk|churn|cigar|cinnamon|circle|citizen|city|civil|claim|clap|clarify|claw|clay|clean|clerk|clever|click|client|cliff|climb|clinic|clip|clock|clog|close|cloth|cloud|clown|club|clump|cluster|clutch|coach|coast|coconut|code|coffee|coil|coin|collect|color|column|combine|come|comfort|comic|common|company|concert|conduct|confirm|congress|connect|consider|control|convince|cook|cool|copper|copy|coral|core|corn|correct|cost|cotton|couch|country|couple|course|cousin|cover|coyote|crack|cradle|craft|cram|crane|crash|crater|crawl|crazy|cream|credit|creek|crew|cricket|crime|crisp|critic|crop|cross|crouch|crowd|crucial|cruel|cruise|crumble|crunch|crush|cry|crystal|cube|culture|cup|cupboard|curious|current|curtain|curve|cushion|custom|cute|cycle|dad|damage|damp|dance|danger|daring|dash|daughter|dawn|day|deal|debate|debris|decade|december|decide|decline|decorate|decrease|deer|defense|define|defy|degree|delay|deliver|demand|demise|denial|dentist|deny|depart|depend|deposit|depth|deputy|derive|describe|desert|design|desk|despair|destroy|detail|detect|develop|device|devote|diagram|dial|diamond|diary|dice|diesel|diet|differ|digital|dignity|dilemma|dinner|dinosaur|direct|dirt|disagree|discover|disease|dish|dismiss|disorder|display|distance|divert|divide|divorce|dizzy|doctor|document|dog|doll|dolphin|domain|donate|donkey|donor|door|dose|double|dove|draft|dragon|drama|drastic|draw|dream|dress|drift|drill|drink|drip|drive|drop|drum|dry|duck|dumb|dune|during|dust|dutch|duty|dwarf|dynamic|eager|eagle|early|earn|earth|easily|east|easy|echo|ecology|economy|edge|edit|educate|effort|egg|eight|either|elbow|elder|electric|elegant|element|elephant|elevator|elite|else|embark|embody|embrace|emerge|emotion|employ|empower|empty|enable|enact|end|endless|endorse|enemy|energy|enforce|engage|engine|enhance|enjoy|enlist|enough|enrich|enroll|ensure|enter|entire|entry|envelope|episode|equal|equip|era|erase|erode|erosion|error|erupt|escape|essay|essence|estate|eternal|ethics|evidence|evil|evoke|evolve|exact|example|excess|exchange|excite|exclude|excuse|execute|exercise|exhaust|exhibit|exile|exist|exit|exotic|expand|expect|expire|explain|expose|express|extend|extra|eye|eyebrow|fabric|face|faculty|fade|faint|faith|fall|false|fame|family|famous|fan|fancy|fantasy|farm|fashion|fat|fatal|father|fatigue|fault|favorite|feature|february|federal|fee|feed|feel|female|fence|festival|fetch|fever|few|fiber|fiction|field|figure|file|film|filter|final|find|fine|finger|finish|fire|firm|first|fiscal|fish|fit|fitness|fix|flag|flame|flash|flat|flavor|flee|flight|flip|float|flock|floor|flower|fluid|flush|fly|foam|focus|fog|foil|fold|follow|food|foot|force|forest|forget|fork|fortune|forum|forward|fossil|foster|found|fox|fragile|frame|frequent|fresh|friend|fringe|frog|front|frost|frown|frozen|fruit|fuel|fun|funny|furnace|fury|future|gadget|gain|galaxy|gallery|game|gap|garage|garbage|garden|garlic|garment|gas|gasp|gate|gather|gauge|gaze|general|genius|genre|gentle|genuine|gesture|ghost|giant|gift|giggle|ginger|giraffe|girl|give|glad|glance|glare|glass|glide|glimpse|globe|gloom|glory|glove|glow|glue|goat|goddess|gold|good|goose|gorilla|gospel|gossip|govern|gown|grab|grace|grain|grant|grape|grass|gravity|great|green|grid|grief|grit|grocery|group|grow|grunt|guard|guess|guide|guilt|guitar|gun|gym|habit|hair|half|hammer|hamster|hand|happy|harbor|hard|harsh|harvest|hat|have|hawk|hazard|head|health|heart|heavy|hedgehog|height|hello|helmet|help|hen|hero|hidden|high|hill|hint|hip|hire|history|hobby|hockey|hold|hole|holiday|hollow|home|honey|hood|hope|horn|horror|horse|hospital|host|hotel|hour|hover|hub|huge|human|humble|humor|hundred|hungry|hunt|hurdle|hurry|hurt|husband|hybrid|ice|icon|idea|identify|idle|ignore|ill|illegal|illness|image|imitate|immense|immune|impact|impose|improve|impulse|inch|include|income|increase|index|indicate|indoor|industry|infant|inflict|inform|inhale|inherit|initial|inject|injury|inmate|inner|innocent|input|inquiry|insane|insect|inside|inspire|install|intact|interest|into|invest|invite|involve|iron|island|isolate|issue|item|ivory|jacket|jaguar|jar|jazz|jealous|jeans|jelly|jewel|job|join|joke|journey|joy|judge|juice|jump|jungle|junior|junk|just|kangaroo|keen|keep|ketchup|key|kick|kid|kidney|kind|kingdom|kiss|kit|kitchen|kite|kitten|kiwi|knee|knife|knock|know|lab|label|labor|ladder|lady|lake|lamp|language|laptop|large|later|latin|laugh|laundry|lava|law|lawn|lawsuit|layer|lazy|leader|leaf|learn|leave|lecture|left|leg|legal|legend|leisure|lemon|lend|length|lens|leopard|lesson|letter|level|liar|liberty|library|license|life|lift|light|like|limb|limit|link|lion|liquid|list|little|live|lizard|load|loan|lobster|local|lock|logic|lonely|long|loop|lottery|loud|lounge|love|loyal|lucky|luggage|lumber|lunar|lunch|luxury|lyrics|machine|mad|magic|magnet|maid|mail|main|major|make|mammal|man|manage|mandate|mango|mansion|manual|maple|marble|march|margin|marine|market|marriage|mask|mass|master|match|material|math|matrix|matter|maximum|maze|meadow|mean|measure|meat|mechanic|medal|media|melody|melt|member|memory|mention|menu|mercy|merge|merit|merry|mesh|message|metal|method|middle|midnight|milk|million|mimic|mind|minimum|minor|minute|miracle|mirror|misery|miss|mistake|mix|mixed|mixture|mobile|model|modify|mom|moment|monitor|monkey|monster|month|moon|moral|more|morning|mosquito|mother|motion|motor|mountain|mouse|move|movie|much|muffin|mule|multiply|muscle|museum|mushroom|music|must|mutual|myself|mystery|myth|naive|name|napkin|narrow|nasty|nation|nature|near|neck|need|negative|neglect|neither|nephew|nerve|nest|net|network|neutral|never|news|next|nice|night|noble|noise|nominee|noodle|normal|north|nose|notable|note|nothing|notice|novel|now|nuclear|number|nurse|nut|oak|obey|object|oblige|obscure|observe|obtain|obvious|occur|ocean|october|odor|off|offer|office|often|oil|okay|old|olive|olympic|omit|once|one|onion|online|only|open|opera|opinion|oppose|option|orange|orbit|orchard|order|ordinary|organ|orient|original|orphan|ostrich|other|outdoor|outer|output|outside|oval|oven|over|own|owner|oxygen|oyster|ozone|pact|paddle|page|pair|palace|palm|panda|panel|panic|panther|paper|parade|parent|park|parrot|party|pass|patch|path|patient|patrol|pattern|pause|pave|payment|peace|peanut|pear|peasant|pelican|pen|penalty|pencil|people|pepper|perfect|permit|person|pet|phone|photo|phrase|physical|piano|picnic|picture|piece|pig|pigeon|pill|pilot|pink|pioneer|pipe|pistol|pitch|pizza|place|planet|plastic|plate|play|please|pledge|pluck|plug|plunge|poem|poet|point|polar|pole|police|pond|pony|pool|popular|portion|position|possible|post|potato|pottery|poverty|powder|power|practice|praise|predict|prefer|prepare|present|pretty|prevent|price|pride|primary|print|priority|prison|private|prize|problem|process|produce|profit|program|project|promote|proof|property|prosper|protect|proud|provide|public|pudding|pull|pulp|pulse|pumpkin|punch|pupil|puppy|purchase|purity|purpose|purse|push|put|puzzle|pyramid|quality|quantum|quarter|question|quick|quit|quiz|quote|rabbit|raccoon|race|rack|radar|radio|rail|rain|raise|rally|ramp|ranch|random|range|rapid|rare|rate|rather|raven|raw|razor|ready|real|reason|rebel|rebuild|recall|receive|recipe|record|recycle|reduce|reflect|reform|refuse|region|regret|regular|reject|relax|release|relief|rely|remain|remember|remind|remove|render|renew|rent|reopen|repair|repeat|replace|report|require|rescue|resemble|resist|resource|response|result|retire|retreat|return|reunion|reveal|review|reward|rhythm|rib|ribbon|rice|rich|ride|ridge|rifle|right|rigid|ring|riot|ripple|risk|ritual|rival|river|road|roast|robot|robust|rocket|romance|roof|rookie|room|rose|rotate|rough|round|route|royal|rubber|rude|rug|rule|run|runway|rural|sad|saddle|sadness|safe|sail|salad|salmon|salon|salt|salute|same|sample|sand|satisfy|satoshi|sauce|sausage|save|say|scale|scan|scare|scatter|scene|scheme|school|science|scissors|scorpion|scout|scrap|screen|script|scrub|sea|search|season|seat|second|secret|section|security|seed|seek|segment|select|sell|seminar|senior|sense|sentence|series|service|session|settle|setup|seven|shadow|shaft|shallow|share|shed|shell|sheriff|shield|shift|shine|ship|shiver|shock|shoe|shoot|shop|short|shoulder|shove|shrimp|shrug|shuffle|shy|sibling|sick|side|siege|sight|sign|silent|silk|silly|silver|similar|simple|since|sing|siren|sister|situate|six|size|skate|sketch|ski|skill|skin|skirt|skull|slab|slam|sleep|slender|slice|slide|slight|slim|slogan|slot|slow|slush|small|smart|smile|smoke|smooth|snack|snake|snap|sniff|snow|soap|soccer|social|sock|soda|soft|solar|soldier|solid|solution|solve|someone|song|soon|sorry|sort|soul|sound|soup|source|south|space|spare|spatial|spawn|speak|special|speed|spell|spend|sphere|spice|spider|spike|spin|spirit|split|spoil|sponsor|spoon|sport|spot|spray|spread|spring|spy|square|squeeze|squirrel|stable|stadium|staff|stage|stairs|stamp|stand|start|state|stay|steak|steel|stem|step|stereo|stick|still|sting|stock|stomach|stone|stool|story|stove|strategy|street|strike|strong|struggle|student|stuff|stumble|style|subject|submit|subway|success|such|sudden|suffer|sugar|suggest|suit|summer|sun|sunny|sunset|super|supply|supreme|sure|surface|surge|surprise|surround|survey|suspect|sustain|swallow|swamp|swap|swarm|swear|sweet|swift|swim|swing|switch|sword|symbol|symptom|syrup|system|table|tackle|tag|tail|talent|talk|tank|tape|target|task|taste|tattoo|taxi|teach|team|tell|ten|tenant|tennis|tent|term|test|text|thank|that|theme|then|theory|there|they|thing|this|thought|three|thrive|throw|thumb|thunder|ticket|tide|tiger|tilt|timber|time|tiny|tip|tired|tissue|title|toast|tobacco|today|toddler|toe|together|toilet|token|tomato|tomorrow|tone|tongue|tonight|tool|tooth|top|topic|topple|torch|tornado|tortoise|toss|total|tourist|toward|tower|town|toy|track|trade|traffic|tragic|train|transfer|trap|trash|travel|tray|treat|tree|trend|trial|tribe|trick|trigger|trim|trip|trophy|trouble|truck|true|truly|trumpet|trust|truth|try|tube|tuition|tumble|tuna|tunnel|turkey|turn|turtle|twelve|twenty|twice|twin|twist|two|type|typical|ugly|umbrella|unable|unaware|uncle|uncover|under|undo|unfair|unfold|unhappy|uniform|unique|unit|universe|unknown|unlock|until|unusual|unveil|update|upgrade|uphold|upon|upper|upset|urban|urge|usage|use|used|useful|useless|usual|utility|vacant|vacuum|vague|valid|valley|valve|van|vanish|vapor|various|vast|vault|vehicle|velvet|vendor|venture|venue|verb|verify|version|very|vessel|veteran|viable|vibrant|vicious|victory|video|view|village|vintage|violin|virtual|virus|visa|visit|visual|vital|vivid|vocal|voice|void|volcano|volume|vote|voyage|wage|wagon|wait|walk|wall|walnut|want|warfare|warm|warrior|wash|wasp|waste|water|wave|way|wealth|weapon|wear|weasel|weather|web|wedding|weekend|weird|welcome|west|wet|whale|what|wheat|wheel|when|where|whip|whisper|wide|width|wife|wild|will|win|window|wine|wing|wink|winner|winter|wire|wisdom|wise|wish|witness|wolf|woman|wonder|wood|wool|word|work|world|worry|worth|wrap|wreck|wrestle|wrist|write|wrong|yard|year|yellow|you|young|youth|zebra|zero|zone|zoo\".split(\"|\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/mnemonic/wordlists/en.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/nacl/decrypt.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/nacl/decrypt.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   naclDecrypt: function() { return /* binding */ naclDecrypt; }\n/* harmony export */ });\n/* harmony import */ var _tweetnacl_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tweetnacl.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/nacl/tweetnacl.js\");\n\n/**\n * @name naclDecrypt\n * @summary Decrypts a message using the supplied secretKey and nonce\n * @description\n * Returns an decrypted message, using the `secret` and `nonce`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { naclDecrypt } from '@polkadot/util-crypto';\n *\n * naclDecrypt([...], [...], [...]); // => [...]\n * ```\n */ function naclDecrypt(encrypted, nonce, secret) {\n    return (0,_tweetnacl_js__WEBPACK_IMPORTED_MODULE_0__.naclSecretboxOpen)(encrypted, nonce, secret);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vbmFjbC9kZWNyeXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW1EO0FBQ25EOzs7Ozs7Ozs7Ozs7O0NBYUMsR0FDTSxTQUFTQyxZQUFZQyxTQUFTLEVBQUVDLEtBQUssRUFBRUMsTUFBTTtJQUNoRCxPQUFPSixnRUFBaUJBLENBQUNFLFdBQVdDLE9BQU9DO0FBQy9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vbmFjbC9kZWNyeXB0LmpzPzgyMTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbmFjbFNlY3JldGJveE9wZW4gfSBmcm9tICcuL3R3ZWV0bmFjbC5qcyc7XG4vKipcbiAqIEBuYW1lIG5hY2xEZWNyeXB0XG4gKiBAc3VtbWFyeSBEZWNyeXB0cyBhIG1lc3NhZ2UgdXNpbmcgdGhlIHN1cHBsaWVkIHNlY3JldEtleSBhbmQgbm9uY2VcbiAqIEBkZXNjcmlwdGlvblxuICogUmV0dXJucyBhbiBkZWNyeXB0ZWQgbWVzc2FnZSwgdXNpbmcgdGhlIGBzZWNyZXRgIGFuZCBgbm9uY2VgLlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyBuYWNsRGVjcnlwdCB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsLWNyeXB0byc7XG4gKlxuICogbmFjbERlY3J5cHQoWy4uLl0sIFsuLi5dLCBbLi4uXSk7IC8vID0+IFsuLi5dXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG5hY2xEZWNyeXB0KGVuY3J5cHRlZCwgbm9uY2UsIHNlY3JldCkge1xuICAgIHJldHVybiBuYWNsU2VjcmV0Ym94T3BlbihlbmNyeXB0ZWQsIG5vbmNlLCBzZWNyZXQpO1xufVxuIl0sIm5hbWVzIjpbIm5hY2xTZWNyZXRib3hPcGVuIiwibmFjbERlY3J5cHQiLCJlbmNyeXB0ZWQiLCJub25jZSIsInNlY3JldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/nacl/decrypt.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/nacl/encrypt.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/nacl/encrypt.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   naclEncrypt: function() { return /* binding */ naclEncrypt; }\n/* harmony export */ });\n/* harmony import */ var _random_asU8a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../random/asU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/random/asU8a.js\");\n/* harmony import */ var _tweetnacl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tweetnacl.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/nacl/tweetnacl.js\");\n\n\n/**\n * @name naclEncrypt\n * @summary Encrypts a message using the supplied secretKey and nonce\n * @description\n * Returns an encrypted message, using the `secretKey` and `nonce`. If the `nonce` was not supplied, a random value is generated.\n * @example\n * <BR>\n *\n * ```javascript\n * import { naclEncrypt } from '@polkadot/util-crypto';\n *\n * naclEncrypt([...], [...]); // => [...]\n * ```\n */ function naclEncrypt(message, secret) {\n    let nonce = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : (0,_random_asU8a_js__WEBPACK_IMPORTED_MODULE_0__.randomAsU8a)(24);\n    return {\n        encrypted: (0,_tweetnacl_js__WEBPACK_IMPORTED_MODULE_1__.naclSecretbox)(message, nonce, secret),\n        nonce\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vbmFjbC9lbmNyeXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFpRDtBQUNGO0FBQy9DOzs7Ozs7Ozs7Ozs7O0NBYUMsR0FDTSxTQUFTRSxZQUFZQyxPQUFPLEVBQUVDLE1BQU07UUFBRUMsUUFBQUEsaUVBQVFMLDZEQUFXQSxDQUFDO0lBQzdELE9BQU87UUFDSE0sV0FBV0wsNERBQWFBLENBQUNFLFNBQVNFLE9BQU9EO1FBQ3pDQztJQUNKO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9uYWNsL2VuY3J5cHQuanM/MzkwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByYW5kb21Bc1U4YSB9IGZyb20gJy4uL3JhbmRvbS9hc1U4YS5qcyc7XG5pbXBvcnQgeyBuYWNsU2VjcmV0Ym94IH0gZnJvbSAnLi90d2VldG5hY2wuanMnO1xuLyoqXG4gKiBAbmFtZSBuYWNsRW5jcnlwdFxuICogQHN1bW1hcnkgRW5jcnlwdHMgYSBtZXNzYWdlIHVzaW5nIHRoZSBzdXBwbGllZCBzZWNyZXRLZXkgYW5kIG5vbmNlXG4gKiBAZGVzY3JpcHRpb25cbiAqIFJldHVybnMgYW4gZW5jcnlwdGVkIG1lc3NhZ2UsIHVzaW5nIHRoZSBgc2VjcmV0S2V5YCBhbmQgYG5vbmNlYC4gSWYgdGhlIGBub25jZWAgd2FzIG5vdCBzdXBwbGllZCwgYSByYW5kb20gdmFsdWUgaXMgZ2VuZXJhdGVkLlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyBuYWNsRW5jcnlwdCB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsLWNyeXB0byc7XG4gKlxuICogbmFjbEVuY3J5cHQoWy4uLl0sIFsuLi5dKTsgLy8gPT4gWy4uLl1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gbmFjbEVuY3J5cHQobWVzc2FnZSwgc2VjcmV0LCBub25jZSA9IHJhbmRvbUFzVThhKDI0KSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGVuY3J5cHRlZDogbmFjbFNlY3JldGJveChtZXNzYWdlLCBub25jZSwgc2VjcmV0KSxcbiAgICAgICAgbm9uY2VcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbInJhbmRvbUFzVThhIiwibmFjbFNlY3JldGJveCIsIm5hY2xFbmNyeXB0IiwibWVzc2FnZSIsInNlY3JldCIsIm5vbmNlIiwiZW5jcnlwdGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/nacl/encrypt.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/nacl/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/nacl/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   naclDecrypt: function() { return /* reexport safe */ _decrypt_js__WEBPACK_IMPORTED_MODULE_0__.naclDecrypt; },\n/* harmony export */   naclEncrypt: function() { return /* reexport safe */ _encrypt_js__WEBPACK_IMPORTED_MODULE_1__.naclEncrypt; }\n/* harmony export */ });\n/* harmony import */ var _decrypt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decrypt.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/nacl/decrypt.js\");\n/* harmony import */ var _encrypt_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./encrypt.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/nacl/encrypt.js\");\n/**\n * @summary Implements [NaCl](http://nacl.cr.yp.to/) secret-key authenticated encryption, public-key authenticated encryption\n */ \n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vbmFjbC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0NBRUMsR0FDMEM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL25hY2wvaW5kZXguanM/Y2I3ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBzdW1tYXJ5IEltcGxlbWVudHMgW05hQ2xdKGh0dHA6Ly9uYWNsLmNyLnlwLnRvLykgc2VjcmV0LWtleSBhdXRoZW50aWNhdGVkIGVuY3J5cHRpb24sIHB1YmxpYy1rZXkgYXV0aGVudGljYXRlZCBlbmNyeXB0aW9uXG4gKi9cbmV4cG9ydCB7IG5hY2xEZWNyeXB0IH0gZnJvbSAnLi9kZWNyeXB0LmpzJztcbmV4cG9ydCB7IG5hY2xFbmNyeXB0IH0gZnJvbSAnLi9lbmNyeXB0LmpzJztcbiJdLCJuYW1lcyI6WyJuYWNsRGVjcnlwdCIsIm5hY2xFbmNyeXB0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/nacl/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/nacl/tweetnacl.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/nacl/tweetnacl.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   naclSecretbox: function() { return /* binding */ naclSecretbox; },\n/* harmony export */   naclSecretboxOpen: function() { return /* binding */ naclSecretboxOpen; }\n/* harmony export */ });\n/* eslint-disable brace-style,camelcase,comma-spacing,curly,one-var,padding-line-between-statements,space-infix-ops */ function L32(x, c) {\n    return x << c | x >>> 32 - c;\n}\n_c = L32;\nfunction ld32(x, i) {\n    let u = x[i + 3] & 0xff;\n    u = u << 8 | x[i + 2] & 0xff;\n    u = u << 8 | x[i + 1] & 0xff;\n    return u << 8 | x[i + 0] & 0xff;\n}\nfunction st32(x, j, u) {\n    for(let i = 0; i < 4; i++){\n        x[j + i] = u & 255;\n        u >>>= 8;\n    }\n}\nfunction vn(x, xi, y, yi, n) {\n    let d = 0;\n    for(let i = 0; i < n; i++)d |= x[xi + i] ^ y[yi + i];\n    return (1 & d - 1 >>> 8) - 1;\n}\nfunction core(out, inp, k, c, h) {\n    const w = new Uint32Array(16), x = new Uint32Array(16), y = new Uint32Array(16), t = new Uint32Array(4);\n    let i, j, m;\n    for(i = 0; i < 4; i++){\n        x[5 * i] = ld32(c, 4 * i);\n        x[1 + i] = ld32(k, 4 * i);\n        x[6 + i] = ld32(inp, 4 * i);\n        x[11 + i] = ld32(k, 16 + 4 * i);\n    }\n    for(i = 0; i < 16; i++)y[i] = x[i];\n    for(i = 0; i < 20; i++){\n        for(j = 0; j < 4; j++){\n            for(m = 0; m < 4; m++)t[m] = x[(5 * j + 4 * m) % 16];\n            t[1] ^= L32(t[0] + t[3] | 0, 7);\n            t[2] ^= L32(t[1] + t[0] | 0, 9);\n            t[3] ^= L32(t[2] + t[1] | 0, 13);\n            t[0] ^= L32(t[3] + t[2] | 0, 18);\n            for(m = 0; m < 4; m++)w[4 * j + (j + m) % 4] = t[m];\n        }\n        for(m = 0; m < 16; m++)x[m] = w[m];\n    }\n    if (h) {\n        for(i = 0; i < 16; i++)x[i] = x[i] + y[i] | 0;\n        for(i = 0; i < 4; i++){\n            x[5 * i] = x[5 * i] - ld32(c, 4 * i) | 0;\n            x[6 + i] = x[6 + i] - ld32(inp, 4 * i) | 0;\n        }\n        for(i = 0; i < 4; i++){\n            st32(out, 4 * i, x[5 * i]);\n            st32(out, 16 + 4 * i, x[6 + i]);\n        }\n    } else {\n        for(i = 0; i < 16; i++)st32(out, 4 * i, x[i] + y[i] | 0);\n    }\n}\nconst sigma = new Uint8Array([\n    101,\n    120,\n    112,\n    97,\n    110,\n    100,\n    32,\n    51,\n    50,\n    45,\n    98,\n    121,\n    116,\n    101,\n    32,\n    107\n]);\nfunction crypto_stream_salsa20_xor(c, cpos, m, mpos, b, n, k) {\n    const z = new Uint8Array(16), x = new Uint8Array(64);\n    let u, i;\n    if (!b) return 0;\n    for(i = 0; i < 16; i++)z[i] = 0;\n    for(i = 0; i < 8; i++)z[i] = n[i];\n    while(b >= 64){\n        core(x, z, k, sigma, false);\n        for(i = 0; i < 64; i++)c[cpos + i] = (m ? m[mpos + i] : 0) ^ x[i];\n        u = 1;\n        for(i = 8; i < 16; i++){\n            u = u + (z[i] & 0xff) | 0;\n            z[i] = u & 0xff;\n            u >>>= 8;\n        }\n        b -= 64;\n        cpos += 64;\n        if (m) mpos += 64;\n    }\n    if (b > 0) {\n        core(x, z, k, sigma, false);\n        for(i = 0; i < b; i++)c[cpos + i] = (m ? m[mpos + i] : 0) ^ x[i];\n    }\n    return 0;\n}\nfunction crypto_stream_xor(c, cpos, m, mpos, d, n, k) {\n    const s = new Uint8Array(32);\n    core(s, n, k, sigma, true);\n    return crypto_stream_salsa20_xor(c, cpos, m, mpos, d, n.subarray(16), s);\n}\nfunction add1305(h, c) {\n    let u = 0;\n    for(let j = 0; j < 17; j++){\n        u = u + (h[j] + c[j] | 0) | 0;\n        h[j] = u & 255;\n        u >>>= 8;\n    }\n}\nconst minusp = new Uint32Array([\n    5,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    252\n]);\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n    let i, j, u;\n    const x = new Uint32Array(17), r = new Uint32Array(17), h = new Uint32Array(17), c = new Uint32Array(17), g = new Uint32Array(17);\n    for(j = 0; j < 17; j++)r[j] = h[j] = 0;\n    for(j = 0; j < 16; j++)r[j] = k[j];\n    r[3] &= 15;\n    r[4] &= 252;\n    r[7] &= 15;\n    r[8] &= 252;\n    r[11] &= 15;\n    r[12] &= 252;\n    r[15] &= 15;\n    while(n > 0){\n        for(j = 0; j < 17; j++)c[j] = 0;\n        for(j = 0; j < 16 && j < n; ++j)c[j] = m[mpos + j];\n        c[j] = 1;\n        mpos += j;\n        n -= j;\n        add1305(h, c);\n        for(i = 0; i < 17; i++){\n            x[i] = 0;\n            for(j = 0; j < 17; j++)x[i] = x[i] + h[j] * (j <= i ? r[i - j] : 320 * r[i + 17 - j] | 0) | 0 | 0;\n        }\n        for(i = 0; i < 17; i++)h[i] = x[i];\n        u = 0;\n        for(j = 0; j < 16; j++){\n            u = u + h[j] | 0;\n            h[j] = u & 255;\n            u >>>= 8;\n        }\n        u = u + h[16] | 0;\n        h[16] = u & 3;\n        u = 5 * (u >>> 2) | 0;\n        for(j = 0; j < 16; j++){\n            u = u + h[j] | 0;\n            h[j] = u & 255;\n            u >>>= 8;\n        }\n        u = u + h[16] | 0;\n        h[16] = u;\n    }\n    for(j = 0; j < 17; j++)g[j] = h[j];\n    add1305(h, minusp);\n    const s = -(h[16] >>> 7) | 0;\n    for(j = 0; j < 17; j++)h[j] ^= s & (g[j] ^ h[j]);\n    for(j = 0; j < 16; j++)c[j] = k[j + 16];\n    c[16] = 0;\n    add1305(h, c);\n    for(j = 0; j < 16; j++)out[outpos + j] = h[j];\n    return 0;\n}\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n    const x = new Uint8Array(16);\n    crypto_onetimeauth(x, 0, m, mpos, n, k);\n    return vn(h, hpos, x, 0, 16);\n}\nfunction crypto_secretbox(c, m, d, n, k) {\n    if (d < 32) return -1;\n    crypto_stream_xor(c, 0, m, 0, d, n, k);\n    crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n    for(let i = 0; i < 16; i++)c[i] = 0;\n    return 0;\n}\nfunction crypto_secretbox_open(m, c, d, n, k) {\n    const x = new Uint8Array(32);\n    if (d < 32) return -1;\n    crypto_stream_xor(x, 0, null, 0, 32, n, k);\n    if (crypto_onetimeauth_verify(c, 16, c, 32, d - 32, x) !== 0) return -1;\n    crypto_stream_xor(m, 0, c, 0, d, n, k);\n    for(let i = 0; i < 32; i++)m[i] = 0;\n    return 0;\n}\nconst crypto_secretbox_KEYBYTES = 32;\nconst crypto_secretbox_NONCEBYTES = 24;\nconst crypto_secretbox_ZEROBYTES = 32;\nconst crypto_secretbox_BOXZEROBYTES = 16;\nfunction checkLengths(k, n) {\n    if (k.length !== crypto_secretbox_KEYBYTES) throw new Error(\"bad key size\");\n    if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error(\"bad nonce size\");\n}\nfunction checkArrayTypes() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    for(let i = 0, count = args.length; i < count; i++){\n        if (!(args[i] instanceof Uint8Array)) throw new TypeError(\"unexpected type, use Uint8Array\");\n    }\n}\nfunction naclSecretbox(msg, nonce, key) {\n    checkArrayTypes(msg, nonce, key);\n    checkLengths(key, nonce);\n    const m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n    const c = new Uint8Array(m.length);\n    for(let i = 0; i < msg.length; i++)m[i + crypto_secretbox_ZEROBYTES] = msg[i];\n    crypto_secretbox(c, m, m.length, nonce, key);\n    return c.subarray(crypto_secretbox_BOXZEROBYTES);\n}\nfunction naclSecretboxOpen(box, nonce, key) {\n    checkArrayTypes(box, nonce, key);\n    checkLengths(key, nonce);\n    const c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n    const m = new Uint8Array(c.length);\n    for(let i = 0; i < box.length; i++)c[i + crypto_secretbox_BOXZEROBYTES] = box[i];\n    if (c.length < 32) return null;\n    if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n    return m.subarray(crypto_secretbox_ZEROBYTES);\n}\nvar _c;\n$RefreshReg$(_c, \"L32\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/nacl/tweetnacl.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/networks.js":
/*!********************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/networks.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   allNetworks: function() { return /* reexport safe */ _polkadot_networks__WEBPACK_IMPORTED_MODULE_0__.allNetworks; },\n/* harmony export */   availableNetworks: function() { return /* reexport safe */ _polkadot_networks__WEBPACK_IMPORTED_MODULE_0__.availableNetworks; },\n/* harmony export */   selectableNetworks: function() { return /* reexport safe */ _polkadot_networks__WEBPACK_IMPORTED_MODULE_0__.selectableNetworks; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_networks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/networks */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/interfaces.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vbmV0d29ya3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3RiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL25ldHdvcmtzLmpzPzUwNjMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgYWxsTmV0d29ya3MsIGF2YWlsYWJsZU5ldHdvcmtzLCBzZWxlY3RhYmxlTmV0d29ya3MgfSBmcm9tICdAcG9sa2Fkb3QvbmV0d29ya3MnO1xuIl0sIm5hbWVzIjpbImFsbE5ldHdvcmtzIiwiYXZhaWxhYmxlTmV0d29ya3MiLCJzZWxlY3RhYmxlTmV0d29ya3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/networks.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/defaults/genesis.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/defaults/genesis.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   knownGenesis: function() { return /* binding */ knownGenesis; }\n/* harmony export */ });\nconst knownGenesis = {\n    acala: [\n        \"0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c\"\n    ],\n    ajuna: [\n        \"0xe358eb1d11b31255a286c12e44fe6780b7edb171d657905a97e39f71d9c6c3ee\"\n    ],\n    \"aleph-node\": [\n        \"0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e\"\n    ],\n    astar: [\n        \"0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6\"\n    ],\n    basilisk: [\n        \"0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755\"\n    ],\n    bifrost: [\n        \"0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b\"\n    ],\n    \"bifrost-kusama\": [\n        \"0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed\"\n    ],\n    bittensor: [\n        \"0x2f0555cc76fc2840a25a6ea3b9637146806f1f44b090c175ffde2a7e5ab36c03\"\n    ],\n    centrifuge: [\n        \"0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82\",\n        \"0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5\"\n    ],\n    cere: [\n        \"0x81443836a9a24caaa23f1241897d1235717535711d1d3fe24eae4fdc942c092c\"\n    ],\n    composable: [\n        \"0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d\"\n    ],\n    darwinia: [\n        \"0xe71578b37a7c799b0ab4ee87ffa6f059a6b98f71f06fb8c84a8d88013a548ad6\"\n    ],\n    \"dock-mainnet\": [\n        \"0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae\",\n        \"0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9\"\n    ],\n    edgeware: [\n        \"0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b\"\n    ],\n    encointer: [\n        \"0x7dd99936c1e9e6d1ce7d90eb6f33bea8393b4bf87677d675aa63c9cb3e8c5b5b\"\n    ],\n    enjin: [\n        \"0xd8761d3c88f26dc12875c00d3165f7d67243d56fc85b4cf19937601a7916e5a9\"\n    ],\n    equilibrium: [\n        \"0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925\"\n    ],\n    frequency: [\n        \"0x4a587bf17a404e3572747add7aab7bbe56e805a5479c6c436f07f36fcc8d3ae1\"\n    ],\n    genshiro: [\n        \"0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243\"\n    ],\n    hydradx: [\n        \"0xafdc188f45c71dacbaa0b62e16a91f726c7b8699a9748cdf715459de6b7f366d\",\n        \"0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc\",\n        \"0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9\",\n        \"0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047\",\n        \"0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2\" // Snakenet Gen1\n    ],\n    integritee: [\n        \"0xcdedc8eadbfa209d3f207bba541e57c3c58a667b05a2e1d1e86353c9000758da\",\n        \"0xe13e7af377c64e83f95e0d70d5e5c3c01d697a84538776c5b9bbe0e7d7b6034c\" // on Polkadot\n    ],\n    \"interlay-parachain\": [\n        \"0xbf88efe70e9e0e916416e8bed61f2b45717f517d7f3523e33c7b001e5ffcbc72\"\n    ],\n    karura: [\n        \"0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b\"\n    ],\n    khala: [\n        \"0xd43540ba6d3eb4897c28a77d48cb5b729fea37603cbbfc7a86a73b72adb3be8d\"\n    ],\n    kulupu: [\n        \"0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba\"\n    ],\n    kusama: [\n        \"0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe\",\n        \"0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636\",\n        \"0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf\" // Kusama CC1\n    ],\n    matrixchain: [\n        \"0x3af4ff48ec76d2efc8476730f423ac07e25ad48f5f4c9dc39c778b164d808615\"\n    ],\n    nodle: [\n        \"0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21\"\n    ],\n    origintrail: [\n        \"0xe7e0962324a3b86c83404dbea483f25fb5dab4c224791c81b756cfc948006174\"\n    ],\n    p3d: [\n        \"0x6c5894837ad89b6d92b114a2fb3eafa8fe3d26a54848e3447015442cd6ef4e66\"\n    ],\n    parallel: [\n        \"0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97\"\n    ],\n    peaq: [\n        \"0xd2a5d385932d1f650dae03ef8e2748983779ee342c614f80854d32b8cd8fa48c\"\n    ],\n    pendulum: [\n        \"0x5d3c298622d5634ed019bf61ea4b71655030015bde9beb0d6a24743714462c86\"\n    ],\n    phala: [\n        \"0x1bb969d85965e4bb5a651abbedf21a54b6b31a21f66b5401cc3f1e286268d736\"\n    ],\n    picasso: [\n        \"0x6811a339673c9daa897944dcdac99c6e2939cc88245ed21951a0a3c9a2be75bc\",\n        \"0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c\"\n    ],\n    polimec: [\n        \"0x7eb9354488318e7549c722669dcbdcdc526f1fef1420e7944667212f3601fdbd\"\n    ],\n    polkadex: [\n        \"0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c\"\n    ],\n    polkadot: [\n        \"0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3\"\n    ],\n    polymesh: [\n        \"0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063\"\n    ],\n    quartz: [\n        \"0xcd4d732201ebe5d6b014edda071c4203e16867305332301dc8d092044b28e554\"\n    ],\n    rococo: [\n        \"0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e\",\n        \"0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897\",\n        \"0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770\",\n        \"0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff\",\n        \"0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a\",\n        \"0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9\",\n        \"0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779\",\n        \"0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215\",\n        \"0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9\",\n        \"0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147\",\n        \"0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd\",\n        \"0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299\"\n    ],\n    sora: [\n        \"0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5\"\n    ],\n    stafi: [\n        \"0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80\"\n    ],\n    statemine: [\n        \"0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a\"\n    ],\n    statemint: [\n        \"0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f\"\n    ],\n    subsocial: [\n        \"0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8\"\n    ],\n    ternoa: [\n        \"0x6859c81ca95ef624c9dfe4dc6e3381c33e5d6509e35e147092bfbc780f777c4e\"\n    ],\n    unique: [\n        \"0x84322d9cddbf35088f1e54e9a85c967a41a56a4f43445768125e61af166c7d31\"\n    ],\n    vara: [\n        \"0xfe1b4c55fd4d668101126434206571a7838a8b6b93a6d1b95d607e78e6c53763\"\n    ],\n    vtb: [\n        \"0x286bc8414c7000ce1d6ee6a834e29a54c1784814b76243eb77ed0b2c5573c60f\",\n        \"0x7483b89572fb2bd687c7b9a93b242d0b237f9aba463aba07ec24503931038aaa\"\n    ],\n    westend: [\n        \"0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e\"\n    ],\n    xxnetwork: [\n        \"0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa\"\n    ],\n    zeitgeist: [\n        \"0x1bf2a2ecb4a868de66ea8610f2ce7c8c43706561b6476031315f6640fe38e060\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/defaults/genesis.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/defaults/icons.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/defaults/icons.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   knownIcon: function() { return /* binding */ knownIcon; }\n/* harmony export */ });\nconst knownIcon = {\n    centrifuge: \"polkadot\",\n    kusama: \"polkadot\",\n    polkadot: \"polkadot\",\n    sora: \"polkadot\",\n    statemine: \"polkadot\",\n    statemint: \"polkadot\",\n    westmint: \"polkadot\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC9uZXR3b3Jrcy9kZWZhdWx0cy9pY29ucy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUEsWUFBWTtJQUNyQkMsWUFBWTtJQUNaQyxRQUFRO0lBQ1JDLFVBQVU7SUFDVkMsTUFBTTtJQUNOQyxXQUFXO0lBQ1hDLFdBQVc7SUFDWEMsVUFBVTtBQUNkLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9ub2RlX21vZHVsZXMvQHBvbGthZG90L25ldHdvcmtzL2RlZmF1bHRzL2ljb25zLmpzPzRiYzUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGtub3duSWNvbiA9IHtcbiAgICBjZW50cmlmdWdlOiAncG9sa2Fkb3QnLFxuICAgIGt1c2FtYTogJ3BvbGthZG90JyxcbiAgICBwb2xrYWRvdDogJ3BvbGthZG90JyxcbiAgICBzb3JhOiAncG9sa2Fkb3QnLFxuICAgIHN0YXRlbWluZTogJ3BvbGthZG90JyxcbiAgICBzdGF0ZW1pbnQ6ICdwb2xrYWRvdCcsXG4gICAgd2VzdG1pbnQ6ICdwb2xrYWRvdCdcbn07XG4iXSwibmFtZXMiOlsia25vd25JY29uIiwiY2VudHJpZnVnZSIsImt1c2FtYSIsInBvbGthZG90Iiwic29yYSIsInN0YXRlbWluZSIsInN0YXRlbWludCIsIndlc3RtaW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/defaults/icons.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/defaults/ledger.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/defaults/ledger.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   knownLedger: function() { return /* binding */ knownLedger; }\n/* harmony export */ });\nconst knownLedger = {\n    acala: 0x00000313,\n    ajuna: 0x00000162,\n    \"aleph-node\": 0x00000283,\n    astar: 0x0000032a,\n    bifrost: 0x00000314,\n    \"bifrost-kusama\": 0x00000314,\n    bittensor: 0x00000162,\n    centrifuge: 0x000002eb,\n    composable: 0x00000162,\n    darwinia: 0x00000162,\n    \"dock-mainnet\": 0x00000252,\n    edgeware: 0x0000020b,\n    encointer: 0x000001b2,\n    enjin: 0x00000483,\n    equilibrium: 0x05f5e0fd,\n    frequency: 0x0000082b,\n    genshiro: 0x05f5e0fc,\n    hydradx: 0x00000162,\n    integritee: 0x000007df,\n    \"interlay-parachain\": 0x00000162,\n    karura: 0x000002ae,\n    khala: 0x000001b2,\n    kusama: 0x000001b2,\n    matrixchain: 0x00000483,\n    nodle: 0x000003eb,\n    origintrail: 0x00000162,\n    parallel: 0x00000162,\n    peaq: 0x00000d0a,\n    pendulum: 0x00000162,\n    phala: 0x00000162,\n    picasso: 0x000001b2,\n    polimec: 0x00000d10,\n    polkadex: 0x0000031f,\n    polkadot: 0x00000162,\n    polymesh: 0x00000253,\n    quartz: 0x00000277,\n    sora: 0x00000269,\n    stafi: 0x0000038b,\n    statemine: 0x000001b2,\n    statemint: 0x00000162,\n    ternoa: 0x00003e3,\n    unique: 0x00000295,\n    vara: 0x00001370,\n    vtb: 0x000002b6,\n    xxnetwork: 0x000007a3,\n    zeitgeist: 0x00000162\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC9uZXR3b3Jrcy9kZWZhdWx0cy9sZWRnZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU1BLGNBQWM7SUFDdkJDLE9BQU87SUFDUEMsT0FBTztJQUNQLGNBQWM7SUFDZEMsT0FBTztJQUNQQyxTQUFTO0lBQ1Qsa0JBQWtCO0lBQ2xCQyxXQUFXO0lBQ1hDLFlBQVk7SUFDWkMsWUFBWTtJQUNaQyxVQUFVO0lBQ1YsZ0JBQWdCO0lBQ2hCQyxVQUFVO0lBQ1ZDLFdBQVc7SUFDWEMsT0FBTztJQUNQQyxhQUFhO0lBQ2JDLFdBQVc7SUFDWEMsVUFBVTtJQUNWQyxTQUFTO0lBQ1RDLFlBQVk7SUFDWixzQkFBc0I7SUFDdEJDLFFBQVE7SUFDUkMsT0FBTztJQUNQQyxRQUFRO0lBQ1JDLGFBQWE7SUFDYkMsT0FBTztJQUNQQyxhQUFhO0lBQ2JDLFVBQVU7SUFDVkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLE9BQU87SUFDUEMsU0FBUztJQUNUQyxTQUFTO0lBQ1RDLFVBQVU7SUFDVkMsVUFBVTtJQUNWQyxVQUFVO0lBQ1ZDLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxPQUFPO0lBQ1BDLFdBQVc7SUFDWEMsV0FBVztJQUNYQyxRQUFRO0lBQ1JDLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxLQUFLO0lBQ0xDLFdBQVc7SUFDWEMsV0FBVztBQUNmLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9ub2RlX21vZHVsZXMvQHBvbGthZG90L25ldHdvcmtzL2RlZmF1bHRzL2xlZGdlci5qcz9mZjU4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBrbm93bkxlZGdlciA9IHtcbiAgICBhY2FsYTogMHgwMDAwMDMxMyxcbiAgICBhanVuYTogMHgwMDAwMDE2MixcbiAgICAnYWxlcGgtbm9kZSc6IDB4MDAwMDAyODMsXG4gICAgYXN0YXI6IDB4MDAwMDAzMmEsXG4gICAgYmlmcm9zdDogMHgwMDAwMDMxNCxcbiAgICAnYmlmcm9zdC1rdXNhbWEnOiAweDAwMDAwMzE0LFxuICAgIGJpdHRlbnNvcjogMHgwMDAwMDE2MixcbiAgICBjZW50cmlmdWdlOiAweDAwMDAwMmViLFxuICAgIGNvbXBvc2FibGU6IDB4MDAwMDAxNjIsXG4gICAgZGFyd2luaWE6IDB4MDAwMDAxNjIsXG4gICAgJ2RvY2stbWFpbm5ldCc6IDB4MDAwMDAyNTIsXG4gICAgZWRnZXdhcmU6IDB4MDAwMDAyMGIsXG4gICAgZW5jb2ludGVyOiAweDAwMDAwMWIyLFxuICAgIGVuamluOiAweDAwMDAwNDgzLFxuICAgIGVxdWlsaWJyaXVtOiAweDA1ZjVlMGZkLFxuICAgIGZyZXF1ZW5jeTogMHgwMDAwMDgyYixcbiAgICBnZW5zaGlybzogMHgwNWY1ZTBmYyxcbiAgICBoeWRyYWR4OiAweDAwMDAwMTYyLFxuICAgIGludGVncml0ZWU6IDB4MDAwMDA3ZGYsXG4gICAgJ2ludGVybGF5LXBhcmFjaGFpbic6IDB4MDAwMDAxNjIsXG4gICAga2FydXJhOiAweDAwMDAwMmFlLFxuICAgIGtoYWxhOiAweDAwMDAwMWIyLFxuICAgIGt1c2FtYTogMHgwMDAwMDFiMixcbiAgICBtYXRyaXhjaGFpbjogMHgwMDAwMDQ4MyxcbiAgICBub2RsZTogMHgwMDAwMDNlYixcbiAgICBvcmlnaW50cmFpbDogMHgwMDAwMDE2MixcbiAgICBwYXJhbGxlbDogMHgwMDAwMDE2MixcbiAgICBwZWFxOiAweDAwMDAwZDBhLFxuICAgIHBlbmR1bHVtOiAweDAwMDAwMTYyLFxuICAgIHBoYWxhOiAweDAwMDAwMTYyLFxuICAgIHBpY2Fzc286IDB4MDAwMDAxYjIsXG4gICAgcG9saW1lYzogMHgwMDAwMGQxMCxcbiAgICBwb2xrYWRleDogMHgwMDAwMDMxZixcbiAgICBwb2xrYWRvdDogMHgwMDAwMDE2MixcbiAgICBwb2x5bWVzaDogMHgwMDAwMDI1MyxcbiAgICBxdWFydHo6IDB4MDAwMDAyNzcsXG4gICAgc29yYTogMHgwMDAwMDI2OSxcbiAgICBzdGFmaTogMHgwMDAwMDM4YixcbiAgICBzdGF0ZW1pbmU6IDB4MDAwMDAxYjIsIC8vIGNvbW1vbi1nb29kIG9uIEt1c2FtYSwgc2hhcmVzIGRlcml2YXRpb25cbiAgICBzdGF0ZW1pbnQ6IDB4MDAwMDAxNjIsIC8vIGNvbW1vbi1nb29kIG9uIFBvbGthZG90LCBzaGFyZXMgZGVyaXZhdGlvblxuICAgIHRlcm5vYTogMHgwMDAwM2UzLFxuICAgIHVuaXF1ZTogMHgwMDAwMDI5NSxcbiAgICB2YXJhOiAweDAwMDAxMzcwLFxuICAgIHZ0YjogMHgwMDAwMDJiNixcbiAgICB4eG5ldHdvcms6IDB4MDAwMDA3YTMsXG4gICAgemVpdGdlaXN0OiAweDAwMDAwMTYyXG59O1xuIl0sIm5hbWVzIjpbImtub3duTGVkZ2VyIiwiYWNhbGEiLCJhanVuYSIsImFzdGFyIiwiYmlmcm9zdCIsImJpdHRlbnNvciIsImNlbnRyaWZ1Z2UiLCJjb21wb3NhYmxlIiwiZGFyd2luaWEiLCJlZGdld2FyZSIsImVuY29pbnRlciIsImVuamluIiwiZXF1aWxpYnJpdW0iLCJmcmVxdWVuY3kiLCJnZW5zaGlybyIsImh5ZHJhZHgiLCJpbnRlZ3JpdGVlIiwia2FydXJhIiwia2hhbGEiLCJrdXNhbWEiLCJtYXRyaXhjaGFpbiIsIm5vZGxlIiwib3JpZ2ludHJhaWwiLCJwYXJhbGxlbCIsInBlYXEiLCJwZW5kdWx1bSIsInBoYWxhIiwicGljYXNzbyIsInBvbGltZWMiLCJwb2xrYWRleCIsInBvbGthZG90IiwicG9seW1lc2giLCJxdWFydHoiLCJzb3JhIiwic3RhZmkiLCJzdGF0ZW1pbmUiLCJzdGF0ZW1pbnQiLCJ0ZXJub2EiLCJ1bmlxdWUiLCJ2YXJhIiwidnRiIiwieHhuZXR3b3JrIiwiemVpdGdlaXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/defaults/ledger.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/defaults/testnets.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/defaults/testnets.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   knownTestnet: function() { return /* binding */ knownTestnet; }\n/* harmony export */ });\nconst knownTestnet = {\n    \"\": true,\n    \"cess-testnet\": true,\n    \"dock-testnet\": true,\n    jupiter: true,\n    \"mathchain-testnet\": true,\n    p3dt: true,\n    subspace_testnet: true,\n    \"zero-alphaville\": true\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC9uZXR3b3Jrcy9kZWZhdWx0cy90ZXN0bmV0cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUEsZUFBZTtJQUN4QixJQUFJO0lBQ0osZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQkMsU0FBUztJQUNULHFCQUFxQjtJQUNyQkMsTUFBTTtJQUNOQyxrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9ub2RlX21vZHVsZXMvQHBvbGthZG90L25ldHdvcmtzL2RlZmF1bHRzL3Rlc3RuZXRzLmpzPzg3MDAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGtub3duVGVzdG5ldCA9IHtcbiAgICAnJzogdHJ1ZSwgLy8gdGhpcyBpcyB0aGUgZGVmYXVsdCBub24tbmV0d29yayBlbnRyeVxuICAgICdjZXNzLXRlc3RuZXQnOiB0cnVlLFxuICAgICdkb2NrLXRlc3RuZXQnOiB0cnVlLFxuICAgIGp1cGl0ZXI6IHRydWUsXG4gICAgJ21hdGhjaGFpbi10ZXN0bmV0JzogdHJ1ZSxcbiAgICBwM2R0OiB0cnVlLFxuICAgIHN1YnNwYWNlX3Rlc3RuZXQ6IHRydWUsXG4gICAgJ3plcm8tYWxwaGF2aWxsZSc6IHRydWVcbn07XG4iXSwibmFtZXMiOlsia25vd25UZXN0bmV0IiwianVwaXRlciIsInAzZHQiLCJzdWJzcGFjZV90ZXN0bmV0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/defaults/testnets.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/interfaces.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/interfaces.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   allNetworks: function() { return /* binding */ allNetworks; },\n/* harmony export */   availableNetworks: function() { return /* binding */ availableNetworks; },\n/* harmony export */   selectableNetworks: function() { return /* binding */ selectableNetworks; }\n/* harmony export */ });\n/* harmony import */ var _substrate_ss58_registry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @substrate/ss58-registry */ \"(app-pages-browser)/./node_modules/@substrate/ss58-registry/esm/index.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaults/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/defaults/ledger.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaults/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/defaults/genesis.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./defaults/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/defaults/icons.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaults/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/defaults/testnets.js\");\n\n\nconst UNSORTED = [\n    0,\n    2,\n    42\n];\nconst TESTNETS = [\n    \"testnet\"\n];\nfunction toExpanded(o) {\n    var _o_decimals, _o_symbols;\n    const network = o.network || \"\";\n    const nameParts = network.replace(/_/g, \"-\").split(\"-\");\n    const n = o;\n    // ledger additions\n    n.slip44 = _defaults_index_js__WEBPACK_IMPORTED_MODULE_1__.knownLedger[network];\n    n.hasLedgerSupport = !!n.slip44;\n    // general items\n    n.genesisHash = _defaults_index_js__WEBPACK_IMPORTED_MODULE_2__.knownGenesis[network] || [];\n    n.icon = _defaults_index_js__WEBPACK_IMPORTED_MODULE_3__.knownIcon[network] || \"substrate\";\n    // filtering\n    n.isTestnet = !!_defaults_index_js__WEBPACK_IMPORTED_MODULE_4__.knownTestnet[network] || TESTNETS.includes(nameParts[nameParts.length - 1]);\n    n.isIgnored = n.isTestnet || !(o.standardAccount && ((_o_decimals = o.decimals) === null || _o_decimals === void 0 ? void 0 : _o_decimals.length) && ((_o_symbols = o.symbols) === null || _o_symbols === void 0 ? void 0 : _o_symbols.length)) && o.prefix !== 42;\n    return n;\n}\nfunction filterSelectable(param) {\n    let { genesisHash, prefix } = param;\n    return !!genesisHash.length || prefix === 42;\n}\nfunction filterAvailable(n) {\n    return !n.isIgnored && !!n.network;\n}\nfunction sortNetworks(a, b) {\n    const isUnSortedA = UNSORTED.includes(a.prefix);\n    const isUnSortedB = UNSORTED.includes(b.prefix);\n    return isUnSortedA === isUnSortedB ? isUnSortedA ? 0 : a.displayName.localeCompare(b.displayName) : isUnSortedA ? -1 : 1;\n}\nconst allNetworks = _substrate_ss58_registry__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map(toExpanded);\nconst availableNetworks = allNetworks.filter(filterAvailable).sort(sortNetworks);\nconst selectableNetworks = availableNetworks.filter(filterSelectable);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC9uZXR3b3Jrcy9pbnRlcmZhY2VzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXNEO0FBQ21DO0FBQ3pGLE1BQU1LLFdBQVc7SUFBQztJQUFHO0lBQUc7Q0FBRztBQUMzQixNQUFNQyxXQUFXO0lBQUM7Q0FBVTtBQUM1QixTQUFTQyxXQUFXQyxDQUFDO1FBYWJBLGFBQ0FBO0lBYkosTUFBTUMsVUFBVUQsRUFBRUMsT0FBTyxJQUFJO0lBQzdCLE1BQU1DLFlBQVlELFFBQVFFLE9BQU8sQ0FBQyxNQUFNLEtBQUtDLEtBQUssQ0FBQztJQUNuRCxNQUFNQyxJQUFJTDtJQUNWLG1CQUFtQjtJQUNuQkssRUFBRUMsTUFBTSxHQUFHWCwyREFBVyxDQUFDTSxRQUFRO0lBQy9CSSxFQUFFRSxnQkFBZ0IsR0FBRyxDQUFDLENBQUNGLEVBQUVDLE1BQU07SUFDL0IsZ0JBQWdCO0lBQ2hCRCxFQUFFRyxXQUFXLEdBQUdmLDREQUFZLENBQUNRLFFBQVEsSUFBSSxFQUFFO0lBQzNDSSxFQUFFSSxJQUFJLEdBQUdmLHlEQUFTLENBQUNPLFFBQVEsSUFBSTtJQUMvQixZQUFZO0lBQ1pJLEVBQUVLLFNBQVMsR0FBRyxDQUFDLENBQUNkLDREQUFZLENBQUNLLFFBQVEsSUFBSUgsU0FBU2EsUUFBUSxDQUFDVCxTQUFTLENBQUNBLFVBQVVVLE1BQU0sR0FBRyxFQUFFO0lBQzFGUCxFQUFFUSxTQUFTLEdBQUdSLEVBQUVLLFNBQVMsSUFBSyxDQUFFVixDQUFBQSxFQUFFYyxlQUFlLE1BQzdDZCxjQUFBQSxFQUFFZSxRQUFRLGNBQVZmLGtDQUFBQSxZQUFZWSxNQUFNLE9BQ2xCWixhQUFBQSxFQUFFZ0IsT0FBTyxjQUFUaEIsaUNBQUFBLFdBQVdZLE1BQU0sQ0FBRCxLQUNoQlosRUFBRWlCLE1BQU0sS0FBSztJQUNqQixPQUFPWjtBQUNYO0FBQ0EsU0FBU2EsaUJBQWlCLEtBQXVCO1FBQXZCLEVBQUVWLFdBQVcsRUFBRVMsTUFBTSxFQUFFLEdBQXZCO0lBQ3RCLE9BQU8sQ0FBQyxDQUFDVCxZQUFZSSxNQUFNLElBQUlLLFdBQVc7QUFDOUM7QUFDQSxTQUFTRSxnQkFBZ0JkLENBQUM7SUFDdEIsT0FBTyxDQUFDQSxFQUFFUSxTQUFTLElBQUksQ0FBQyxDQUFDUixFQUFFSixPQUFPO0FBQ3RDO0FBQ0EsU0FBU21CLGFBQWFDLENBQUMsRUFBRUMsQ0FBQztJQUN0QixNQUFNQyxjQUFjMUIsU0FBU2MsUUFBUSxDQUFDVSxFQUFFSixNQUFNO0lBQzlDLE1BQU1PLGNBQWMzQixTQUFTYyxRQUFRLENBQUNXLEVBQUVMLE1BQU07SUFDOUMsT0FBT00sZ0JBQWdCQyxjQUNqQkQsY0FDSSxJQUNBRixFQUFFSSxXQUFXLENBQUNDLGFBQWEsQ0FBQ0osRUFBRUcsV0FBVyxJQUM3Q0YsY0FDSSxDQUFDLElBQ0Q7QUFDZDtBQUNPLE1BQU1JLGNBQWNuQyxnRUFBY0EsQ0FBQ29DLEdBQUcsQ0FBQzdCLFlBQVk7QUFDbkQsTUFBTThCLG9CQUFvQkYsWUFBWUcsTUFBTSxDQUFDWCxpQkFBaUJZLElBQUksQ0FBQ1gsY0FBYztBQUNqRixNQUFNWSxxQkFBcUJILGtCQUFrQkMsTUFBTSxDQUFDWixrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9ub2RlX21vZHVsZXMvQHBvbGthZG90L25ldHdvcmtzL2ludGVyZmFjZXMuanM/NDgxOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQga25vd25TdWJzdHJhdGUgZnJvbSAnQHN1YnN0cmF0ZS9zczU4LXJlZ2lzdHJ5JztcbmltcG9ydCB7IGtub3duR2VuZXNpcywga25vd25JY29uLCBrbm93bkxlZGdlciwga25vd25UZXN0bmV0IH0gZnJvbSAnLi9kZWZhdWx0cy9pbmRleC5qcyc7XG5jb25zdCBVTlNPUlRFRCA9IFswLCAyLCA0Ml07XG5jb25zdCBURVNUTkVUUyA9IFsndGVzdG5ldCddO1xuZnVuY3Rpb24gdG9FeHBhbmRlZChvKSB7XG4gICAgY29uc3QgbmV0d29yayA9IG8ubmV0d29yayB8fCAnJztcbiAgICBjb25zdCBuYW1lUGFydHMgPSBuZXR3b3JrLnJlcGxhY2UoL18vZywgJy0nKS5zcGxpdCgnLScpO1xuICAgIGNvbnN0IG4gPSBvO1xuICAgIC8vIGxlZGdlciBhZGRpdGlvbnNcbiAgICBuLnNsaXA0NCA9IGtub3duTGVkZ2VyW25ldHdvcmtdO1xuICAgIG4uaGFzTGVkZ2VyU3VwcG9ydCA9ICEhbi5zbGlwNDQ7XG4gICAgLy8gZ2VuZXJhbCBpdGVtc1xuICAgIG4uZ2VuZXNpc0hhc2ggPSBrbm93bkdlbmVzaXNbbmV0d29ya10gfHwgW107XG4gICAgbi5pY29uID0ga25vd25JY29uW25ldHdvcmtdIHx8ICdzdWJzdHJhdGUnO1xuICAgIC8vIGZpbHRlcmluZ1xuICAgIG4uaXNUZXN0bmV0ID0gISFrbm93blRlc3RuZXRbbmV0d29ya10gfHwgVEVTVE5FVFMuaW5jbHVkZXMobmFtZVBhcnRzW25hbWVQYXJ0cy5sZW5ndGggLSAxXSk7XG4gICAgbi5pc0lnbm9yZWQgPSBuLmlzVGVzdG5ldCB8fCAoIShvLnN0YW5kYXJkQWNjb3VudCAmJlxuICAgICAgICBvLmRlY2ltYWxzPy5sZW5ndGggJiZcbiAgICAgICAgby5zeW1ib2xzPy5sZW5ndGgpICYmXG4gICAgICAgIG8ucHJlZml4ICE9PSA0Mik7XG4gICAgcmV0dXJuIG47XG59XG5mdW5jdGlvbiBmaWx0ZXJTZWxlY3RhYmxlKHsgZ2VuZXNpc0hhc2gsIHByZWZpeCB9KSB7XG4gICAgcmV0dXJuICEhZ2VuZXNpc0hhc2gubGVuZ3RoIHx8IHByZWZpeCA9PT0gNDI7XG59XG5mdW5jdGlvbiBmaWx0ZXJBdmFpbGFibGUobikge1xuICAgIHJldHVybiAhbi5pc0lnbm9yZWQgJiYgISFuLm5ldHdvcms7XG59XG5mdW5jdGlvbiBzb3J0TmV0d29ya3MoYSwgYikge1xuICAgIGNvbnN0IGlzVW5Tb3J0ZWRBID0gVU5TT1JURUQuaW5jbHVkZXMoYS5wcmVmaXgpO1xuICAgIGNvbnN0IGlzVW5Tb3J0ZWRCID0gVU5TT1JURUQuaW5jbHVkZXMoYi5wcmVmaXgpO1xuICAgIHJldHVybiBpc1VuU29ydGVkQSA9PT0gaXNVblNvcnRlZEJcbiAgICAgICAgPyBpc1VuU29ydGVkQVxuICAgICAgICAgICAgPyAwXG4gICAgICAgICAgICA6IGEuZGlzcGxheU5hbWUubG9jYWxlQ29tcGFyZShiLmRpc3BsYXlOYW1lKVxuICAgICAgICA6IGlzVW5Tb3J0ZWRBXG4gICAgICAgICAgICA/IC0xXG4gICAgICAgICAgICA6IDE7XG59XG5leHBvcnQgY29uc3QgYWxsTmV0d29ya3MgPSBrbm93blN1YnN0cmF0ZS5tYXAodG9FeHBhbmRlZCk7XG5leHBvcnQgY29uc3QgYXZhaWxhYmxlTmV0d29ya3MgPSBhbGxOZXR3b3Jrcy5maWx0ZXIoZmlsdGVyQXZhaWxhYmxlKS5zb3J0KHNvcnROZXR3b3Jrcyk7XG5leHBvcnQgY29uc3Qgc2VsZWN0YWJsZU5ldHdvcmtzID0gYXZhaWxhYmxlTmV0d29ya3MuZmlsdGVyKGZpbHRlclNlbGVjdGFibGUpO1xuIl0sIm5hbWVzIjpbImtub3duU3Vic3RyYXRlIiwia25vd25HZW5lc2lzIiwia25vd25JY29uIiwia25vd25MZWRnZXIiLCJrbm93blRlc3RuZXQiLCJVTlNPUlRFRCIsIlRFU1RORVRTIiwidG9FeHBhbmRlZCIsIm8iLCJuZXR3b3JrIiwibmFtZVBhcnRzIiwicmVwbGFjZSIsInNwbGl0IiwibiIsInNsaXA0NCIsImhhc0xlZGdlclN1cHBvcnQiLCJnZW5lc2lzSGFzaCIsImljb24iLCJpc1Rlc3RuZXQiLCJpbmNsdWRlcyIsImxlbmd0aCIsImlzSWdub3JlZCIsInN0YW5kYXJkQWNjb3VudCIsImRlY2ltYWxzIiwic3ltYm9scyIsInByZWZpeCIsImZpbHRlclNlbGVjdGFibGUiLCJmaWx0ZXJBdmFpbGFibGUiLCJzb3J0TmV0d29ya3MiLCJhIiwiYiIsImlzVW5Tb3J0ZWRBIiwiaXNVblNvcnRlZEIiLCJkaXNwbGF5TmFtZSIsImxvY2FsZUNvbXBhcmUiLCJhbGxOZXR3b3JrcyIsIm1hcCIsImF2YWlsYWJsZU5ldHdvcmtzIiwiZmlsdGVyIiwic29ydCIsInNlbGVjdGFibGVOZXR3b3JrcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/interfaces.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/packageInfo.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/packageInfo.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   packageInfo: function() { return /* binding */ packageInfo; }\n/* harmony export */ });\nconst packageInfo = {\n    name: \"@polkadot/networks\",\n    path:  true ? new URL(\"file:///C:/Users/crist/monkeyscanjump/download-manager/node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/packageInfo.js\").pathname.substring(0, new URL(\"file:///C:/Users/crist/monkeyscanjump/download-manager/node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/packageInfo.js\").pathname.lastIndexOf(\"/\") + 1) : 0,\n    type: \"esm\",\n    version: \"13.4.3\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC9uZXR3b3Jrcy9wYWNrYWdlSW5mby5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUEsY0FBYztJQUFFQyxNQUFNO0lBQXNCQyxNQUFNLEtBQStCLEdBQUksSUFBSUUsSUFBSSwwSUFBZSxFQUFFQyxRQUFRLENBQUNDLFNBQVMsQ0FBQyxHQUFHLElBQUlGLElBQUksMElBQWUsRUFBRUMsUUFBUSxDQUFDRSxXQUFXLENBQUMsT0FBTyxLQUFLO0lBQVFDLE1BQU07SUFBT0MsU0FBUztBQUFTLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9ub2RlX21vZHVsZXMvQHBvbGthZG90L25ldHdvcmtzL3BhY2thZ2VJbmZvLmpzPzdiODciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHBhY2thZ2VJbmZvID0geyBuYW1lOiAnQHBvbGthZG90L25ldHdvcmtzJywgcGF0aDogKGltcG9ydC5tZXRhICYmIGltcG9ydC5tZXRhLnVybCkgPyBuZXcgVVJMKGltcG9ydC5tZXRhLnVybCkucGF0aG5hbWUuc3Vic3RyaW5nKDAsIG5ldyBVUkwoaW1wb3J0Lm1ldGEudXJsKS5wYXRobmFtZS5sYXN0SW5kZXhPZignLycpICsgMSkgOiAnYXV0bycsIHR5cGU6ICdlc20nLCB2ZXJzaW9uOiAnMTMuNC4zJyB9O1xuIl0sIm5hbWVzIjpbInBhY2thZ2VJbmZvIiwibmFtZSIsInBhdGgiLCJ1cmwiLCJVUkwiLCJwYXRobmFtZSIsInN1YnN0cmluZyIsImxhc3RJbmRleE9mIiwidHlwZSIsInZlcnNpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/packageInfo.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/x-bigint/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/node_modules/@polkadot/x-bigint/index.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BigInt: function() { return /* binding */ BigInt; },\n/* harmony export */   packageInfo: function() { return /* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/x-global */ \"(app-pages-browser)/./node_modules/@polkadot/x-global/index.js\");\n/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./packageInfo.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/x-bigint/packageInfo.js\");\n\n\n/**\n * @internal\n *\n * There are _still_ some older environments (specifically RN < 0.70), that does\n * not have proper BigInt support - a non-working fallback is provided for those.\n *\n * We detect availability of BigInt upon usage, so this is purely to allow functional\n * compilation & bundling. Since we have operators such as *+-/ top-level, a number-ish\n * result is used here.\n */ function invalidFallback() {\n    return Number.NaN;\n}\nconst BigInt = /*#__PURE__*/ (0,_polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.extractGlobal)(\"BigInt\", invalidFallback);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC94LWJpZ2ludC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW1EO0FBQ0o7QUFDL0M7Ozs7Ozs7OztDQVNDLEdBQ0QsU0FBU0U7SUFDTCxPQUFPQyxPQUFPQyxHQUFHO0FBQ3JCO0FBQ08sTUFBTUMsU0FBUyxXQUFXLEdBQUdMLGlFQUFhQSxDQUFDLFVBQVVFLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QveC1iaWdpbnQvaW5kZXguanM/ZjM5YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBleHRyYWN0R2xvYmFsIH0gZnJvbSAnQHBvbGthZG90L3gtZ2xvYmFsJztcbmV4cG9ydCB7IHBhY2thZ2VJbmZvIH0gZnJvbSAnLi9wYWNrYWdlSW5mby5qcyc7XG4vKipcbiAqIEBpbnRlcm5hbFxuICpcbiAqIFRoZXJlIGFyZSBfc3RpbGxfIHNvbWUgb2xkZXIgZW52aXJvbm1lbnRzIChzcGVjaWZpY2FsbHkgUk4gPCAwLjcwKSwgdGhhdCBkb2VzXG4gKiBub3QgaGF2ZSBwcm9wZXIgQmlnSW50IHN1cHBvcnQgLSBhIG5vbi13b3JraW5nIGZhbGxiYWNrIGlzIHByb3ZpZGVkIGZvciB0aG9zZS5cbiAqXG4gKiBXZSBkZXRlY3QgYXZhaWxhYmlsaXR5IG9mIEJpZ0ludCB1cG9uIHVzYWdlLCBzbyB0aGlzIGlzIHB1cmVseSB0byBhbGxvdyBmdW5jdGlvbmFsXG4gKiBjb21waWxhdGlvbiAmIGJ1bmRsaW5nLiBTaW5jZSB3ZSBoYXZlIG9wZXJhdG9ycyBzdWNoIGFzICorLS8gdG9wLWxldmVsLCBhIG51bWJlci1pc2hcbiAqIHJlc3VsdCBpcyB1c2VkIGhlcmUuXG4gKi9cbmZ1bmN0aW9uIGludmFsaWRGYWxsYmFjaygpIHtcbiAgICByZXR1cm4gTnVtYmVyLk5hTjtcbn1cbmV4cG9ydCBjb25zdCBCaWdJbnQgPSAvKiNfX1BVUkVfXyovIGV4dHJhY3RHbG9iYWwoJ0JpZ0ludCcsIGludmFsaWRGYWxsYmFjayk7XG4iXSwibmFtZXMiOlsiZXh0cmFjdEdsb2JhbCIsInBhY2thZ2VJbmZvIiwiaW52YWxpZEZhbGxiYWNrIiwiTnVtYmVyIiwiTmFOIiwiQmlnSW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/x-bigint/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/x-bigint/packageInfo.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/node_modules/@polkadot/x-bigint/packageInfo.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   packageInfo: function() { return /* binding */ packageInfo; }\n/* harmony export */ });\nconst packageInfo = {\n    name: \"@polkadot/x-bigint\",\n    path:  true ? new URL(\"file:///C:/Users/crist/monkeyscanjump/download-manager/node_modules/@polkadot/util-crypto/node_modules/@polkadot/x-bigint/packageInfo.js\").pathname.substring(0, new URL(\"file:///C:/Users/crist/monkeyscanjump/download-manager/node_modules/@polkadot/util-crypto/node_modules/@polkadot/x-bigint/packageInfo.js\").pathname.lastIndexOf(\"/\") + 1) : 0,\n    type: \"esm\",\n    version: \"13.4.3\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC94LWJpZ2ludC9wYWNrYWdlSW5mby5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUEsY0FBYztJQUFFQyxNQUFNO0lBQXNCQyxNQUFNLEtBQStCLEdBQUksSUFBSUUsSUFBSSwwSUFBZSxFQUFFQyxRQUFRLENBQUNDLFNBQVMsQ0FBQyxHQUFHLElBQUlGLElBQUksMElBQWUsRUFBRUMsUUFBUSxDQUFDRSxXQUFXLENBQUMsT0FBTyxLQUFLO0lBQVFDLE1BQU07SUFBT0MsU0FBUztBQUFTLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9ub2RlX21vZHVsZXMvQHBvbGthZG90L3gtYmlnaW50L3BhY2thZ2VJbmZvLmpzP2Y3YmQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHBhY2thZ2VJbmZvID0geyBuYW1lOiAnQHBvbGthZG90L3gtYmlnaW50JywgcGF0aDogKGltcG9ydC5tZXRhICYmIGltcG9ydC5tZXRhLnVybCkgPyBuZXcgVVJMKGltcG9ydC5tZXRhLnVybCkucGF0aG5hbWUuc3Vic3RyaW5nKDAsIG5ldyBVUkwoaW1wb3J0Lm1ldGEudXJsKS5wYXRobmFtZS5sYXN0SW5kZXhPZignLycpICsgMSkgOiAnYXV0bycsIHR5cGU6ICdlc20nLCB2ZXJzaW9uOiAnMTMuNC4zJyB9O1xuIl0sIm5hbWVzIjpbInBhY2thZ2VJbmZvIiwibmFtZSIsInBhdGgiLCJ1cmwiLCJVUkwiLCJwYXRobmFtZSIsInN1YnN0cmluZyIsImxhc3RJbmRleE9mIiwidHlwZSIsInZlcnNpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/x-bigint/packageInfo.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/x-bigint/shim.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/node_modules/@polkadot/x-bigint/shim.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/x-bigint */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/x-bigint/index.js\");\n/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/x-global */ \"(app-pages-browser)/./node_modules/@polkadot/x-global/index.js\");\n\n\n(0,_polkadot_x_global__WEBPACK_IMPORTED_MODULE_0__.exposeGlobal)(\"BigInt\", _polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_1__.BigInt);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC94LWJpZ2ludC9zaGltLmpzIiwibWFwcGluZ3MiOiI7OztBQUE0QztBQUNNO0FBQ2xEQyxnRUFBWUEsQ0FBQyxVQUFVRCxzREFBTUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9ub2RlX21vZHVsZXMvQHBvbGthZG90L3gtYmlnaW50L3NoaW0uanM/NjE1OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCaWdJbnQgfSBmcm9tICdAcG9sa2Fkb3QveC1iaWdpbnQnO1xuaW1wb3J0IHsgZXhwb3NlR2xvYmFsIH0gZnJvbSAnQHBvbGthZG90L3gtZ2xvYmFsJztcbmV4cG9zZUdsb2JhbCgnQmlnSW50JywgQmlnSW50KTtcbiJdLCJuYW1lcyI6WyJCaWdJbnQiLCJleHBvc2VHbG9iYWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/x-bigint/shim.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/packageDetect.js":
/*!*************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/packageDetect.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _polkadot_networks_packageInfo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/networks/packageInfo */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/packageInfo.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/detectPackage.js\");\n/* harmony import */ var _polkadot_util_packageInfo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polkadot/util/packageInfo */ \"(app-pages-browser)/./node_modules/@polkadot/util/packageInfo.js\");\n/* harmony import */ var _polkadot_x_randomvalues__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polkadot/x-randomvalues */ \"(app-pages-browser)/./node_modules/@polkadot/x-randomvalues/packageInfo.js\");\n/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./packageInfo.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/packageInfo.js\");\n\n\n\n\n\n(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.detectPackage)(_packageInfo_js__WEBPACK_IMPORTED_MODULE_1__.packageInfo, null, [\n    _polkadot_networks_packageInfo__WEBPACK_IMPORTED_MODULE_2__.packageInfo,\n    _polkadot_x_randomvalues__WEBPACK_IMPORTED_MODULE_3__.packageInfo,\n    _polkadot_util_packageInfo__WEBPACK_IMPORTED_MODULE_4__.packageInfo\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vcGFja2FnZURldGVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0U7QUFDekI7QUFDc0I7QUFDQTtBQUN0QjtBQUMvQ0UsNkRBQWFBLENBQUNGLHdEQUFXQSxFQUFFLE1BQU07SUFBQ0MsdUVBQU9BO0lBQUVHLGlFQUFVQTtJQUFFRCxtRUFBUUE7Q0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL3BhY2thZ2VEZXRlY3QuanM/ZmI3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYWNrYWdlSW5mbyBhcyBuZXRJbmZvIH0gZnJvbSAnQHBvbGthZG90L25ldHdvcmtzL3BhY2thZ2VJbmZvJztcbmltcG9ydCB7IGRldGVjdFBhY2thZ2UgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG5pbXBvcnQgeyBwYWNrYWdlSW5mbyBhcyB1dGlsSW5mbyB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsL3BhY2thZ2VJbmZvJztcbmltcG9ydCB7IHBhY2thZ2VJbmZvIGFzIHJhbmRvbUluZm8gfSBmcm9tICdAcG9sa2Fkb3QveC1yYW5kb212YWx1ZXMnO1xuaW1wb3J0IHsgcGFja2FnZUluZm8gfSBmcm9tICcuL3BhY2thZ2VJbmZvLmpzJztcbmRldGVjdFBhY2thZ2UocGFja2FnZUluZm8sIG51bGwsIFtuZXRJbmZvLCByYW5kb21JbmZvLCB1dGlsSW5mb10pO1xuIl0sIm5hbWVzIjpbInBhY2thZ2VJbmZvIiwibmV0SW5mbyIsImRldGVjdFBhY2thZ2UiLCJ1dGlsSW5mbyIsInJhbmRvbUluZm8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/packageDetect.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/packageInfo.js":
/*!***********************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/packageInfo.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   packageInfo: function() { return /* binding */ packageInfo; }\n/* harmony export */ });\nconst packageInfo = {\n    name: \"@polkadot/util-crypto\",\n    path:  true ? new URL(\"file:///C:/Users/crist/monkeyscanjump/download-manager/node_modules/@polkadot/util-crypto/packageInfo.js\").pathname.substring(0, new URL(\"file:///C:/Users/crist/monkeyscanjump/download-manager/node_modules/@polkadot/util-crypto/packageInfo.js\").pathname.lastIndexOf(\"/\") + 1) : 0,\n    type: \"esm\",\n    version: \"13.4.3\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vcGFja2FnZUluZm8uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU1BLGNBQWM7SUFBRUMsTUFBTTtJQUF5QkMsTUFBTSxLQUErQixHQUFJLElBQUlFLElBQUksMEdBQWUsRUFBRUMsUUFBUSxDQUFDQyxTQUFTLENBQUMsR0FBRyxJQUFJRixJQUFJLDBHQUFlLEVBQUVDLFFBQVEsQ0FBQ0UsV0FBVyxDQUFDLE9BQU8sS0FBSztJQUFRQyxNQUFNO0lBQU9DLFNBQVM7QUFBUyxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vcGFja2FnZUluZm8uanM/N2I1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcGFja2FnZUluZm8gPSB7IG5hbWU6ICdAcG9sa2Fkb3QvdXRpbC1jcnlwdG8nLCBwYXRoOiAoaW1wb3J0Lm1ldGEgJiYgaW1wb3J0Lm1ldGEudXJsKSA/IG5ldyBVUkwoaW1wb3J0Lm1ldGEudXJsKS5wYXRobmFtZS5zdWJzdHJpbmcoMCwgbmV3IFVSTChpbXBvcnQubWV0YS51cmwpLnBhdGhuYW1lLmxhc3RJbmRleE9mKCcvJykgKyAxKSA6ICdhdXRvJywgdHlwZTogJ2VzbScsIHZlcnNpb246ICcxMy40LjMnIH07XG4iXSwibmFtZXMiOlsicGFja2FnZUluZm8iLCJuYW1lIiwicGF0aCIsInVybCIsIlVSTCIsInBhdGhuYW1lIiwic3Vic3RyaW5nIiwibGFzdEluZGV4T2YiLCJ0eXBlIiwidmVyc2lvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/packageInfo.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/pbkdf2/encode.js":
/*!*************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/pbkdf2/encode.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pbkdf2Encode: function() { return /* binding */ pbkdf2Encode; }\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_pbkdf2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @noble/hashes/pbkdf2 */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/pbkdf2.js\");\n/* harmony import */ var _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @noble/hashes/sha512 */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/sha512.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/has.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n/* harmony import */ var _random_asU8a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../random/asU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/random/asU8a.js\");\n\n\n\n\n\nfunction pbkdf2Encode(passphrase) {\n    let salt = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : (0,_random_asU8a_js__WEBPACK_IMPORTED_MODULE_0__.randomAsU8a)(), rounds = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 2048, onlyJs = arguments.length > 3 ? arguments[3] : void 0;\n    const u8aPass = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToU8a)(passphrase);\n    const u8aSalt = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToU8a)(salt);\n    return {\n        password: !_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_3__.isReady)() ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_3__.pbkdf2)(u8aPass, u8aSalt, rounds) : (0,_noble_hashes_pbkdf2__WEBPACK_IMPORTED_MODULE_4__.pbkdf2)(_noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_5__.sha512, u8aPass, u8aSalt, {\n            c: rounds,\n            dkLen: 64\n        }),\n        rounds,\n        salt\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vcGJrZGYyL2VuY29kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTBEO0FBQ1o7QUFDTztBQUNHO0FBQ1A7QUFDMUMsU0FBU08sYUFBYUMsVUFBVTtRQUFFQyxPQUFBQSxpRUFBT0gsNkRBQVdBLElBQUlJLFNBQUFBLGlFQUFTLE1BQU1DO0lBQzFFLE1BQU1DLFVBQVVSLHdEQUFRQSxDQUFDSTtJQUN6QixNQUFNSyxVQUFVVCx3REFBUUEsQ0FBQ0s7SUFDekIsT0FBTztRQUNISyxVQUFVLENBQUNYLHFEQUFTQSxJQUFLLENBQUNRLFVBQVVOLDhEQUFPQSxLQUNyQ0wsNkRBQU1BLENBQUNZLFNBQVNDLFNBQVNILFVBQ3pCVCw0REFBUUEsQ0FBQ0Msd0RBQU1BLEVBQUVVLFNBQVNDLFNBQVM7WUFBRUUsR0FBR0w7WUFBUU0sT0FBTztRQUFHO1FBQ2hFTjtRQUNBRDtJQUNKO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9wYmtkZjIvZW5jb2RlLmpzP2I0NzgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGJrZGYyIGFzIHBia2RmMkpzIH0gZnJvbSAnQG5vYmxlL2hhc2hlcy9wYmtkZjInO1xuaW1wb3J0IHsgc2hhNTEyIH0gZnJvbSAnQG5vYmxlL2hhc2hlcy9zaGE1MTInO1xuaW1wb3J0IHsgaGFzQmlnSW50LCB1OGFUb1U4YSB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbmltcG9ydCB7IGlzUmVhZHksIHBia2RmMiB9IGZyb20gJ0Bwb2xrYWRvdC93YXNtLWNyeXB0byc7XG5pbXBvcnQgeyByYW5kb21Bc1U4YSB9IGZyb20gJy4uL3JhbmRvbS9hc1U4YS5qcyc7XG5leHBvcnQgZnVuY3Rpb24gcGJrZGYyRW5jb2RlKHBhc3NwaHJhc2UsIHNhbHQgPSByYW5kb21Bc1U4YSgpLCByb3VuZHMgPSAyMDQ4LCBvbmx5SnMpIHtcbiAgICBjb25zdCB1OGFQYXNzID0gdThhVG9VOGEocGFzc3BocmFzZSk7XG4gICAgY29uc3QgdThhU2FsdCA9IHU4YVRvVThhKHNhbHQpO1xuICAgIHJldHVybiB7XG4gICAgICAgIHBhc3N3b3JkOiAhaGFzQmlnSW50IHx8ICghb25seUpzICYmIGlzUmVhZHkoKSlcbiAgICAgICAgICAgID8gcGJrZGYyKHU4YVBhc3MsIHU4YVNhbHQsIHJvdW5kcylcbiAgICAgICAgICAgIDogcGJrZGYySnMoc2hhNTEyLCB1OGFQYXNzLCB1OGFTYWx0LCB7IGM6IHJvdW5kcywgZGtMZW46IDY0IH0pLFxuICAgICAgICByb3VuZHMsXG4gICAgICAgIHNhbHRcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbInBia2RmMiIsInBia2RmMkpzIiwic2hhNTEyIiwiaGFzQmlnSW50IiwidThhVG9VOGEiLCJpc1JlYWR5IiwicmFuZG9tQXNVOGEiLCJwYmtkZjJFbmNvZGUiLCJwYXNzcGhyYXNlIiwic2FsdCIsInJvdW5kcyIsIm9ubHlKcyIsInU4YVBhc3MiLCJ1OGFTYWx0IiwicGFzc3dvcmQiLCJjIiwiZGtMZW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/pbkdf2/encode.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/pbkdf2/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/pbkdf2/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pbkdf2Encode: function() { return /* reexport safe */ _encode_js__WEBPACK_IMPORTED_MODULE_0__.pbkdf2Encode; }\n/* harmony export */ });\n/* harmony import */ var _encode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encode.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/pbkdf2/encode.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vcGJrZGYyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vcGJrZGYyL2luZGV4LmpzP2U4YzYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgcGJrZGYyRW5jb2RlIH0gZnJvbSAnLi9lbmNvZGUuanMnO1xuIl0sIm5hbWVzIjpbInBia2RmMkVuY29kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/pbkdf2/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/random/asNumber.js":
/*!***************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/random/asNumber.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   randomAsNumber: function() { return /* binding */ randomAsNumber; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/hex/toBn.js\");\n/* harmony import */ var _asU8a_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./asU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/random/asU8a.js\");\n\n\nconst BN_53 = new _polkadot_util__WEBPACK_IMPORTED_MODULE_0__(9007199254740991);\n/**\n * @name randomAsNumber\n * @summary Creates a random number from random bytes.\n * @description\n * Returns a random number generated from the secure bytes.\n * @example\n * <BR>\n *\n * ```javascript\n * import { randomAsNumber } from '@polkadot/util-crypto';\n *\n * randomAsNumber(); // => <random number>\n * ```\n */ function randomAsNumber() {\n    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.hexToBn)((0,_asU8a_js__WEBPACK_IMPORTED_MODULE_2__.randomAsHex)(8)).and(BN_53).toNumber();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vcmFuZG9tL2FzTnVtYmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNkM7QUFDSjtBQUN6QyxNQUFNRyxRQUFRLElBQUlILDJDQUFFQSxDQUFDO0FBQ3JCOzs7Ozs7Ozs7Ozs7O0NBYUMsR0FDTSxTQUFTSTtJQUNaLE9BQU9ILHVEQUFPQSxDQUFDQyxzREFBV0EsQ0FBQyxJQUFJRyxHQUFHLENBQUNGLE9BQU9HLFFBQVE7QUFDdEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9yYW5kb20vYXNOdW1iZXIuanM/M2QxYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCTiwgaGV4VG9CbiB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbmltcG9ydCB7IHJhbmRvbUFzSGV4IH0gZnJvbSAnLi9hc1U4YS5qcyc7XG5jb25zdCBCTl81MyA9IG5ldyBCTigwYjExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExKTtcbi8qKlxuICogQG5hbWUgcmFuZG9tQXNOdW1iZXJcbiAqIEBzdW1tYXJ5IENyZWF0ZXMgYSByYW5kb20gbnVtYmVyIGZyb20gcmFuZG9tIGJ5dGVzLlxuICogQGRlc2NyaXB0aW9uXG4gKiBSZXR1cm5zIGEgcmFuZG9tIG51bWJlciBnZW5lcmF0ZWQgZnJvbSB0aGUgc2VjdXJlIGJ5dGVzLlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyByYW5kb21Bc051bWJlciB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsLWNyeXB0byc7XG4gKlxuICogcmFuZG9tQXNOdW1iZXIoKTsgLy8gPT4gPHJhbmRvbSBudW1iZXI+XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJhbmRvbUFzTnVtYmVyKCkge1xuICAgIHJldHVybiBoZXhUb0JuKHJhbmRvbUFzSGV4KDgpKS5hbmQoQk5fNTMpLnRvTnVtYmVyKCk7XG59XG4iXSwibmFtZXMiOlsiQk4iLCJoZXhUb0JuIiwicmFuZG9tQXNIZXgiLCJCTl81MyIsInJhbmRvbUFzTnVtYmVyIiwiYW5kIiwidG9OdW1iZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/random/asNumber.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/random/asU8a.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/random/asU8a.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   randomAsHex: function() { return /* binding */ randomAsHex; },\n/* harmony export */   randomAsU8a: function() { return /* binding */ randomAsU8a; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_x_randomvalues__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/x-randomvalues */ \"(app-pages-browser)/./node_modules/@polkadot/x-randomvalues/browser.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/helpers.js\");\n\n\n/**\n * @name randomAsU8a\n * @summary Creates a Uint8Array filled with random bytes.\n * @description\n * Returns a `Uint8Array` with the specified (optional) length filled with random bytes.\n * @example\n * <BR>\n *\n * ```javascript\n * import { randomAsU8a } from '@polkadot/util-crypto';\n *\n * randomAsU8a(); // => Uint8Array([...])\n * ```\n */ function randomAsU8a() {\n    let length = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 32;\n    return (0,_polkadot_x_randomvalues__WEBPACK_IMPORTED_MODULE_0__.getRandomValues)(new Uint8Array(length));\n}\n/**\n * @name randomAsHex\n * @description Creates a hex string filled with random bytes.\n */ const randomAsHex = /*#__PURE__*/ (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createAsHex)(randomAsU8a);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vcmFuZG9tL2FzVThhLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkQ7QUFDZjtBQUM1Qzs7Ozs7Ozs7Ozs7OztDQWFDLEdBQ00sU0FBU0U7UUFBWUMsU0FBQUEsaUVBQVM7SUFDakMsT0FBT0gseUVBQWVBLENBQUMsSUFBSUksV0FBV0Q7QUFDMUM7QUFDQTs7O0NBR0MsR0FDTSxNQUFNRSxjQUFjLFdBQVcsR0FBR0osd0RBQVdBLENBQUNDLGFBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9yYW5kb20vYXNVOGEuanM/NGY4YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRSYW5kb21WYWx1ZXMgfSBmcm9tICdAcG9sa2Fkb3QveC1yYW5kb212YWx1ZXMnO1xuaW1wb3J0IHsgY3JlYXRlQXNIZXggfSBmcm9tICcuLi9oZWxwZXJzLmpzJztcbi8qKlxuICogQG5hbWUgcmFuZG9tQXNVOGFcbiAqIEBzdW1tYXJ5IENyZWF0ZXMgYSBVaW50OEFycmF5IGZpbGxlZCB3aXRoIHJhbmRvbSBieXRlcy5cbiAqIEBkZXNjcmlwdGlvblxuICogUmV0dXJucyBhIGBVaW50OEFycmF5YCB3aXRoIHRoZSBzcGVjaWZpZWQgKG9wdGlvbmFsKSBsZW5ndGggZmlsbGVkIHdpdGggcmFuZG9tIGJ5dGVzLlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyByYW5kb21Bc1U4YSB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsLWNyeXB0byc7XG4gKlxuICogcmFuZG9tQXNVOGEoKTsgLy8gPT4gVWludDhBcnJheShbLi4uXSlcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gcmFuZG9tQXNVOGEobGVuZ3RoID0gMzIpIHtcbiAgICByZXR1cm4gZ2V0UmFuZG9tVmFsdWVzKG5ldyBVaW50OEFycmF5KGxlbmd0aCkpO1xufVxuLyoqXG4gKiBAbmFtZSByYW5kb21Bc0hleFxuICogQGRlc2NyaXB0aW9uIENyZWF0ZXMgYSBoZXggc3RyaW5nIGZpbGxlZCB3aXRoIHJhbmRvbSBieXRlcy5cbiAqL1xuZXhwb3J0IGNvbnN0IHJhbmRvbUFzSGV4ID0gLyojX19QVVJFX18qLyBjcmVhdGVBc0hleChyYW5kb21Bc1U4YSk7XG4iXSwibmFtZXMiOlsiZ2V0UmFuZG9tVmFsdWVzIiwiY3JlYXRlQXNIZXgiLCJyYW5kb21Bc1U4YSIsImxlbmd0aCIsIlVpbnQ4QXJyYXkiLCJyYW5kb21Bc0hleCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/random/asU8a.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/random/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/random/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   randomAsHex: function() { return /* reexport safe */ _asU8a_js__WEBPACK_IMPORTED_MODULE_1__.randomAsHex; },\n/* harmony export */   randomAsNumber: function() { return /* reexport safe */ _asNumber_js__WEBPACK_IMPORTED_MODULE_0__.randomAsNumber; },\n/* harmony export */   randomAsU8a: function() { return /* reexport safe */ _asU8a_js__WEBPACK_IMPORTED_MODULE_1__.randomAsU8a; }\n/* harmony export */ });\n/* harmony import */ var _asNumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./asNumber.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/random/asNumber.js\");\n/* harmony import */ var _asU8a_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./asU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/random/asU8a.js\");\n/**\n * @summary Returns a sequence of secure random bytes in a variety of formats\n */ \n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vcmFuZG9tL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0NBRUMsR0FDOEM7QUFDTyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL3JhbmRvbS9pbmRleC5qcz9lMmIxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHN1bW1hcnkgUmV0dXJucyBhIHNlcXVlbmNlIG9mIHNlY3VyZSByYW5kb20gYnl0ZXMgaW4gYSB2YXJpZXR5IG9mIGZvcm1hdHNcbiAqL1xuZXhwb3J0IHsgcmFuZG9tQXNOdW1iZXIgfSBmcm9tICcuL2FzTnVtYmVyLmpzJztcbmV4cG9ydCB7IHJhbmRvbUFzSGV4LCByYW5kb21Bc1U4YSB9IGZyb20gJy4vYXNVOGEuanMnO1xuIl0sIm5hbWVzIjpbInJhbmRvbUFzTnVtYmVyIiwicmFuZG9tQXNIZXgiLCJyYW5kb21Bc1U4YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/random/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/scrypt/defaults.js":
/*!***************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/scrypt/defaults.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_PARAMS: function() { return /* binding */ DEFAULT_PARAMS; }\n/* harmony export */ });\nconst DEFAULT_PARAMS = {\n    N: 1 << 15,\n    p: 1,\n    r: 8\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2NyeXB0L2RlZmF1bHRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxpQkFBaUI7SUFDMUJDLEdBQUcsS0FBSztJQUNSQyxHQUFHO0lBQ0hDLEdBQUc7QUFDUCxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2NyeXB0L2RlZmF1bHRzLmpzP2ZmMzciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IERFRkFVTFRfUEFSQU1TID0ge1xuICAgIE46IDEgPDwgMTUsXG4gICAgcDogMSxcbiAgICByOiA4XG59O1xuIl0sIm5hbWVzIjpbIkRFRkFVTFRfUEFSQU1TIiwiTiIsInAiLCJyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/scrypt/defaults.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/scrypt/encode.js":
/*!*************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/scrypt/encode.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   scryptEncode: function() { return /* binding */ scryptEncode; }\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_scrypt__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @noble/hashes/scrypt */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/scrypt.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/has.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/object/spread.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n/* harmony import */ var _random_asU8a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../random/asU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/random/asU8a.js\");\n/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaults.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/scrypt/defaults.js\");\n\n\n\n\n\nfunction scryptEncode(passphrase) {\n    let salt = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : (0,_random_asU8a_js__WEBPACK_IMPORTED_MODULE_0__.randomAsU8a)(), params = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : _defaults_js__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_PARAMS, onlyJs = arguments.length > 3 ? arguments[3] : void 0;\n    const u8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aToU8a)(passphrase);\n    return {\n        params,\n        password: !_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_4__.isReady)() ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_4__.scrypt)(u8a, salt, Math.log2(params.N), params.r, params.p) : (0,_noble_hashes_scrypt__WEBPACK_IMPORTED_MODULE_5__.scrypt)(u8a, salt, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.objectSpread)({\n            dkLen: 64\n        }, params)),\n        salt\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2NyeXB0L2VuY29kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUEwRDtBQUNTO0FBQ1g7QUFDUDtBQUNGO0FBQ3hDLFNBQVNRLGFBQWFDLFVBQVU7UUFBRUMsT0FBQUEsaUVBQU9KLDZEQUFXQSxJQUFJSyxTQUFBQSxpRUFBU0osd0RBQWNBLEVBQUVLO0lBQ3BGLE1BQU1DLE1BQU1ULHdEQUFRQSxDQUFDSztJQUNyQixPQUFPO1FBQ0hFO1FBQ0FHLFVBQVUsQ0FBQ1oscURBQVNBLElBQUssQ0FBQ1UsVUFBVVAsOERBQU9BLEtBQ3JDTCw2REFBTUEsQ0FBQ2EsS0FBS0gsTUFBTUssS0FBS0MsSUFBSSxDQUFDTCxPQUFPTSxDQUFDLEdBQUdOLE9BQU9PLENBQUMsRUFBRVAsT0FBT1EsQ0FBQyxJQUN6RGxCLDREQUFRQSxDQUFDWSxLQUFLSCxNQUFNUCw0REFBWUEsQ0FBQztZQUFFaUIsT0FBTztRQUFHLEdBQUdUO1FBQ3RERDtJQUNKO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9zY3J5cHQvZW5jb2RlLmpzPzQyMjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2NyeXB0IGFzIHNjcnlwdEpzIH0gZnJvbSAnQG5vYmxlL2hhc2hlcy9zY3J5cHQnO1xuaW1wb3J0IHsgaGFzQmlnSW50LCBvYmplY3RTcHJlYWQsIHU4YVRvVThhIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgaXNSZWFkeSwgc2NyeXB0IH0gZnJvbSAnQHBvbGthZG90L3dhc20tY3J5cHRvJztcbmltcG9ydCB7IHJhbmRvbUFzVThhIH0gZnJvbSAnLi4vcmFuZG9tL2FzVThhLmpzJztcbmltcG9ydCB7IERFRkFVTFRfUEFSQU1TIH0gZnJvbSAnLi9kZWZhdWx0cy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gc2NyeXB0RW5jb2RlKHBhc3NwaHJhc2UsIHNhbHQgPSByYW5kb21Bc1U4YSgpLCBwYXJhbXMgPSBERUZBVUxUX1BBUkFNUywgb25seUpzKSB7XG4gICAgY29uc3QgdThhID0gdThhVG9VOGEocGFzc3BocmFzZSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcGFyYW1zLFxuICAgICAgICBwYXNzd29yZDogIWhhc0JpZ0ludCB8fCAoIW9ubHlKcyAmJiBpc1JlYWR5KCkpXG4gICAgICAgICAgICA/IHNjcnlwdCh1OGEsIHNhbHQsIE1hdGgubG9nMihwYXJhbXMuTiksIHBhcmFtcy5yLCBwYXJhbXMucClcbiAgICAgICAgICAgIDogc2NyeXB0SnModThhLCBzYWx0LCBvYmplY3RTcHJlYWQoeyBka0xlbjogNjQgfSwgcGFyYW1zKSksXG4gICAgICAgIHNhbHRcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbInNjcnlwdCIsInNjcnlwdEpzIiwiaGFzQmlnSW50Iiwib2JqZWN0U3ByZWFkIiwidThhVG9VOGEiLCJpc1JlYWR5IiwicmFuZG9tQXNVOGEiLCJERUZBVUxUX1BBUkFNUyIsInNjcnlwdEVuY29kZSIsInBhc3NwaHJhc2UiLCJzYWx0IiwicGFyYW1zIiwib25seUpzIiwidThhIiwicGFzc3dvcmQiLCJNYXRoIiwibG9nMiIsIk4iLCJyIiwicCIsImRrTGVuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/scrypt/encode.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/scrypt/fromU8a.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/scrypt/fromU8a.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   scryptFromU8a: function() { return /* binding */ scryptFromU8a; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toBn.js\");\n/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bn.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/bn.js\");\n/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaults.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/scrypt/defaults.js\");\n\n\n\nfunction scryptFromU8a(data) {\n    const salt = data.subarray(0, 32);\n    const N = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToBn)(data.subarray(32 + 0, 32 + 4), _bn_js__WEBPACK_IMPORTED_MODULE_1__.BN_LE_OPTS).toNumber();\n    const p = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToBn)(data.subarray(32 + 4, 32 + 8), _bn_js__WEBPACK_IMPORTED_MODULE_1__.BN_LE_OPTS).toNumber();\n    const r = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToBn)(data.subarray(32 + 8, 32 + 12), _bn_js__WEBPACK_IMPORTED_MODULE_1__.BN_LE_OPTS).toNumber();\n    // FIXME At this moment we assume these to be fixed params, this is not a great idea\n    // since we lose flexibility and updates for greater security. However we need some\n    // protection against carefully-crafted params that can eat up CPU since these are user\n    // inputs. So we need to get very clever here, but atm we only allow the defaults\n    // and if no match, bail out\n    if (N !== _defaults_js__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_PARAMS.N || p !== _defaults_js__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_PARAMS.p || r !== _defaults_js__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_PARAMS.r) {\n        throw new Error(\"Invalid injected scrypt params found\");\n    }\n    return {\n        params: {\n            N,\n            p,\n            r\n        },\n        salt\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2NyeXB0L2Zyb21VOGEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF5QztBQUNIO0FBQ1M7QUFDeEMsU0FBU0csY0FBY0MsSUFBSTtJQUM5QixNQUFNQyxPQUFPRCxLQUFLRSxRQUFRLENBQUMsR0FBRztJQUM5QixNQUFNQyxJQUFJUCx1REFBT0EsQ0FBQ0ksS0FBS0UsUUFBUSxDQUFDLEtBQUssR0FBRyxLQUFLLElBQUlMLDhDQUFVQSxFQUFFTyxRQUFRO0lBQ3JFLE1BQU1DLElBQUlULHVEQUFPQSxDQUFDSSxLQUFLRSxRQUFRLENBQUMsS0FBSyxHQUFHLEtBQUssSUFBSUwsOENBQVVBLEVBQUVPLFFBQVE7SUFDckUsTUFBTUUsSUFBSVYsdURBQU9BLENBQUNJLEtBQUtFLFFBQVEsQ0FBQyxLQUFLLEdBQUcsS0FBSyxLQUFLTCw4Q0FBVUEsRUFBRU8sUUFBUTtJQUN0RSxvRkFBb0Y7SUFDcEYsbUZBQW1GO0lBQ25GLHVGQUF1RjtJQUN2RixpRkFBaUY7SUFDakYsNEJBQTRCO0lBQzVCLElBQUlELE1BQU1MLHdEQUFjQSxDQUFDSyxDQUFDLElBQUlFLE1BQU1QLHdEQUFjQSxDQUFDTyxDQUFDLElBQUlDLE1BQU1SLHdEQUFjQSxDQUFDUSxDQUFDLEVBQUU7UUFDNUUsTUFBTSxJQUFJQyxNQUFNO0lBQ3BCO0lBQ0EsT0FBTztRQUFFQyxRQUFRO1lBQUVMO1lBQUdFO1lBQUdDO1FBQUU7UUFBR0w7SUFBSztBQUN2QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL3NjcnlwdC9mcm9tVThhLmpzPzEyNjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdThhVG9CbiB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbmltcG9ydCB7IEJOX0xFX09QVFMgfSBmcm9tICcuLi9ibi5qcyc7XG5pbXBvcnQgeyBERUZBVUxUX1BBUkFNUyB9IGZyb20gJy4vZGVmYXVsdHMuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIHNjcnlwdEZyb21VOGEoZGF0YSkge1xuICAgIGNvbnN0IHNhbHQgPSBkYXRhLnN1YmFycmF5KDAsIDMyKTtcbiAgICBjb25zdCBOID0gdThhVG9CbihkYXRhLnN1YmFycmF5KDMyICsgMCwgMzIgKyA0KSwgQk5fTEVfT1BUUykudG9OdW1iZXIoKTtcbiAgICBjb25zdCBwID0gdThhVG9CbihkYXRhLnN1YmFycmF5KDMyICsgNCwgMzIgKyA4KSwgQk5fTEVfT1BUUykudG9OdW1iZXIoKTtcbiAgICBjb25zdCByID0gdThhVG9CbihkYXRhLnN1YmFycmF5KDMyICsgOCwgMzIgKyAxMiksIEJOX0xFX09QVFMpLnRvTnVtYmVyKCk7XG4gICAgLy8gRklYTUUgQXQgdGhpcyBtb21lbnQgd2UgYXNzdW1lIHRoZXNlIHRvIGJlIGZpeGVkIHBhcmFtcywgdGhpcyBpcyBub3QgYSBncmVhdCBpZGVhXG4gICAgLy8gc2luY2Ugd2UgbG9zZSBmbGV4aWJpbGl0eSBhbmQgdXBkYXRlcyBmb3IgZ3JlYXRlciBzZWN1cml0eS4gSG93ZXZlciB3ZSBuZWVkIHNvbWVcbiAgICAvLyBwcm90ZWN0aW9uIGFnYWluc3QgY2FyZWZ1bGx5LWNyYWZ0ZWQgcGFyYW1zIHRoYXQgY2FuIGVhdCB1cCBDUFUgc2luY2UgdGhlc2UgYXJlIHVzZXJcbiAgICAvLyBpbnB1dHMuIFNvIHdlIG5lZWQgdG8gZ2V0IHZlcnkgY2xldmVyIGhlcmUsIGJ1dCBhdG0gd2Ugb25seSBhbGxvdyB0aGUgZGVmYXVsdHNcbiAgICAvLyBhbmQgaWYgbm8gbWF0Y2gsIGJhaWwgb3V0XG4gICAgaWYgKE4gIT09IERFRkFVTFRfUEFSQU1TLk4gfHwgcCAhPT0gREVGQVVMVF9QQVJBTVMucCB8fCByICE9PSBERUZBVUxUX1BBUkFNUy5yKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBpbmplY3RlZCBzY3J5cHQgcGFyYW1zIGZvdW5kJyk7XG4gICAgfVxuICAgIHJldHVybiB7IHBhcmFtczogeyBOLCBwLCByIH0sIHNhbHQgfTtcbn1cbiJdLCJuYW1lcyI6WyJ1OGFUb0JuIiwiQk5fTEVfT1BUUyIsIkRFRkFVTFRfUEFSQU1TIiwic2NyeXB0RnJvbVU4YSIsImRhdGEiLCJzYWx0Iiwic3ViYXJyYXkiLCJOIiwidG9OdW1iZXIiLCJwIiwiciIsIkVycm9yIiwicGFyYW1zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/scrypt/fromU8a.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/scrypt/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/scrypt/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   scryptEncode: function() { return /* reexport safe */ _encode_js__WEBPACK_IMPORTED_MODULE_0__.scryptEncode; },\n/* harmony export */   scryptFromU8a: function() { return /* reexport safe */ _fromU8a_js__WEBPACK_IMPORTED_MODULE_1__.scryptFromU8a; },\n/* harmony export */   scryptToU8a: function() { return /* reexport safe */ _toU8a_js__WEBPACK_IMPORTED_MODULE_2__.scryptToU8a; }\n/* harmony export */ });\n/* harmony import */ var _encode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encode.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/scrypt/encode.js\");\n/* harmony import */ var _fromU8a_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fromU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/scrypt/fromU8a.js\");\n/* harmony import */ var _toU8a_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./toU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/scrypt/toU8a.js\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2NyeXB0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEyQztBQUNFO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9zY3J5cHQvaW5kZXguanM/YTc1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBzY3J5cHRFbmNvZGUgfSBmcm9tICcuL2VuY29kZS5qcyc7XG5leHBvcnQgeyBzY3J5cHRGcm9tVThhIH0gZnJvbSAnLi9mcm9tVThhLmpzJztcbmV4cG9ydCB7IHNjcnlwdFRvVThhIH0gZnJvbSAnLi90b1U4YS5qcyc7XG4iXSwibmFtZXMiOlsic2NyeXB0RW5jb2RlIiwic2NyeXB0RnJvbVU4YSIsInNjcnlwdFRvVThhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/scrypt/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/scrypt/toU8a.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/scrypt/toU8a.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   scryptToU8a: function() { return /* binding */ scryptToU8a; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/concat.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/bn/toU8a.js\");\n/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../bn.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/bn.js\");\n\n\nfunction scryptToU8a(salt, param) {\n    let { N, p, r } = param;\n    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aConcat)(salt, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.bnToU8a)(N, _bn_js__WEBPACK_IMPORTED_MODULE_2__.BN_LE_32_OPTS), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.bnToU8a)(p, _bn_js__WEBPACK_IMPORTED_MODULE_2__.BN_LE_32_OPTS), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.bnToU8a)(r, _bn_js__WEBPACK_IMPORTED_MODULE_2__.BN_LE_32_OPTS));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2NyeXB0L3RvVThhLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBb0Q7QUFDWDtBQUNsQyxTQUFTRyxZQUFZQyxJQUFJLEVBQUUsS0FBVztRQUFYLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUUsR0FBWDtJQUM5QixPQUFPTix5REFBU0EsQ0FBQ0csTUFBTUosdURBQU9BLENBQUNLLEdBQUdILGlEQUFhQSxHQUFHRix1REFBT0EsQ0FBQ00sR0FBR0osaURBQWFBLEdBQUdGLHVEQUFPQSxDQUFDTyxHQUFHTCxpREFBYUE7QUFDekciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9zY3J5cHQvdG9VOGEuanM/ZjE5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiblRvVThhLCB1OGFDb25jYXQgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG5pbXBvcnQgeyBCTl9MRV8zMl9PUFRTIH0gZnJvbSAnLi4vYm4uanMnO1xuZXhwb3J0IGZ1bmN0aW9uIHNjcnlwdFRvVThhKHNhbHQsIHsgTiwgcCwgciB9KSB7XG4gICAgcmV0dXJuIHU4YUNvbmNhdChzYWx0LCBiblRvVThhKE4sIEJOX0xFXzMyX09QVFMpLCBiblRvVThhKHAsIEJOX0xFXzMyX09QVFMpLCBiblRvVThhKHIsIEJOX0xFXzMyX09QVFMpKTtcbn1cbiJdLCJuYW1lcyI6WyJiblRvVThhIiwidThhQ29uY2F0IiwiQk5fTEVfMzJfT1BUUyIsInNjcnlwdFRvVThhIiwic2FsdCIsIk4iLCJwIiwiciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/scrypt/toU8a.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/compress.js":
/*!******************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/secp256k1/compress.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   secp256k1Compress: function() { return /* binding */ secp256k1Compress; }\n/* harmony export */ });\n/* harmony import */ var _noble_curves_secp256k1__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/curves/secp256k1 */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/secp256k1.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/has.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n\n\n\nfunction secp256k1Compress(publicKey, onlyJs) {\n    if (![\n        33,\n        65\n    ].includes(publicKey.length)) {\n        throw new Error(\"Invalid publicKey provided, received \".concat(publicKey.length, \" bytes input\"));\n    }\n    if (publicKey.length === 33) {\n        return publicKey;\n    }\n    return !_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.isReady)() ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.secp256k1Compress)(publicKey) : _noble_curves_secp256k1__WEBPACK_IMPORTED_MODULE_2__.secp256k1.ProjectivePoint.fromHex(publicKey).toRawBytes(true);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2VjcDI1NmsxL2NvbXByZXNzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBb0Q7QUFDVDtBQUNnQztBQUNwRSxTQUFTRyxrQkFBa0JFLFNBQVMsRUFBRUMsTUFBTTtJQUMvQyxJQUFJLENBQUM7UUFBQztRQUFJO0tBQUcsQ0FBQ0MsUUFBUSxDQUFDRixVQUFVRyxNQUFNLEdBQUc7UUFDdEMsTUFBTSxJQUFJQyxNQUFNLHdDQUF5RCxPQUFqQkosVUFBVUcsTUFBTSxFQUFDO0lBQzdFO0lBQ0EsSUFBSUgsVUFBVUcsTUFBTSxLQUFLLElBQUk7UUFDekIsT0FBT0g7SUFDWDtJQUNBLE9BQU8sQ0FBQ0oscURBQVNBLElBQUssQ0FBQ0ssVUFBVUosOERBQU9BLEtBQ2xDRSx3RUFBSUEsQ0FBQ0MsYUFDTEwsOERBQVNBLENBQUNVLGVBQWUsQ0FBQ0MsT0FBTyxDQUFDTixXQUFXTyxVQUFVLENBQUM7QUFDbEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9zZWNwMjU2azEvY29tcHJlc3MuanM/MzU5MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZWNwMjU2azEgfSBmcm9tICdAbm9ibGUvY3VydmVzL3NlY3AyNTZrMSc7XG5pbXBvcnQgeyBoYXNCaWdJbnQgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG5pbXBvcnQgeyBpc1JlYWR5LCBzZWNwMjU2azFDb21wcmVzcyBhcyB3YXNtIH0gZnJvbSAnQHBvbGthZG90L3dhc20tY3J5cHRvJztcbmV4cG9ydCBmdW5jdGlvbiBzZWNwMjU2azFDb21wcmVzcyhwdWJsaWNLZXksIG9ubHlKcykge1xuICAgIGlmICghWzMzLCA2NV0uaW5jbHVkZXMocHVibGljS2V5Lmxlbmd0aCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHB1YmxpY0tleSBwcm92aWRlZCwgcmVjZWl2ZWQgJHtwdWJsaWNLZXkubGVuZ3RofSBieXRlcyBpbnB1dGApO1xuICAgIH1cbiAgICBpZiAocHVibGljS2V5Lmxlbmd0aCA9PT0gMzMpIHtcbiAgICAgICAgcmV0dXJuIHB1YmxpY0tleTtcbiAgICB9XG4gICAgcmV0dXJuICFoYXNCaWdJbnQgfHwgKCFvbmx5SnMgJiYgaXNSZWFkeSgpKVxuICAgICAgICA/IHdhc20ocHVibGljS2V5KVxuICAgICAgICA6IHNlY3AyNTZrMS5Qcm9qZWN0aXZlUG9pbnQuZnJvbUhleChwdWJsaWNLZXkpLnRvUmF3Qnl0ZXModHJ1ZSk7XG59XG4iXSwibmFtZXMiOlsic2VjcDI1NmsxIiwiaGFzQmlnSW50IiwiaXNSZWFkeSIsInNlY3AyNTZrMUNvbXByZXNzIiwid2FzbSIsInB1YmxpY0tleSIsIm9ubHlKcyIsImluY2x1ZGVzIiwibGVuZ3RoIiwiRXJyb3IiLCJQcm9qZWN0aXZlUG9pbnQiLCJmcm9tSGV4IiwidG9SYXdCeXRlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/compress.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/deriveHard.js":
/*!********************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/secp256k1/deriveHard.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   secp256k1DeriveHard: function() { return /* binding */ secp256k1DeriveHard; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/compact/addLength.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/string/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/u8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/concat.js\");\n/* harmony import */ var _blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../blake2/asU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/blake2/asU8a.js\");\n\n\nconst HDKD = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.compactAddLength)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.stringToU8a)(\"Secp256k1HDKD\"));\nfunction secp256k1DeriveHard(seed, chainCode) {\n    if (!(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isU8a)(chainCode) || chainCode.length !== 32) {\n        throw new Error(\"Invalid chainCode passed to derive\");\n    }\n    // NOTE This is specific to the Substrate HDD derivation, so always use the blake2 hasher\n    return (0,_blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_3__.blake2AsU8a)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.u8aConcat)(HDKD, seed, chainCode), 256);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2VjcDI1NmsxL2Rlcml2ZUhhcmQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWlGO0FBQ2hDO0FBQ2pELE1BQU1LLE9BQU9MLGdFQUFnQkEsQ0FBQ0UsMkRBQVdBLENBQUM7QUFDbkMsU0FBU0ksb0JBQW9CQyxJQUFJLEVBQUVDLFNBQVM7SUFDL0MsSUFBSSxDQUFDUCxxREFBS0EsQ0FBQ08sY0FBY0EsVUFBVUMsTUFBTSxLQUFLLElBQUk7UUFDOUMsTUFBTSxJQUFJQyxNQUFNO0lBQ3BCO0lBQ0EseUZBQXlGO0lBQ3pGLE9BQU9OLDZEQUFXQSxDQUFDRCx5REFBU0EsQ0FBQ0UsTUFBTUUsTUFBTUMsWUFBWTtBQUN6RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL3NlY3AyNTZrMS9kZXJpdmVIYXJkLmpzP2MyMzgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tcGFjdEFkZExlbmd0aCwgaXNVOGEsIHN0cmluZ1RvVThhLCB1OGFDb25jYXQgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG5pbXBvcnQgeyBibGFrZTJBc1U4YSB9IGZyb20gJy4uL2JsYWtlMi9hc1U4YS5qcyc7XG5jb25zdCBIREtEID0gY29tcGFjdEFkZExlbmd0aChzdHJpbmdUb1U4YSgnU2VjcDI1NmsxSERLRCcpKTtcbmV4cG9ydCBmdW5jdGlvbiBzZWNwMjU2azFEZXJpdmVIYXJkKHNlZWQsIGNoYWluQ29kZSkge1xuICAgIGlmICghaXNVOGEoY2hhaW5Db2RlKSB8fCBjaGFpbkNvZGUubGVuZ3RoICE9PSAzMikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgY2hhaW5Db2RlIHBhc3NlZCB0byBkZXJpdmUnKTtcbiAgICB9XG4gICAgLy8gTk9URSBUaGlzIGlzIHNwZWNpZmljIHRvIHRoZSBTdWJzdHJhdGUgSEREIGRlcml2YXRpb24sIHNvIGFsd2F5cyB1c2UgdGhlIGJsYWtlMiBoYXNoZXJcbiAgICByZXR1cm4gYmxha2UyQXNVOGEodThhQ29uY2F0KEhES0QsIHNlZWQsIGNoYWluQ29kZSksIDI1Nik7XG59XG4iXSwibmFtZXMiOlsiY29tcGFjdEFkZExlbmd0aCIsImlzVThhIiwic3RyaW5nVG9VOGEiLCJ1OGFDb25jYXQiLCJibGFrZTJBc1U4YSIsIkhES0QiLCJzZWNwMjU2azFEZXJpdmVIYXJkIiwic2VlZCIsImNoYWluQ29kZSIsImxlbmd0aCIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/deriveHard.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/expand.js":
/*!****************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/secp256k1/expand.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   secp256k1Expand: function() { return /* binding */ secp256k1Expand; }\n/* harmony export */ });\n/* harmony import */ var _noble_curves_secp256k1__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/curves/secp256k1 */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/secp256k1.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/has.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/concat.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/bn/toU8a.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../bn.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/bn.js\");\n\n\n\n\nfunction secp256k1Expand(publicKey, onlyJs) {\n    if (![\n        33,\n        65\n    ].includes(publicKey.length)) {\n        throw new Error(\"Invalid publicKey provided, received \".concat(publicKey.length, \" bytes input\"));\n    }\n    if (publicKey.length === 65) {\n        return publicKey.subarray(1);\n    }\n    if (!_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.isReady)()) {\n        return (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.secp256k1Expand)(publicKey).subarray(1);\n    }\n    const { px, py } = _noble_curves_secp256k1__WEBPACK_IMPORTED_MODULE_2__.secp256k1.ProjectivePoint.fromHex(publicKey);\n    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aConcat)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.bnToU8a)(px, _bn_js__WEBPACK_IMPORTED_MODULE_5__.BN_BE_256_OPTS), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.bnToU8a)(py, _bn_js__WEBPACK_IMPORTED_MODULE_5__.BN_BE_256_OPTS));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2VjcDI1NmsxL2V4cGFuZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQW9EO0FBQ1c7QUFDVTtBQUMvQjtBQUNuQyxTQUFTSyxnQkFBZ0JHLFNBQVMsRUFBRUMsTUFBTTtJQUM3QyxJQUFJLENBQUM7UUFBQztRQUFJO0tBQUcsQ0FBQ0MsUUFBUSxDQUFDRixVQUFVRyxNQUFNLEdBQUc7UUFDdEMsTUFBTSxJQUFJQyxNQUFNLHdDQUF5RCxPQUFqQkosVUFBVUcsTUFBTSxFQUFDO0lBQzdFO0lBQ0EsSUFBSUgsVUFBVUcsTUFBTSxLQUFLLElBQUk7UUFDekIsT0FBT0gsVUFBVUssUUFBUSxDQUFDO0lBQzlCO0lBQ0EsSUFBSSxDQUFDWCxxREFBU0EsSUFBSyxDQUFDTyxVQUFVTCw4REFBT0EsSUFBSztRQUN0QyxPQUFPRSxzRUFBSUEsQ0FBQ0UsV0FBV0ssUUFBUSxDQUFDO0lBQ3BDO0lBQ0EsTUFBTSxFQUFFQyxFQUFFLEVBQUVDLEVBQUUsRUFBRSxHQUFHZiw4REFBU0EsQ0FBQ2dCLGVBQWUsQ0FBQ0MsT0FBTyxDQUFDVDtJQUNyRCxPQUFPTCx5REFBU0EsQ0FBQ0YsdURBQU9BLENBQUNhLElBQUlQLGtEQUFjQSxHQUFHTix1REFBT0EsQ0FBQ2MsSUFBSVIsa0RBQWNBO0FBQzVFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2VjcDI1NmsxL2V4cGFuZC5qcz8xNjc4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNlY3AyNTZrMSB9IGZyb20gJ0Bub2JsZS9jdXJ2ZXMvc2VjcDI1NmsxJztcbmltcG9ydCB7IGJuVG9VOGEsIGhhc0JpZ0ludCwgdThhQ29uY2F0IH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgaXNSZWFkeSwgc2VjcDI1NmsxRXhwYW5kIGFzIHdhc20gfSBmcm9tICdAcG9sa2Fkb3Qvd2FzbS1jcnlwdG8nO1xuaW1wb3J0IHsgQk5fQkVfMjU2X09QVFMgfSBmcm9tICcuLi9ibi5qcyc7XG5leHBvcnQgZnVuY3Rpb24gc2VjcDI1NmsxRXhwYW5kKHB1YmxpY0tleSwgb25seUpzKSB7XG4gICAgaWYgKCFbMzMsIDY1XS5pbmNsdWRlcyhwdWJsaWNLZXkubGVuZ3RoKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgcHVibGljS2V5IHByb3ZpZGVkLCByZWNlaXZlZCAke3B1YmxpY0tleS5sZW5ndGh9IGJ5dGVzIGlucHV0YCk7XG4gICAgfVxuICAgIGlmIChwdWJsaWNLZXkubGVuZ3RoID09PSA2NSkge1xuICAgICAgICByZXR1cm4gcHVibGljS2V5LnN1YmFycmF5KDEpO1xuICAgIH1cbiAgICBpZiAoIWhhc0JpZ0ludCB8fCAoIW9ubHlKcyAmJiBpc1JlYWR5KCkpKSB7XG4gICAgICAgIHJldHVybiB3YXNtKHB1YmxpY0tleSkuc3ViYXJyYXkoMSk7XG4gICAgfVxuICAgIGNvbnN0IHsgcHgsIHB5IH0gPSBzZWNwMjU2azEuUHJvamVjdGl2ZVBvaW50LmZyb21IZXgocHVibGljS2V5KTtcbiAgICByZXR1cm4gdThhQ29uY2F0KGJuVG9VOGEocHgsIEJOX0JFXzI1Nl9PUFRTKSwgYm5Ub1U4YShweSwgQk5fQkVfMjU2X09QVFMpKTtcbn1cbiJdLCJuYW1lcyI6WyJzZWNwMjU2azEiLCJiblRvVThhIiwiaGFzQmlnSW50IiwidThhQ29uY2F0IiwiaXNSZWFkeSIsInNlY3AyNTZrMUV4cGFuZCIsIndhc20iLCJCTl9CRV8yNTZfT1BUUyIsInB1YmxpY0tleSIsIm9ubHlKcyIsImluY2x1ZGVzIiwibGVuZ3RoIiwiRXJyb3IiLCJzdWJhcnJheSIsInB4IiwicHkiLCJQcm9qZWN0aXZlUG9pbnQiLCJmcm9tSGV4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/expand.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/hasher.js":
/*!****************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/secp256k1/hasher.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasher: function() { return /* binding */ hasher; }\n/* harmony export */ });\n/* harmony import */ var _blake2_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../blake2/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/blake2/asU8a.js\");\n/* harmony import */ var _keccak_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../keccak/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/keccak/asU8a.js\");\n\n\nfunction hasher(hashType, data, onlyJs) {\n    return hashType === \"keccak\" ? (0,_keccak_index_js__WEBPACK_IMPORTED_MODULE_0__.keccakAsU8a)(data, undefined, onlyJs) : (0,_blake2_index_js__WEBPACK_IMPORTED_MODULE_1__.blake2AsU8a)(data, undefined, undefined, onlyJs);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2VjcDI1NmsxL2hhc2hlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBaUQ7QUFDQTtBQUMxQyxTQUFTRSxPQUFPQyxRQUFRLEVBQUVDLElBQUksRUFBRUMsTUFBTTtJQUN6QyxPQUFPRixhQUFhLFdBQ2RGLDZEQUFXQSxDQUFDRyxNQUFNRSxXQUFXRCxVQUM3QkwsNkRBQVdBLENBQUNJLE1BQU1FLFdBQVdBLFdBQVdEO0FBQ2xEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2VjcDI1NmsxL2hhc2hlci5qcz83ZjQ0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJsYWtlMkFzVThhIH0gZnJvbSAnLi4vYmxha2UyL2luZGV4LmpzJztcbmltcG9ydCB7IGtlY2Nha0FzVThhIH0gZnJvbSAnLi4va2VjY2FrL2luZGV4LmpzJztcbmV4cG9ydCBmdW5jdGlvbiBoYXNoZXIoaGFzaFR5cGUsIGRhdGEsIG9ubHlKcykge1xuICAgIHJldHVybiBoYXNoVHlwZSA9PT0gJ2tlY2NhaydcbiAgICAgICAgPyBrZWNjYWtBc1U4YShkYXRhLCB1bmRlZmluZWQsIG9ubHlKcylcbiAgICAgICAgOiBibGFrZTJBc1U4YShkYXRhLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgb25seUpzKTtcbn1cbiJdLCJuYW1lcyI6WyJibGFrZTJBc1U4YSIsImtlY2Nha0FzVThhIiwiaGFzaGVyIiwiaGFzaFR5cGUiLCJkYXRhIiwib25seUpzIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/hasher.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/secp256k1/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   secp256k1Compress: function() { return /* reexport safe */ _compress_js__WEBPACK_IMPORTED_MODULE_0__.secp256k1Compress; },\n/* harmony export */   secp256k1Expand: function() { return /* reexport safe */ _expand_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1Expand; },\n/* harmony export */   secp256k1PairFromSeed: function() { return /* reexport safe */ _pair_fromSeed_js__WEBPACK_IMPORTED_MODULE_2__.secp256k1PairFromSeed; },\n/* harmony export */   secp256k1PrivateKeyTweakAdd: function() { return /* reexport safe */ _tweakAdd_js__WEBPACK_IMPORTED_MODULE_5__.secp256k1PrivateKeyTweakAdd; },\n/* harmony export */   secp256k1Recover: function() { return /* reexport safe */ _recover_js__WEBPACK_IMPORTED_MODULE_3__.secp256k1Recover; },\n/* harmony export */   secp256k1Sign: function() { return /* reexport safe */ _sign_js__WEBPACK_IMPORTED_MODULE_4__.secp256k1Sign; },\n/* harmony export */   secp256k1Verify: function() { return /* reexport safe */ _verify_js__WEBPACK_IMPORTED_MODULE_6__.secp256k1Verify; }\n/* harmony export */ });\n/* harmony import */ var _compress_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compress.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/compress.js\");\n/* harmony import */ var _expand_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./expand.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/expand.js\");\n/* harmony import */ var _pair_fromSeed_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pair/fromSeed.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/pair/fromSeed.js\");\n/* harmony import */ var _recover_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./recover.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/recover.js\");\n/* harmony import */ var _sign_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sign.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/sign.js\");\n/* harmony import */ var _tweakAdd_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tweakAdd.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/tweakAdd.js\");\n/* harmony import */ var _verify_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./verify.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/verify.js\");\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2VjcDI1NmsxL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWtEO0FBQ0o7QUFDYTtBQUNYO0FBQ047QUFDa0I7QUFDZCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL3NlY3AyNTZrMS9pbmRleC5qcz9mOGNhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IHNlY3AyNTZrMUNvbXByZXNzIH0gZnJvbSAnLi9jb21wcmVzcy5qcyc7XG5leHBvcnQgeyBzZWNwMjU2azFFeHBhbmQgfSBmcm9tICcuL2V4cGFuZC5qcyc7XG5leHBvcnQgeyBzZWNwMjU2azFQYWlyRnJvbVNlZWQgfSBmcm9tICcuL3BhaXIvZnJvbVNlZWQuanMnO1xuZXhwb3J0IHsgc2VjcDI1NmsxUmVjb3ZlciB9IGZyb20gJy4vcmVjb3Zlci5qcyc7XG5leHBvcnQgeyBzZWNwMjU2azFTaWduIH0gZnJvbSAnLi9zaWduLmpzJztcbmV4cG9ydCB7IHNlY3AyNTZrMVByaXZhdGVLZXlUd2Vha0FkZCB9IGZyb20gJy4vdHdlYWtBZGQuanMnO1xuZXhwb3J0IHsgc2VjcDI1NmsxVmVyaWZ5IH0gZnJvbSAnLi92ZXJpZnkuanMnO1xuIl0sIm5hbWVzIjpbInNlY3AyNTZrMUNvbXByZXNzIiwic2VjcDI1NmsxRXhwYW5kIiwic2VjcDI1NmsxUGFpckZyb21TZWVkIiwic2VjcDI1NmsxUmVjb3ZlciIsInNlY3AyNTZrMVNpZ24iLCJzZWNwMjU2azFQcml2YXRlS2V5VHdlYWtBZGQiLCJzZWNwMjU2azFWZXJpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/pair/fromSeed.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/secp256k1/pair/fromSeed.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   secp256k1PairFromSeed: function() { return /* binding */ secp256k1PairFromSeed; }\n/* harmony export */ });\n/* harmony import */ var _noble_curves_secp256k1__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @noble/curves/secp256k1 */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/secp256k1.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/has.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/empty.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n\n\n\n/**\n * @name secp256k1PairFromSeed\n * @description Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.\n */ function secp256k1PairFromSeed(seed, onlyJs) {\n    if (seed.length !== 32) {\n        throw new Error(\"Expected valid 32-byte private key as a seed\");\n    }\n    if (!_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.isReady)()) {\n        const full = (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.secp256k1FromSeed)(seed);\n        const publicKey = full.slice(32);\n        // There is an issue with the secp256k1 when running in an ASM.js environment where\n        // it seems that the lazy static section yields invalid results on the _first_ run.\n        // If this happens, fail outright, we cannot allow invalid return values\n        // https://github.com/polkadot-js/wasm/issues/307\n        if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aEmpty)(publicKey)) {\n            throw new Error(\"Invalid publicKey generated from WASM interface\");\n        }\n        return {\n            publicKey,\n            secretKey: full.slice(0, 32)\n        };\n    }\n    return {\n        publicKey: _noble_curves_secp256k1__WEBPACK_IMPORTED_MODULE_3__.secp256k1.getPublicKey(seed, true),\n        secretKey: seed\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2VjcDI1NmsxL3BhaXIvZnJvbVNlZWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBb0Q7QUFDQztBQUNjO0FBQ25FOzs7Q0FHQyxHQUNNLFNBQVNLLHNCQUFzQkMsSUFBSSxFQUFFQyxNQUFNO0lBQzlDLElBQUlELEtBQUtFLE1BQU0sS0FBSyxJQUFJO1FBQ3BCLE1BQU0sSUFBSUMsTUFBTTtJQUNwQjtJQUNBLElBQUksQ0FBQ1IscURBQVNBLElBQUssQ0FBQ00sVUFBVUosOERBQU9BLElBQUs7UUFDdEMsTUFBTU8sT0FBT04sd0VBQWlCQSxDQUFDRTtRQUMvQixNQUFNSyxZQUFZRCxLQUFLRSxLQUFLLENBQUM7UUFDN0IsbUZBQW1GO1FBQ25GLG1GQUFtRjtRQUNuRix3RUFBd0U7UUFDeEUsaURBQWlEO1FBQ2pELElBQUlWLHdEQUFRQSxDQUFDUyxZQUFZO1lBQ3JCLE1BQU0sSUFBSUYsTUFBTTtRQUNwQjtRQUNBLE9BQU87WUFDSEU7WUFDQUUsV0FBV0gsS0FBS0UsS0FBSyxDQUFDLEdBQUc7UUFDN0I7SUFDSjtJQUNBLE9BQU87UUFDSEQsV0FBV1gsOERBQVNBLENBQUNjLFlBQVksQ0FBQ1IsTUFBTTtRQUN4Q08sV0FBV1A7SUFDZjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2VjcDI1NmsxL3BhaXIvZnJvbVNlZWQuanM/ODcwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZWNwMjU2azEgfSBmcm9tICdAbm9ibGUvY3VydmVzL3NlY3AyNTZrMSc7XG5pbXBvcnQgeyBoYXNCaWdJbnQsIHU4YUVtcHR5IH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgaXNSZWFkeSwgc2VjcDI1NmsxRnJvbVNlZWQgfSBmcm9tICdAcG9sa2Fkb3Qvd2FzbS1jcnlwdG8nO1xuLyoqXG4gKiBAbmFtZSBzZWNwMjU2azFQYWlyRnJvbVNlZWRcbiAqIEBkZXNjcmlwdGlvbiBSZXR1cm5zIGEgb2JqZWN0IGNvbnRhaW5pbmcgYSBgcHVibGljS2V5YCAmIGBzZWNyZXRLZXlgIGdlbmVyYXRlZCBmcm9tIHRoZSBzdXBwbGllZCBzZWVkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2VjcDI1NmsxUGFpckZyb21TZWVkKHNlZWQsIG9ubHlKcykge1xuICAgIGlmIChzZWVkLmxlbmd0aCAhPT0gMzIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCB2YWxpZCAzMi1ieXRlIHByaXZhdGUga2V5IGFzIGEgc2VlZCcpO1xuICAgIH1cbiAgICBpZiAoIWhhc0JpZ0ludCB8fCAoIW9ubHlKcyAmJiBpc1JlYWR5KCkpKSB7XG4gICAgICAgIGNvbnN0IGZ1bGwgPSBzZWNwMjU2azFGcm9tU2VlZChzZWVkKTtcbiAgICAgICAgY29uc3QgcHVibGljS2V5ID0gZnVsbC5zbGljZSgzMik7XG4gICAgICAgIC8vIFRoZXJlIGlzIGFuIGlzc3VlIHdpdGggdGhlIHNlY3AyNTZrMSB3aGVuIHJ1bm5pbmcgaW4gYW4gQVNNLmpzIGVudmlyb25tZW50IHdoZXJlXG4gICAgICAgIC8vIGl0IHNlZW1zIHRoYXQgdGhlIGxhenkgc3RhdGljIHNlY3Rpb24geWllbGRzIGludmFsaWQgcmVzdWx0cyBvbiB0aGUgX2ZpcnN0XyBydW4uXG4gICAgICAgIC8vIElmIHRoaXMgaGFwcGVucywgZmFpbCBvdXRyaWdodCwgd2UgY2Fubm90IGFsbG93IGludmFsaWQgcmV0dXJuIHZhbHVlc1xuICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vcG9sa2Fkb3QtanMvd2FzbS9pc3N1ZXMvMzA3XG4gICAgICAgIGlmICh1OGFFbXB0eShwdWJsaWNLZXkpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgcHVibGljS2V5IGdlbmVyYXRlZCBmcm9tIFdBU00gaW50ZXJmYWNlJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHB1YmxpY0tleSxcbiAgICAgICAgICAgIHNlY3JldEtleTogZnVsbC5zbGljZSgwLCAzMilcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHVibGljS2V5OiBzZWNwMjU2azEuZ2V0UHVibGljS2V5KHNlZWQsIHRydWUpLFxuICAgICAgICBzZWNyZXRLZXk6IHNlZWRcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbInNlY3AyNTZrMSIsImhhc0JpZ0ludCIsInU4YUVtcHR5IiwiaXNSZWFkeSIsInNlY3AyNTZrMUZyb21TZWVkIiwic2VjcDI1NmsxUGFpckZyb21TZWVkIiwic2VlZCIsIm9ubHlKcyIsImxlbmd0aCIsIkVycm9yIiwiZnVsbCIsInB1YmxpY0tleSIsInNsaWNlIiwic2VjcmV0S2V5IiwiZ2V0UHVibGljS2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/pair/fromSeed.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/recover.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/secp256k1/recover.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   secp256k1Recover: function() { return /* binding */ secp256k1Recover; }\n/* harmony export */ });\n/* harmony import */ var _noble_curves_secp256k1__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @noble/curves/secp256k1 */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/secp256k1.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/has.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n/* harmony import */ var _compress_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./compress.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/compress.js\");\n/* harmony import */ var _expand_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./expand.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/expand.js\");\n\n\n\n\n\n/**\n * @name secp256k1Recover\n * @description Recovers a publicKey from the supplied signature\n */ function secp256k1Recover(msgHash, signature, recovery) {\n    let hashType = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : \"blake2\", onlyJs = arguments.length > 4 ? arguments[4] : void 0;\n    const sig = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(signature).subarray(0, 64);\n    const msg = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(msgHash);\n    const publicKey = !_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.isReady)() ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.secp256k1Recover)(msg, sig, recovery) : _noble_curves_secp256k1__WEBPACK_IMPORTED_MODULE_3__.secp256k1.Signature.fromCompact(sig).addRecoveryBit(recovery).recoverPublicKey(msg).toRawBytes();\n    if (!publicKey) {\n        throw new Error(\"Unable to recover publicKey from signature\");\n    }\n    return hashType === \"keccak\" ? (0,_expand_js__WEBPACK_IMPORTED_MODULE_4__.secp256k1Expand)(publicKey, onlyJs) : (0,_compress_js__WEBPACK_IMPORTED_MODULE_5__.secp256k1Compress)(publicKey, onlyJs);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2VjcDI1NmsxL3JlY292ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFvRDtBQUNDO0FBQ3FCO0FBQ3hCO0FBQ0o7QUFDOUM7OztDQUdDLEdBQ00sU0FBU0ksaUJBQWlCSSxPQUFPLEVBQUVDLFNBQVMsRUFBRUMsUUFBUTtRQUFFQyxXQUFBQSxpRUFBVyxVQUFVQztJQUNoRixNQUFNQyxNQUFNWCx3REFBUUEsQ0FBQ08sV0FBV0ssUUFBUSxDQUFDLEdBQUc7SUFDNUMsTUFBTUMsTUFBTWIsd0RBQVFBLENBQUNNO0lBQ3JCLE1BQU1RLFlBQVksQ0FBQ2YscURBQVNBLElBQUssQ0FBQ1csVUFBVVQsOERBQU9BLEtBQzdDRSx1RUFBSUEsQ0FBQ1UsS0FBS0YsS0FBS0gsWUFDZlYsOERBQVNBLENBQUNpQixTQUFTLENBQ2hCQyxXQUFXLENBQUNMLEtBQ1pNLGNBQWMsQ0FBQ1QsVUFDZlUsZ0JBQWdCLENBQUNMLEtBQ2pCTSxVQUFVO0lBQ25CLElBQUksQ0FBQ0wsV0FBVztRQUNaLE1BQU0sSUFBSU0sTUFBTTtJQUNwQjtJQUNBLE9BQU9YLGFBQWEsV0FDZEosMkRBQWVBLENBQUNTLFdBQVdKLFVBQzNCTiwrREFBaUJBLENBQUNVLFdBQVdKO0FBQ3ZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2VjcDI1NmsxL3JlY292ZXIuanM/NmI0YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZWNwMjU2azEgfSBmcm9tICdAbm9ibGUvY3VydmVzL3NlY3AyNTZrMSc7XG5pbXBvcnQgeyBoYXNCaWdJbnQsIHU4YVRvVThhIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgaXNSZWFkeSwgc2VjcDI1NmsxUmVjb3ZlciBhcyB3YXNtIH0gZnJvbSAnQHBvbGthZG90L3dhc20tY3J5cHRvJztcbmltcG9ydCB7IHNlY3AyNTZrMUNvbXByZXNzIH0gZnJvbSAnLi9jb21wcmVzcy5qcyc7XG5pbXBvcnQgeyBzZWNwMjU2azFFeHBhbmQgfSBmcm9tICcuL2V4cGFuZC5qcyc7XG4vKipcbiAqIEBuYW1lIHNlY3AyNTZrMVJlY292ZXJcbiAqIEBkZXNjcmlwdGlvbiBSZWNvdmVycyBhIHB1YmxpY0tleSBmcm9tIHRoZSBzdXBwbGllZCBzaWduYXR1cmVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNlY3AyNTZrMVJlY292ZXIobXNnSGFzaCwgc2lnbmF0dXJlLCByZWNvdmVyeSwgaGFzaFR5cGUgPSAnYmxha2UyJywgb25seUpzKSB7XG4gICAgY29uc3Qgc2lnID0gdThhVG9VOGEoc2lnbmF0dXJlKS5zdWJhcnJheSgwLCA2NCk7XG4gICAgY29uc3QgbXNnID0gdThhVG9VOGEobXNnSGFzaCk7XG4gICAgY29uc3QgcHVibGljS2V5ID0gIWhhc0JpZ0ludCB8fCAoIW9ubHlKcyAmJiBpc1JlYWR5KCkpXG4gICAgICAgID8gd2FzbShtc2csIHNpZywgcmVjb3ZlcnkpXG4gICAgICAgIDogc2VjcDI1NmsxLlNpZ25hdHVyZVxuICAgICAgICAgICAgLmZyb21Db21wYWN0KHNpZylcbiAgICAgICAgICAgIC5hZGRSZWNvdmVyeUJpdChyZWNvdmVyeSlcbiAgICAgICAgICAgIC5yZWNvdmVyUHVibGljS2V5KG1zZylcbiAgICAgICAgICAgIC50b1Jhd0J5dGVzKCk7XG4gICAgaWYgKCFwdWJsaWNLZXkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmFibGUgdG8gcmVjb3ZlciBwdWJsaWNLZXkgZnJvbSBzaWduYXR1cmUnKTtcbiAgICB9XG4gICAgcmV0dXJuIGhhc2hUeXBlID09PSAna2VjY2FrJ1xuICAgICAgICA/IHNlY3AyNTZrMUV4cGFuZChwdWJsaWNLZXksIG9ubHlKcylcbiAgICAgICAgOiBzZWNwMjU2azFDb21wcmVzcyhwdWJsaWNLZXksIG9ubHlKcyk7XG59XG4iXSwibmFtZXMiOlsic2VjcDI1NmsxIiwiaGFzQmlnSW50IiwidThhVG9VOGEiLCJpc1JlYWR5Iiwic2VjcDI1NmsxUmVjb3ZlciIsIndhc20iLCJzZWNwMjU2azFDb21wcmVzcyIsInNlY3AyNTZrMUV4cGFuZCIsIm1zZ0hhc2giLCJzaWduYXR1cmUiLCJyZWNvdmVyeSIsImhhc2hUeXBlIiwib25seUpzIiwic2lnIiwic3ViYXJyYXkiLCJtc2ciLCJwdWJsaWNLZXkiLCJTaWduYXR1cmUiLCJmcm9tQ29tcGFjdCIsImFkZFJlY292ZXJ5Qml0IiwicmVjb3ZlclB1YmxpY0tleSIsInRvUmF3Qnl0ZXMiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/recover.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/sign.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/secp256k1/sign.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   secp256k1Sign: function() { return /* binding */ secp256k1Sign; }\n/* harmony export */ });\n/* harmony import */ var _noble_curves_secp256k1__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @noble/curves/secp256k1 */ \"(app-pages-browser)/./node_modules/@noble/curves/esm/secp256k1.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/has.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/concat.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/bn/toU8a.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../bn.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/bn.js\");\n/* harmony import */ var _hasher_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hasher.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/hasher.js\");\n\n\n\n\n\n/**\n * @name secp256k1Sign\n * @description Returns message signature of `message`, using the supplied pair\n */ function secp256k1Sign(message, param) {\n    let { secretKey } = param, hashType = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"blake2\", onlyJs = arguments.length > 3 ? arguments[3] : void 0;\n    if ((secretKey === null || secretKey === void 0 ? void 0 : secretKey.length) !== 32) {\n        throw new Error(\"Expected valid secp256k1 secretKey, 32-bytes\");\n    }\n    const data = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_0__.hasher)(hashType, message, onlyJs);\n    if (!_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.isReady)()) {\n        return (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.secp256k1Sign)(data, secretKey);\n    }\n    const signature = _noble_curves_secp256k1__WEBPACK_IMPORTED_MODULE_3__.secp256k1.sign(data, secretKey, {\n        lowS: true\n    });\n    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.u8aConcat)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.bnToU8a)(signature.r, _bn_js__WEBPACK_IMPORTED_MODULE_6__.BN_BE_256_OPTS), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.bnToU8a)(signature.s, _bn_js__WEBPACK_IMPORTED_MODULE_6__.BN_BE_256_OPTS), new Uint8Array([\n        signature.recovery || 0\n    ]));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2VjcDI1NmsxL3NpZ24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBb0Q7QUFDVztBQUNRO0FBQzdCO0FBQ0w7QUFDckM7OztDQUdDLEdBQ00sU0FBU0ssY0FBY0ksT0FBTyxFQUFFLEtBQWE7UUFBYixFQUFFQyxTQUFTLEVBQUUsR0FBYixPQUFlQyxXQUFBQSxpRUFBVyxVQUFVQztJQUN2RSxJQUFJRixDQUFBQSxzQkFBQUEsZ0NBQUFBLFVBQVdHLE1BQU0sTUFBSyxJQUFJO1FBQzFCLE1BQU0sSUFBSUMsTUFBTTtJQUNwQjtJQUNBLE1BQU1DLE9BQU9QLGtEQUFNQSxDQUFDRyxVQUFVRixTQUFTRztJQUN2QyxJQUFJLENBQUNWLHFEQUFTQSxJQUFLLENBQUNVLFVBQVVSLDhEQUFPQSxJQUFLO1FBQ3RDLE9BQU9FLG9FQUFJQSxDQUFDUyxNQUFNTDtJQUN0QjtJQUNBLE1BQU1NLFlBQVloQiw4REFBU0EsQ0FBQ2lCLElBQUksQ0FBQ0YsTUFBTUwsV0FBVztRQUFFUSxNQUFNO0lBQUs7SUFDL0QsT0FBT2YseURBQVNBLENBQUNGLHVEQUFPQSxDQUFDZSxVQUFVRyxDQUFDLEVBQUVaLGtEQUFjQSxHQUFHTix1REFBT0EsQ0FBQ2UsVUFBVUksQ0FBQyxFQUFFYixrREFBY0EsR0FBRyxJQUFJYyxXQUFXO1FBQUNMLFVBQVVNLFFBQVEsSUFBSTtLQUFFO0FBQ3pJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2VjcDI1NmsxL3NpZ24uanM/YzYxNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZWNwMjU2azEgfSBmcm9tICdAbm9ibGUvY3VydmVzL3NlY3AyNTZrMSc7XG5pbXBvcnQgeyBiblRvVThhLCBoYXNCaWdJbnQsIHU4YUNvbmNhdCB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbmltcG9ydCB7IGlzUmVhZHksIHNlY3AyNTZrMVNpZ24gYXMgd2FzbSB9IGZyb20gJ0Bwb2xrYWRvdC93YXNtLWNyeXB0byc7XG5pbXBvcnQgeyBCTl9CRV8yNTZfT1BUUyB9IGZyb20gJy4uL2JuLmpzJztcbmltcG9ydCB7IGhhc2hlciB9IGZyb20gJy4vaGFzaGVyLmpzJztcbi8qKlxuICogQG5hbWUgc2VjcDI1NmsxU2lnblxuICogQGRlc2NyaXB0aW9uIFJldHVybnMgbWVzc2FnZSBzaWduYXR1cmUgb2YgYG1lc3NhZ2VgLCB1c2luZyB0aGUgc3VwcGxpZWQgcGFpclxuICovXG5leHBvcnQgZnVuY3Rpb24gc2VjcDI1NmsxU2lnbihtZXNzYWdlLCB7IHNlY3JldEtleSB9LCBoYXNoVHlwZSA9ICdibGFrZTInLCBvbmx5SnMpIHtcbiAgICBpZiAoc2VjcmV0S2V5Py5sZW5ndGggIT09IDMyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgdmFsaWQgc2VjcDI1NmsxIHNlY3JldEtleSwgMzItYnl0ZXMnKTtcbiAgICB9XG4gICAgY29uc3QgZGF0YSA9IGhhc2hlcihoYXNoVHlwZSwgbWVzc2FnZSwgb25seUpzKTtcbiAgICBpZiAoIWhhc0JpZ0ludCB8fCAoIW9ubHlKcyAmJiBpc1JlYWR5KCkpKSB7XG4gICAgICAgIHJldHVybiB3YXNtKGRhdGEsIHNlY3JldEtleSk7XG4gICAgfVxuICAgIGNvbnN0IHNpZ25hdHVyZSA9IHNlY3AyNTZrMS5zaWduKGRhdGEsIHNlY3JldEtleSwgeyBsb3dTOiB0cnVlIH0pO1xuICAgIHJldHVybiB1OGFDb25jYXQoYm5Ub1U4YShzaWduYXR1cmUuciwgQk5fQkVfMjU2X09QVFMpLCBiblRvVThhKHNpZ25hdHVyZS5zLCBCTl9CRV8yNTZfT1BUUyksIG5ldyBVaW50OEFycmF5KFtzaWduYXR1cmUucmVjb3ZlcnkgfHwgMF0pKTtcbn1cbiJdLCJuYW1lcyI6WyJzZWNwMjU2azEiLCJiblRvVThhIiwiaGFzQmlnSW50IiwidThhQ29uY2F0IiwiaXNSZWFkeSIsInNlY3AyNTZrMVNpZ24iLCJ3YXNtIiwiQk5fQkVfMjU2X09QVFMiLCJoYXNoZXIiLCJtZXNzYWdlIiwic2VjcmV0S2V5IiwiaGFzaFR5cGUiLCJvbmx5SnMiLCJsZW5ndGgiLCJFcnJvciIsImRhdGEiLCJzaWduYXR1cmUiLCJzaWduIiwibG93UyIsInIiLCJzIiwiVWludDhBcnJheSIsInJlY292ZXJ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/sign.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/tweakAdd.js":
/*!******************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/secp256k1/tweakAdd.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   secp256k1PrivateKeyTweakAdd: function() { return /* binding */ secp256k1PrivateKeyTweakAdd; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toBigInt.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/bi/consts.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/bi/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/bn/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/u8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/has.js\");\n/* harmony import */ var _polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/x-bigint */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/x-bigint/index.js\");\n/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../bn.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/bn.js\");\n\n\n\nconst N = \"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141\".replace(/ /g, \"\");\nconst N_BI = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(\"0x\".concat(N));\nconst N_BN = new _polkadot_util__WEBPACK_IMPORTED_MODULE_1__(N, \"hex\");\nfunction addBi(seckey, tweak) {\n    let res = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aToBigInt)(tweak, _bn_js__WEBPACK_IMPORTED_MODULE_3__.BN_BE_OPTS);\n    if (res >= N_BI) {\n        throw new Error(\"Tweak parameter is out of range\");\n    }\n    res += (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aToBigInt)(seckey, _bn_js__WEBPACK_IMPORTED_MODULE_3__.BN_BE_OPTS);\n    if (res >= N_BI) {\n        res -= N_BI;\n    }\n    if (res === _polkadot_util__WEBPACK_IMPORTED_MODULE_4__._0n) {\n        throw new Error(\"Invalid resulting private key\");\n    }\n    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.nToU8a)(res, _bn_js__WEBPACK_IMPORTED_MODULE_3__.BN_BE_256_OPTS);\n}\nfunction addBn(seckey, tweak) {\n    const res = new _polkadot_util__WEBPACK_IMPORTED_MODULE_1__(tweak);\n    if (res.cmp(N_BN) >= 0) {\n        throw new Error(\"Tweak parameter is out of range\");\n    }\n    res.iadd(new _polkadot_util__WEBPACK_IMPORTED_MODULE_1__(seckey));\n    if (res.cmp(N_BN) >= 0) {\n        res.isub(N_BN);\n    }\n    if (res.isZero()) {\n        throw new Error(\"Invalid resulting private key\");\n    }\n    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.bnToU8a)(res, _bn_js__WEBPACK_IMPORTED_MODULE_3__.BN_BE_256_OPTS);\n}\nfunction secp256k1PrivateKeyTweakAdd(seckey, tweak, onlyBn) {\n    if (!(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.isU8a)(seckey) || seckey.length !== 32) {\n        throw new Error(\"Expected seckey to be an Uint8Array with length 32\");\n    } else if (!(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.isU8a)(tweak) || tweak.length !== 32) {\n        throw new Error(\"Expected tweak to be an Uint8Array with length 32\");\n    }\n    return !_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.hasBigInt || onlyBn ? addBn(seckey, tweak) : addBi(seckey, tweak);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2VjcDI1NmsxL3R3ZWFrQWRkLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBeUY7QUFDN0M7QUFDVTtBQUN0RCxNQUFNVSxJQUFJLDBFQUEwRUMsT0FBTyxDQUFDLE1BQU07QUFDbEcsTUFBTUMsT0FBT0wsMERBQU1BLENBQUMsS0FBTyxPQUFGRztBQUN6QixNQUFNRyxPQUFPLElBQUlaLDJDQUFFQSxDQUFDUyxHQUFHO0FBQ3ZCLFNBQVNJLE1BQU1DLE1BQU0sRUFBRUMsS0FBSztJQUN4QixJQUFJQyxNQUFNWCwyREFBV0EsQ0FBQ1UsT0FBT1AsOENBQVVBO0lBQ3ZDLElBQUlRLE9BQU9MLE1BQU07UUFDYixNQUFNLElBQUlNLE1BQU07SUFDcEI7SUFDQUQsT0FBT1gsMkRBQVdBLENBQUNTLFFBQVFOLDhDQUFVQTtJQUNyQyxJQUFJUSxPQUFPTCxNQUFNO1FBQ2JLLE9BQU9MO0lBQ1g7SUFDQSxJQUFJSyxRQUFRakIsK0NBQUdBLEVBQUU7UUFDYixNQUFNLElBQUlrQixNQUFNO0lBQ3BCO0lBQ0EsT0FBT2Isc0RBQU1BLENBQUNZLEtBQUtULGtEQUFjQTtBQUNyQztBQUNBLFNBQVNXLE1BQU1KLE1BQU0sRUFBRUMsS0FBSztJQUN4QixNQUFNQyxNQUFNLElBQUloQiwyQ0FBRUEsQ0FBQ2U7SUFDbkIsSUFBSUMsSUFBSUcsR0FBRyxDQUFDUCxTQUFTLEdBQUc7UUFDcEIsTUFBTSxJQUFJSyxNQUFNO0lBQ3BCO0lBQ0FELElBQUlJLElBQUksQ0FBQyxJQUFJcEIsMkNBQUVBLENBQUNjO0lBQ2hCLElBQUlFLElBQUlHLEdBQUcsQ0FBQ1AsU0FBUyxHQUFHO1FBQ3BCSSxJQUFJSyxJQUFJLENBQUNUO0lBQ2I7SUFDQSxJQUFJSSxJQUFJTSxNQUFNLElBQUk7UUFDZCxNQUFNLElBQUlMLE1BQU07SUFDcEI7SUFDQSxPQUFPaEIsdURBQU9BLENBQUNlLEtBQUtULGtEQUFjQTtBQUN0QztBQUNPLFNBQVNnQiw0QkFBNEJULE1BQU0sRUFBRUMsS0FBSyxFQUFFUyxNQUFNO0lBQzdELElBQUksQ0FBQ3JCLHFEQUFLQSxDQUFDVyxXQUFXQSxPQUFPVyxNQUFNLEtBQUssSUFBSTtRQUN4QyxNQUFNLElBQUlSLE1BQU07SUFDcEIsT0FDSyxJQUFJLENBQUNkLHFEQUFLQSxDQUFDWSxVQUFVQSxNQUFNVSxNQUFNLEtBQUssSUFBSTtRQUMzQyxNQUFNLElBQUlSLE1BQU07SUFDcEI7SUFDQSxPQUFPLENBQUNmLHFEQUFTQSxJQUFJc0IsU0FDZk4sTUFBTUosUUFBUUMsU0FDZEYsTUFBTUMsUUFBUUM7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9zZWNwMjU2azEvdHdlYWtBZGQuanM/YTdiNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfMG4sIEJOLCBiblRvVThhLCBoYXNCaWdJbnQsIGlzVThhLCBuVG9VOGEsIHU4YVRvQmlnSW50IH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgQmlnSW50IH0gZnJvbSAnQHBvbGthZG90L3gtYmlnaW50JztcbmltcG9ydCB7IEJOX0JFXzI1Nl9PUFRTLCBCTl9CRV9PUFRTIH0gZnJvbSAnLi4vYm4uanMnO1xuY29uc3QgTiA9ICdmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZSBiYWFlZGNlNiBhZjQ4YTAzYiBiZmQyNWU4YyBkMDM2NDE0MScucmVwbGFjZSgvIC9nLCAnJyk7XG5jb25zdCBOX0JJID0gQmlnSW50KGAweCR7Tn1gKTtcbmNvbnN0IE5fQk4gPSBuZXcgQk4oTiwgJ2hleCcpO1xuZnVuY3Rpb24gYWRkQmkoc2Vja2V5LCB0d2Vhaykge1xuICAgIGxldCByZXMgPSB1OGFUb0JpZ0ludCh0d2VhaywgQk5fQkVfT1BUUyk7XG4gICAgaWYgKHJlcyA+PSBOX0JJKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVHdlYWsgcGFyYW1ldGVyIGlzIG91dCBvZiByYW5nZScpO1xuICAgIH1cbiAgICByZXMgKz0gdThhVG9CaWdJbnQoc2Vja2V5LCBCTl9CRV9PUFRTKTtcbiAgICBpZiAocmVzID49IE5fQkkpIHtcbiAgICAgICAgcmVzIC09IE5fQkk7XG4gICAgfVxuICAgIGlmIChyZXMgPT09IF8wbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgcmVzdWx0aW5nIHByaXZhdGUga2V5Jyk7XG4gICAgfVxuICAgIHJldHVybiBuVG9VOGEocmVzLCBCTl9CRV8yNTZfT1BUUyk7XG59XG5mdW5jdGlvbiBhZGRCbihzZWNrZXksIHR3ZWFrKSB7XG4gICAgY29uc3QgcmVzID0gbmV3IEJOKHR3ZWFrKTtcbiAgICBpZiAocmVzLmNtcChOX0JOKSA+PSAwKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVHdlYWsgcGFyYW1ldGVyIGlzIG91dCBvZiByYW5nZScpO1xuICAgIH1cbiAgICByZXMuaWFkZChuZXcgQk4oc2Vja2V5KSk7XG4gICAgaWYgKHJlcy5jbXAoTl9CTikgPj0gMCkge1xuICAgICAgICByZXMuaXN1YihOX0JOKTtcbiAgICB9XG4gICAgaWYgKHJlcy5pc1plcm8oKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgcmVzdWx0aW5nIHByaXZhdGUga2V5Jyk7XG4gICAgfVxuICAgIHJldHVybiBiblRvVThhKHJlcywgQk5fQkVfMjU2X09QVFMpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHNlY3AyNTZrMVByaXZhdGVLZXlUd2Vha0FkZChzZWNrZXksIHR3ZWFrLCBvbmx5Qm4pIHtcbiAgICBpZiAoIWlzVThhKHNlY2tleSkgfHwgc2Vja2V5Lmxlbmd0aCAhPT0gMzIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCBzZWNrZXkgdG8gYmUgYW4gVWludDhBcnJheSB3aXRoIGxlbmd0aCAzMicpO1xuICAgIH1cbiAgICBlbHNlIGlmICghaXNVOGEodHdlYWspIHx8IHR3ZWFrLmxlbmd0aCAhPT0gMzIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCB0d2VhayB0byBiZSBhbiBVaW50OEFycmF5IHdpdGggbGVuZ3RoIDMyJyk7XG4gICAgfVxuICAgIHJldHVybiAhaGFzQmlnSW50IHx8IG9ubHlCblxuICAgICAgICA/IGFkZEJuKHNlY2tleSwgdHdlYWspXG4gICAgICAgIDogYWRkQmkoc2Vja2V5LCB0d2Vhayk7XG59XG4iXSwibmFtZXMiOlsiXzBuIiwiQk4iLCJiblRvVThhIiwiaGFzQmlnSW50IiwiaXNVOGEiLCJuVG9VOGEiLCJ1OGFUb0JpZ0ludCIsIkJpZ0ludCIsIkJOX0JFXzI1Nl9PUFRTIiwiQk5fQkVfT1BUUyIsIk4iLCJyZXBsYWNlIiwiTl9CSSIsIk5fQk4iLCJhZGRCaSIsInNlY2tleSIsInR3ZWFrIiwicmVzIiwiRXJyb3IiLCJhZGRCbiIsImNtcCIsImlhZGQiLCJpc3ViIiwiaXNaZXJvIiwic2VjcDI1NmsxUHJpdmF0ZUtleVR3ZWFrQWRkIiwib25seUJuIiwibGVuZ3RoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/tweakAdd.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/verify.js":
/*!****************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/secp256k1/verify.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   secp256k1Verify: function() { return /* binding */ secp256k1Verify; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/eq.js\");\n/* harmony import */ var _hasher_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hasher.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/hasher.js\");\n/* harmony import */ var _recover_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./recover.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/recover.js\");\n\n\n\n/**\n * @name secp256k1Verify\n * @description Verifies the signature of `message`, using the supplied pair\n */ function secp256k1Verify(msgHash, signature, address) {\n    let hashType = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : \"blake2\", onlyJs = arguments.length > 4 ? arguments[4] : void 0;\n    const sig = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(signature);\n    if (sig.length !== 65) {\n        throw new Error(\"Expected signature with 65 bytes, \".concat(sig.length, \" found instead\"));\n    }\n    const publicKey = (0,_recover_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1Recover)((0,_hasher_js__WEBPACK_IMPORTED_MODULE_2__.hasher)(hashType, msgHash), sig, sig[64], hashType, onlyJs);\n    const signerAddr = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_2__.hasher)(hashType, publicKey, onlyJs);\n    const inputAddr = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(address);\n    // for Ethereum (keccak) the last 20 bytes is the address\n    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aEq)(publicKey, inputAddr) || (hashType === \"keccak\" ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aEq)(signerAddr.slice(-20), inputAddr.slice(-20)) : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aEq)(signerAddr, inputAddr));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2VjcDI1NmsxL3ZlcmlmeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFpRDtBQUNaO0FBQ1c7QUFDaEQ7OztDQUdDLEdBQ00sU0FBU0ksZ0JBQWdCQyxPQUFPLEVBQUVDLFNBQVMsRUFBRUMsT0FBTztRQUFFQyxXQUFBQSxpRUFBVyxVQUFVQztJQUM5RSxNQUFNQyxNQUFNVCx3REFBUUEsQ0FBQ0s7SUFDckIsSUFBSUksSUFBSUMsTUFBTSxLQUFLLElBQUk7UUFDbkIsTUFBTSxJQUFJQyxNQUFNLHFDQUFnRCxPQUFYRixJQUFJQyxNQUFNLEVBQUM7SUFDcEU7SUFDQSxNQUFNRSxZQUFZViw2REFBZ0JBLENBQUNELGtEQUFNQSxDQUFDTSxVQUFVSCxVQUFVSyxLQUFLQSxHQUFHLENBQUMsR0FBRyxFQUFFRixVQUFVQztJQUN0RixNQUFNSyxhQUFhWixrREFBTUEsQ0FBQ00sVUFBVUssV0FBV0o7SUFDL0MsTUFBTU0sWUFBWWQsd0RBQVFBLENBQUNNO0lBQzNCLHlEQUF5RDtJQUN6RCxPQUFPUCxxREFBS0EsQ0FBQ2EsV0FBV0UsY0FBZVAsQ0FBQUEsYUFBYSxXQUM5Q1IscURBQUtBLENBQUNjLFdBQVdFLEtBQUssQ0FBQyxDQUFDLEtBQUtELFVBQVVDLEtBQUssQ0FBQyxDQUFDLE9BQzlDaEIscURBQUtBLENBQUNjLFlBQVlDLFVBQVM7QUFDckMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9zZWNwMjU2azEvdmVyaWZ5LmpzPzU5MjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdThhRXEsIHU4YVRvVThhIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgaGFzaGVyIH0gZnJvbSAnLi9oYXNoZXIuanMnO1xuaW1wb3J0IHsgc2VjcDI1NmsxUmVjb3ZlciB9IGZyb20gJy4vcmVjb3Zlci5qcyc7XG4vKipcbiAqIEBuYW1lIHNlY3AyNTZrMVZlcmlmeVxuICogQGRlc2NyaXB0aW9uIFZlcmlmaWVzIHRoZSBzaWduYXR1cmUgb2YgYG1lc3NhZ2VgLCB1c2luZyB0aGUgc3VwcGxpZWQgcGFpclxuICovXG5leHBvcnQgZnVuY3Rpb24gc2VjcDI1NmsxVmVyaWZ5KG1zZ0hhc2gsIHNpZ25hdHVyZSwgYWRkcmVzcywgaGFzaFR5cGUgPSAnYmxha2UyJywgb25seUpzKSB7XG4gICAgY29uc3Qgc2lnID0gdThhVG9VOGEoc2lnbmF0dXJlKTtcbiAgICBpZiAoc2lnLmxlbmd0aCAhPT0gNjUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBFeHBlY3RlZCBzaWduYXR1cmUgd2l0aCA2NSBieXRlcywgJHtzaWcubGVuZ3RofSBmb3VuZCBpbnN0ZWFkYCk7XG4gICAgfVxuICAgIGNvbnN0IHB1YmxpY0tleSA9IHNlY3AyNTZrMVJlY292ZXIoaGFzaGVyKGhhc2hUeXBlLCBtc2dIYXNoKSwgc2lnLCBzaWdbNjRdLCBoYXNoVHlwZSwgb25seUpzKTtcbiAgICBjb25zdCBzaWduZXJBZGRyID0gaGFzaGVyKGhhc2hUeXBlLCBwdWJsaWNLZXksIG9ubHlKcyk7XG4gICAgY29uc3QgaW5wdXRBZGRyID0gdThhVG9VOGEoYWRkcmVzcyk7XG4gICAgLy8gZm9yIEV0aGVyZXVtIChrZWNjYWspIHRoZSBsYXN0IDIwIGJ5dGVzIGlzIHRoZSBhZGRyZXNzXG4gICAgcmV0dXJuIHU4YUVxKHB1YmxpY0tleSwgaW5wdXRBZGRyKSB8fCAoaGFzaFR5cGUgPT09ICdrZWNjYWsnXG4gICAgICAgID8gdThhRXEoc2lnbmVyQWRkci5zbGljZSgtMjApLCBpbnB1dEFkZHIuc2xpY2UoLTIwKSlcbiAgICAgICAgOiB1OGFFcShzaWduZXJBZGRyLCBpbnB1dEFkZHIpKTtcbn1cbiJdLCJuYW1lcyI6WyJ1OGFFcSIsInU4YVRvVThhIiwiaGFzaGVyIiwic2VjcDI1NmsxUmVjb3ZlciIsInNlY3AyNTZrMVZlcmlmeSIsIm1zZ0hhc2giLCJzaWduYXR1cmUiLCJhZGRyZXNzIiwiaGFzaFR5cGUiLCJvbmx5SnMiLCJzaWciLCJsZW5ndGgiLCJFcnJvciIsInB1YmxpY0tleSIsInNpZ25lckFkZHIiLCJpbnB1dEFkZHIiLCJzbGljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/verify.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/sha/asU8a.js":
/*!*********************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/sha/asU8a.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sha256AsU8a: function() { return /* binding */ sha256AsU8a; },\n/* harmony export */   sha512AsU8a: function() { return /* binding */ sha512AsU8a; },\n/* harmony export */   shaAsU8a: function() { return /* binding */ shaAsU8a; }\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @noble/hashes/sha512 */ \"(app-pages-browser)/./node_modules/@noble/hashes/esm/sha512.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/helpers.js\");\n\n\n\n\n/**\n * @name shaAsU8a\n * @summary Creates a sha Uint8Array from the input.\n */ const shaAsU8a = /*#__PURE__*/ (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.createDualHasher)({\n    256: _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.sha256,\n    512: _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.sha512\n}, {\n    256: _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256,\n    512: _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_3__.sha512\n});\n/**\n * @name sha256AsU8a\n * @summary Creates a sha256 Uint8Array from the input.\n */ const sha256AsU8a = /*#__PURE__*/ (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.createBitHasher)(256, shaAsU8a);\n/**\n * @name sha512AsU8a\n * @summary Creates a sha512 Uint8Array from the input.\n */ const sha512AsU8a = /*#__PURE__*/ (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.createBitHasher)(512, shaAsU8a);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2hhL2FzVThhLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBMEQ7QUFDQTtBQUNIO0FBQ1c7QUFDbEU7OztDQUdDLEdBQ00sTUFBTU0sV0FBVyxXQUFXLEdBQUdELDZEQUFnQkEsQ0FBQztJQUFFLEtBQUtMLHlEQUFNQTtJQUFFLEtBQUtFLHlEQUFNQTtBQUFDLEdBQUc7SUFBRSxLQUFLRCx3REFBUUE7SUFBRSxLQUFLRSx3REFBUUE7QUFBQyxHQUFHO0FBQ3ZIOzs7Q0FHQyxHQUNNLE1BQU1JLGNBQWMsV0FBVyxHQUFHSCw0REFBZUEsQ0FBQyxLQUFLRSxVQUFVO0FBQ3hFOzs7Q0FHQyxHQUNNLE1BQU1FLGNBQWMsV0FBVyxHQUFHSiw0REFBZUEsQ0FBQyxLQUFLRSxVQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2hhL2FzVThhLmpzPzI5ZDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2hhMjU2IGFzIHNoYTI1NkpzIH0gZnJvbSAnQG5vYmxlL2hhc2hlcy9zaGEyNTYnO1xuaW1wb3J0IHsgc2hhNTEyIGFzIHNoYTUxMkpzIH0gZnJvbSAnQG5vYmxlL2hhc2hlcy9zaGE1MTInO1xuaW1wb3J0IHsgc2hhMjU2LCBzaGE1MTIgfSBmcm9tICdAcG9sa2Fkb3Qvd2FzbS1jcnlwdG8nO1xuaW1wb3J0IHsgY3JlYXRlQml0SGFzaGVyLCBjcmVhdGVEdWFsSGFzaGVyIH0gZnJvbSAnLi4vaGVscGVycy5qcyc7XG4vKipcbiAqIEBuYW1lIHNoYUFzVThhXG4gKiBAc3VtbWFyeSBDcmVhdGVzIGEgc2hhIFVpbnQ4QXJyYXkgZnJvbSB0aGUgaW5wdXQuXG4gKi9cbmV4cG9ydCBjb25zdCBzaGFBc1U4YSA9IC8qI19fUFVSRV9fKi8gY3JlYXRlRHVhbEhhc2hlcih7IDI1Njogc2hhMjU2LCA1MTI6IHNoYTUxMiB9LCB7IDI1Njogc2hhMjU2SnMsIDUxMjogc2hhNTEySnMgfSk7XG4vKipcbiAqIEBuYW1lIHNoYTI1NkFzVThhXG4gKiBAc3VtbWFyeSBDcmVhdGVzIGEgc2hhMjU2IFVpbnQ4QXJyYXkgZnJvbSB0aGUgaW5wdXQuXG4gKi9cbmV4cG9ydCBjb25zdCBzaGEyNTZBc1U4YSA9IC8qI19fUFVSRV9fKi8gY3JlYXRlQml0SGFzaGVyKDI1Niwgc2hhQXNVOGEpO1xuLyoqXG4gKiBAbmFtZSBzaGE1MTJBc1U4YVxuICogQHN1bW1hcnkgQ3JlYXRlcyBhIHNoYTUxMiBVaW50OEFycmF5IGZyb20gdGhlIGlucHV0LlxuICovXG5leHBvcnQgY29uc3Qgc2hhNTEyQXNVOGEgPSAvKiNfX1BVUkVfXyovIGNyZWF0ZUJpdEhhc2hlcig1MTIsIHNoYUFzVThhKTtcbiJdLCJuYW1lcyI6WyJzaGEyNTYiLCJzaGEyNTZKcyIsInNoYTUxMiIsInNoYTUxMkpzIiwiY3JlYXRlQml0SGFzaGVyIiwiY3JlYXRlRHVhbEhhc2hlciIsInNoYUFzVThhIiwic2hhMjU2QXNVOGEiLCJzaGE1MTJBc1U4YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/sha/asU8a.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/sha/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/sha/index.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sha256AsU8a: function() { return /* reexport safe */ _asU8a_js__WEBPACK_IMPORTED_MODULE_0__.sha256AsU8a; },\n/* harmony export */   sha512AsU8a: function() { return /* reexport safe */ _asU8a_js__WEBPACK_IMPORTED_MODULE_0__.sha512AsU8a; },\n/* harmony export */   shaAsU8a: function() { return /* reexport safe */ _asU8a_js__WEBPACK_IMPORTED_MODULE_0__.shaAsU8a; }\n/* harmony export */ });\n/* harmony import */ var _asU8a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./asU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/sha/asU8a.js\");\n/**\n * @summary Implements Sha-256/512 hashing functions for a variety of input and outputs\n */ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2hhL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Q0FFQyxHQUMrRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL3NoYS9pbmRleC5qcz8wMDAwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHN1bW1hcnkgSW1wbGVtZW50cyBTaGEtMjU2LzUxMiBoYXNoaW5nIGZ1bmN0aW9ucyBmb3IgYSB2YXJpZXR5IG9mIGlucHV0IGFuZCBvdXRwdXRzXG4gKi9cbmV4cG9ydCB7IHNoYTI1NkFzVThhLCBzaGE1MTJBc1U4YSwgc2hhQXNVOGEgfSBmcm9tICcuL2FzVThhLmpzJztcbiJdLCJuYW1lcyI6WyJzaGEyNTZBc1U4YSIsInNoYTUxMkFzVThhIiwic2hhQXNVOGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/sha/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/signature/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/signature/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   signatureVerify: function() { return /* reexport safe */ _verify_js__WEBPACK_IMPORTED_MODULE_0__.signatureVerify; }\n/* harmony export */ });\n/* harmony import */ var _verify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./verify.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/signature/verify.js\");\n/**\n * @summary Utilities for working with signatures\n */ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc2lnbmF0dXJlL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7O0NBRUMsR0FDNkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9zaWduYXR1cmUvaW5kZXguanM/ODkzZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBzdW1tYXJ5IFV0aWxpdGllcyBmb3Igd29ya2luZyB3aXRoIHNpZ25hdHVyZXNcbiAqL1xuZXhwb3J0IHsgc2lnbmF0dXJlVmVyaWZ5IH0gZnJvbSAnLi92ZXJpZnkuanMnO1xuIl0sIm5hbWVzIjpbInNpZ25hdHVyZVZlcmlmeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/signature/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/signature/verify.js":
/*!****************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/signature/verify.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   signatureVerify: function() { return /* binding */ signatureVerify; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/wrap.js\");\n/* harmony import */ var _address_decode_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../address/decode.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/address/decode.js\");\n/* harmony import */ var _ed25519_verify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ed25519/verify.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/ed25519/verify.js\");\n/* harmony import */ var _secp256k1_verify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../secp256k1/verify.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/secp256k1/verify.js\");\n/* harmony import */ var _sr25519_verify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../sr25519/verify.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/verify.js\");\n\n\n\n\n\nconst secp256k1VerifyHasher = (hashType)=>(message, signature, publicKey)=>(0,_secp256k1_verify_js__WEBPACK_IMPORTED_MODULE_0__.secp256k1Verify)(message, signature, publicKey, hashType);\nconst VERIFIERS_ECDSA = [\n    [\n        \"ecdsa\",\n        secp256k1VerifyHasher(\"blake2\")\n    ],\n    [\n        \"ethereum\",\n        secp256k1VerifyHasher(\"keccak\")\n    ]\n];\nconst VERIFIERS = [\n    [\n        \"ed25519\",\n        _ed25519_verify_js__WEBPACK_IMPORTED_MODULE_1__.ed25519Verify\n    ],\n    [\n        \"sr25519\",\n        _sr25519_verify_js__WEBPACK_IMPORTED_MODULE_2__.sr25519Verify\n    ]\n];\nfunction verifyDetect(result, param) {\n    let { message, publicKey, signature } = param, verifiers = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [\n        ...VERIFIERS,\n        ...VERIFIERS_ECDSA\n    ];\n    result.isValid = verifiers.some((param)=>{\n        let [crypto, verify] = param;\n        try {\n            if (verify(message, signature, publicKey)) {\n                result.crypto = crypto;\n                return true;\n            }\n        } catch (e) {\n        // do nothing, result.isValid still set to false\n        }\n        return false;\n    });\n    return result;\n}\nfunction verifyMultisig(result, param) {\n    let { message, publicKey, signature } = param;\n    if (![\n        0,\n        1,\n        2\n    ].includes(signature[0]) || ![\n        65,\n        66\n    ].includes(signature.length)) {\n        throw new Error(\"Unknown crypto type, expected signature prefix [0..2], found \".concat(signature[0]));\n    }\n    // If the signature is 66 bytes it must be an ecdsa signature\n    // containing: prefix [1 byte] + signature [65] bytes.\n    // Remove the and then verify\n    if (signature.length === 66) {\n        result = verifyDetect(result, {\n            message,\n            publicKey,\n            signature: signature.subarray(1)\n        }, VERIFIERS_ECDSA);\n    } else {\n        // The signature contains 65 bytes which is either\n        // - A ed25519 or sr25519 signature [1 byte prefix + 64 bytes]\n        // - An ecdsa signature [65 bytes]\n        result = verifyDetect(result, {\n            message,\n            publicKey,\n            signature: signature.subarray(1)\n        }, VERIFIERS);\n        if (!result.isValid) {\n            result = verifyDetect(result, {\n                message,\n                publicKey,\n                signature\n            }, VERIFIERS_ECDSA);\n        }\n        // If both failed, explicitly set crypto to 'none'\n        if (!result.isValid) {\n            result.crypto = \"none\";\n        }\n    }\n    return result;\n}\nfunction getVerifyFn(signature) {\n    return [\n        0,\n        1,\n        2\n    ].includes(signature[0]) && [\n        65,\n        66\n    ].includes(signature.length) ? verifyMultisig : verifyDetect;\n}\nfunction signatureVerify(message, signature, addressOrPublicKey) {\n    const signatureU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aToU8a)(signature);\n    if (![\n        64,\n        65,\n        66\n    ].includes(signatureU8a.length)) {\n        throw new Error(\"Invalid signature length, expected [64..66] bytes, found \".concat(signatureU8a.length));\n    }\n    const publicKey = (0,_address_decode_js__WEBPACK_IMPORTED_MODULE_4__.decodeAddress)(addressOrPublicKey);\n    const input = {\n        message: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aToU8a)(message),\n        publicKey,\n        signature: signatureU8a\n    };\n    const result = {\n        crypto: \"none\",\n        isValid: false,\n        isWrapped: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.u8aIsWrapped)(input.message, true),\n        publicKey\n    };\n    const isWrappedBytes = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.u8aIsWrapped)(input.message, false);\n    const verifyFn = getVerifyFn(signatureU8a);\n    verifyFn(result, input);\n    if (result.crypto !== \"none\" || result.isWrapped && !isWrappedBytes) {\n        return result;\n    }\n    input.message = isWrappedBytes ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.u8aUnwrapBytes)(input.message) : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.u8aWrapBytes)(input.message);\n    return verifyFn(result, input);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/signature/verify.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/agreement.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/sr25519/agreement.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sr25519Agreement: function() { return /* binding */ sr25519Agreement; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n\n\n/**\n * @name sr25519Agreement\n * @description Key agreement between other's public key and self secret key\n */ function sr25519Agreement(secretKey, publicKey) {\n    const secretKeyU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(secretKey);\n    const publicKeyU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(publicKey);\n    if (publicKeyU8a.length !== 32) {\n        throw new Error(\"Invalid publicKey, received \".concat(publicKeyU8a.length, \" bytes, expected 32\"));\n    } else if (secretKeyU8a.length !== 64) {\n        throw new Error(\"Invalid secretKey, received \".concat(secretKeyU8a.length, \" bytes, expected 64\"));\n    }\n    return (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.sr25519Agree)(publicKeyU8a, secretKeyU8a);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc3IyNTUxOS9hZ3JlZW1lbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBDO0FBQ1c7QUFDckQ7OztDQUdDLEdBQ00sU0FBU0UsaUJBQWlCQyxTQUFTLEVBQUVDLFNBQVM7SUFDakQsTUFBTUMsZUFBZUwsd0RBQVFBLENBQUNHO0lBQzlCLE1BQU1HLGVBQWVOLHdEQUFRQSxDQUFDSTtJQUM5QixJQUFJRSxhQUFhQyxNQUFNLEtBQUssSUFBSTtRQUM1QixNQUFNLElBQUlDLE1BQU0sK0JBQW1ELE9BQXBCRixhQUFhQyxNQUFNLEVBQUM7SUFDdkUsT0FDSyxJQUFJRixhQUFhRSxNQUFNLEtBQUssSUFBSTtRQUNqQyxNQUFNLElBQUlDLE1BQU0sK0JBQW1ELE9BQXBCSCxhQUFhRSxNQUFNLEVBQUM7SUFDdkU7SUFDQSxPQUFPTixtRUFBWUEsQ0FBQ0ssY0FBY0Q7QUFDdEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9zcjI1NTE5L2FncmVlbWVudC5qcz80MWI4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHU4YVRvVThhIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgc3IyNTUxOUFncmVlIH0gZnJvbSAnQHBvbGthZG90L3dhc20tY3J5cHRvJztcbi8qKlxuICogQG5hbWUgc3IyNTUxOUFncmVlbWVudFxuICogQGRlc2NyaXB0aW9uIEtleSBhZ3JlZW1lbnQgYmV0d2VlbiBvdGhlcidzIHB1YmxpYyBrZXkgYW5kIHNlbGYgc2VjcmV0IGtleVxuICovXG5leHBvcnQgZnVuY3Rpb24gc3IyNTUxOUFncmVlbWVudChzZWNyZXRLZXksIHB1YmxpY0tleSkge1xuICAgIGNvbnN0IHNlY3JldEtleVU4YSA9IHU4YVRvVThhKHNlY3JldEtleSk7XG4gICAgY29uc3QgcHVibGljS2V5VThhID0gdThhVG9VOGEocHVibGljS2V5KTtcbiAgICBpZiAocHVibGljS2V5VThhLmxlbmd0aCAhPT0gMzIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHB1YmxpY0tleSwgcmVjZWl2ZWQgJHtwdWJsaWNLZXlVOGEubGVuZ3RofSBieXRlcywgZXhwZWN0ZWQgMzJgKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoc2VjcmV0S2V5VThhLmxlbmd0aCAhPT0gNjQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHNlY3JldEtleSwgcmVjZWl2ZWQgJHtzZWNyZXRLZXlVOGEubGVuZ3RofSBieXRlcywgZXhwZWN0ZWQgNjRgKTtcbiAgICB9XG4gICAgcmV0dXJuIHNyMjU1MTlBZ3JlZShwdWJsaWNLZXlVOGEsIHNlY3JldEtleVU4YSk7XG59XG4iXSwibmFtZXMiOlsidThhVG9VOGEiLCJzcjI1NTE5QWdyZWUiLCJzcjI1NTE5QWdyZWVtZW50Iiwic2VjcmV0S2V5IiwicHVibGljS2V5Iiwic2VjcmV0S2V5VThhIiwicHVibGljS2V5VThhIiwibGVuZ3RoIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/agreement.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/derive.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/sr25519/derive.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDeriveFn: function() { return /* binding */ createDeriveFn; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/u8a.js\");\n/* harmony import */ var _pair_fromU8a_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pair/fromU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/pair/fromU8a.js\");\n/* harmony import */ var _pair_toU8a_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pair/toU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/pair/toU8a.js\");\n\n\n\nfunction createDeriveFn(derive) {\n    return (keypair, chainCode)=>{\n        if (!(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isU8a)(chainCode) || chainCode.length !== 32) {\n            throw new Error(\"Invalid chainCode passed to derive\");\n        }\n        return (0,_pair_fromU8a_js__WEBPACK_IMPORTED_MODULE_1__.sr25519PairFromU8a)(derive((0,_pair_toU8a_js__WEBPACK_IMPORTED_MODULE_2__.sr25519KeypairToU8a)(keypair), chainCode));\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc3IyNTUxOS9kZXJpdmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF1QztBQUNnQjtBQUNEO0FBQy9DLFNBQVNHLGVBQWVDLE1BQU07SUFDakMsT0FBTyxDQUFDQyxTQUFTQztRQUNiLElBQUksQ0FBQ04scURBQUtBLENBQUNNLGNBQWNBLFVBQVVDLE1BQU0sS0FBSyxJQUFJO1lBQzlDLE1BQU0sSUFBSUMsTUFBTTtRQUNwQjtRQUNBLE9BQU9QLG9FQUFrQkEsQ0FBQ0csT0FBT0YsbUVBQW1CQSxDQUFDRyxVQUFVQztJQUNuRTtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc3IyNTUxOS9kZXJpdmUuanM/M2RhMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc1U4YSB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbmltcG9ydCB7IHNyMjU1MTlQYWlyRnJvbVU4YSB9IGZyb20gJy4vcGFpci9mcm9tVThhLmpzJztcbmltcG9ydCB7IHNyMjU1MTlLZXlwYWlyVG9VOGEgfSBmcm9tICcuL3BhaXIvdG9VOGEuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZURlcml2ZUZuKGRlcml2ZSkge1xuICAgIHJldHVybiAoa2V5cGFpciwgY2hhaW5Db2RlKSA9PiB7XG4gICAgICAgIGlmICghaXNVOGEoY2hhaW5Db2RlKSB8fCBjaGFpbkNvZGUubGVuZ3RoICE9PSAzMikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGNoYWluQ29kZSBwYXNzZWQgdG8gZGVyaXZlJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNyMjU1MTlQYWlyRnJvbVU4YShkZXJpdmUoc3IyNTUxOUtleXBhaXJUb1U4YShrZXlwYWlyKSwgY2hhaW5Db2RlKSk7XG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6WyJpc1U4YSIsInNyMjU1MTlQYWlyRnJvbVU4YSIsInNyMjU1MTlLZXlwYWlyVG9VOGEiLCJjcmVhdGVEZXJpdmVGbiIsImRlcml2ZSIsImtleXBhaXIiLCJjaGFpbkNvZGUiLCJsZW5ndGgiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/derive.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/deriveHard.js":
/*!******************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/sr25519/deriveHard.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sr25519DeriveHard: function() { return /* binding */ sr25519DeriveHard; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n/* harmony import */ var _derive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./derive.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/derive.js\");\n\n\nconst sr25519DeriveHard = /*#__PURE__*/ (0,_derive_js__WEBPACK_IMPORTED_MODULE_0__.createDeriveFn)(_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.sr25519DeriveKeypairHard);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc3IyNTUxOS9kZXJpdmVIYXJkLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFpRTtBQUNwQjtBQUN0QyxNQUFNRSxvQkFBb0IsV0FBVyxHQUFHRCwwREFBY0EsQ0FBQ0QsMkVBQXdCQSxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc3IyNTUxOS9kZXJpdmVIYXJkLmpzP2U5NjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3IyNTUxOURlcml2ZUtleXBhaXJIYXJkIH0gZnJvbSAnQHBvbGthZG90L3dhc20tY3J5cHRvJztcbmltcG9ydCB7IGNyZWF0ZURlcml2ZUZuIH0gZnJvbSAnLi9kZXJpdmUuanMnO1xuZXhwb3J0IGNvbnN0IHNyMjU1MTlEZXJpdmVIYXJkID0gLyojX19QVVJFX18qLyBjcmVhdGVEZXJpdmVGbihzcjI1NTE5RGVyaXZlS2V5cGFpckhhcmQpO1xuIl0sIm5hbWVzIjpbInNyMjU1MTlEZXJpdmVLZXlwYWlySGFyZCIsImNyZWF0ZURlcml2ZUZuIiwic3IyNTUxOURlcml2ZUhhcmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/deriveHard.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/derivePublic.js":
/*!********************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/sr25519/derivePublic.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sr25519DerivePublic: function() { return /* binding */ sr25519DerivePublic; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/u8a.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n\n\nfunction sr25519DerivePublic(publicKey, chainCode) {\n    const publicKeyU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(publicKey);\n    if (!(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isU8a)(chainCode) || chainCode.length !== 32) {\n        throw new Error(\"Invalid chainCode passed to derive\");\n    } else if (publicKeyU8a.length !== 32) {\n        throw new Error(\"Invalid publicKey, received \".concat(publicKeyU8a.length, \" bytes, expected 32\"));\n    }\n    return (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.sr25519DerivePublicSoft)(publicKeyU8a, chainCode);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc3IyNTUxOS9kZXJpdmVQdWJsaWMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFpRDtBQUNlO0FBQ3pELFNBQVNHLG9CQUFvQkMsU0FBUyxFQUFFQyxTQUFTO0lBQ3BELE1BQU1DLGVBQWVMLHdEQUFRQSxDQUFDRztJQUM5QixJQUFJLENBQUNKLHFEQUFLQSxDQUFDSyxjQUFjQSxVQUFVRSxNQUFNLEtBQUssSUFBSTtRQUM5QyxNQUFNLElBQUlDLE1BQU07SUFDcEIsT0FDSyxJQUFJRixhQUFhQyxNQUFNLEtBQUssSUFBSTtRQUNqQyxNQUFNLElBQUlDLE1BQU0sK0JBQW1ELE9BQXBCRixhQUFhQyxNQUFNLEVBQUM7SUFDdkU7SUFDQSxPQUFPTCw4RUFBdUJBLENBQUNJLGNBQWNEO0FBQ2pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc3IyNTUxOS9kZXJpdmVQdWJsaWMuanM/MWRkNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc1U4YSwgdThhVG9VOGEgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG5pbXBvcnQgeyBzcjI1NTE5RGVyaXZlUHVibGljU29mdCB9IGZyb20gJ0Bwb2xrYWRvdC93YXNtLWNyeXB0byc7XG5leHBvcnQgZnVuY3Rpb24gc3IyNTUxOURlcml2ZVB1YmxpYyhwdWJsaWNLZXksIGNoYWluQ29kZSkge1xuICAgIGNvbnN0IHB1YmxpY0tleVU4YSA9IHU4YVRvVThhKHB1YmxpY0tleSk7XG4gICAgaWYgKCFpc1U4YShjaGFpbkNvZGUpIHx8IGNoYWluQ29kZS5sZW5ndGggIT09IDMyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBjaGFpbkNvZGUgcGFzc2VkIHRvIGRlcml2ZScpO1xuICAgIH1cbiAgICBlbHNlIGlmIChwdWJsaWNLZXlVOGEubGVuZ3RoICE9PSAzMikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgcHVibGljS2V5LCByZWNlaXZlZCAke3B1YmxpY0tleVU4YS5sZW5ndGh9IGJ5dGVzLCBleHBlY3RlZCAzMmApO1xuICAgIH1cbiAgICByZXR1cm4gc3IyNTUxOURlcml2ZVB1YmxpY1NvZnQocHVibGljS2V5VThhLCBjaGFpbkNvZGUpO1xufVxuIl0sIm5hbWVzIjpbImlzVThhIiwidThhVG9VOGEiLCJzcjI1NTE5RGVyaXZlUHVibGljU29mdCIsInNyMjU1MTlEZXJpdmVQdWJsaWMiLCJwdWJsaWNLZXkiLCJjaGFpbkNvZGUiLCJwdWJsaWNLZXlVOGEiLCJsZW5ndGgiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/derivePublic.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/deriveSoft.js":
/*!******************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/sr25519/deriveSoft.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sr25519DeriveSoft: function() { return /* binding */ sr25519DeriveSoft; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n/* harmony import */ var _derive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./derive.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/derive.js\");\n\n\nconst sr25519DeriveSoft = /*#__PURE__*/ (0,_derive_js__WEBPACK_IMPORTED_MODULE_0__.createDeriveFn)(_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.sr25519DeriveKeypairSoft);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc3IyNTUxOS9kZXJpdmVTb2Z0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFpRTtBQUNwQjtBQUN0QyxNQUFNRSxvQkFBb0IsV0FBVyxHQUFHRCwwREFBY0EsQ0FBQ0QsMkVBQXdCQSxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc3IyNTUxOS9kZXJpdmVTb2Z0LmpzPzEyYWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3IyNTUxOURlcml2ZUtleXBhaXJTb2Z0IH0gZnJvbSAnQHBvbGthZG90L3dhc20tY3J5cHRvJztcbmltcG9ydCB7IGNyZWF0ZURlcml2ZUZuIH0gZnJvbSAnLi9kZXJpdmUuanMnO1xuZXhwb3J0IGNvbnN0IHNyMjU1MTlEZXJpdmVTb2Z0ID0gLyojX19QVVJFX18qLyBjcmVhdGVEZXJpdmVGbihzcjI1NTE5RGVyaXZlS2V5cGFpclNvZnQpO1xuIl0sIm5hbWVzIjpbInNyMjU1MTlEZXJpdmVLZXlwYWlyU29mdCIsImNyZWF0ZURlcml2ZUZuIiwic3IyNTUxOURlcml2ZVNvZnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/deriveSoft.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/sr25519/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sr25519Agreement: function() { return /* reexport safe */ _agreement_js__WEBPACK_IMPORTED_MODULE_0__.sr25519Agreement; },\n/* harmony export */   sr25519DeriveHard: function() { return /* reexport safe */ _deriveHard_js__WEBPACK_IMPORTED_MODULE_1__.sr25519DeriveHard; },\n/* harmony export */   sr25519DerivePublic: function() { return /* reexport safe */ _derivePublic_js__WEBPACK_IMPORTED_MODULE_2__.sr25519DerivePublic; },\n/* harmony export */   sr25519DeriveSoft: function() { return /* reexport safe */ _deriveSoft_js__WEBPACK_IMPORTED_MODULE_3__.sr25519DeriveSoft; },\n/* harmony export */   sr25519PairFromSeed: function() { return /* reexport safe */ _pair_fromSeed_js__WEBPACK_IMPORTED_MODULE_4__.sr25519PairFromSeed; },\n/* harmony export */   sr25519Sign: function() { return /* reexport safe */ _sign_js__WEBPACK_IMPORTED_MODULE_5__.sr25519Sign; },\n/* harmony export */   sr25519Verify: function() { return /* reexport safe */ _verify_js__WEBPACK_IMPORTED_MODULE_6__.sr25519Verify; },\n/* harmony export */   sr25519VrfSign: function() { return /* reexport safe */ _vrfSign_js__WEBPACK_IMPORTED_MODULE_7__.sr25519VrfSign; },\n/* harmony export */   sr25519VrfVerify: function() { return /* reexport safe */ _vrfVerify_js__WEBPACK_IMPORTED_MODULE_8__.sr25519VrfVerify; }\n/* harmony export */ });\n/* harmony import */ var _agreement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./agreement.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/agreement.js\");\n/* harmony import */ var _deriveHard_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./deriveHard.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/deriveHard.js\");\n/* harmony import */ var _derivePublic_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./derivePublic.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/derivePublic.js\");\n/* harmony import */ var _deriveSoft_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./deriveSoft.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/deriveSoft.js\");\n/* harmony import */ var _pair_fromSeed_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pair/fromSeed.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/pair/fromSeed.js\");\n/* harmony import */ var _sign_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sign.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/sign.js\");\n/* harmony import */ var _verify_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./verify.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/verify.js\");\n/* harmony import */ var _vrfSign_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./vrfSign.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/vrfSign.js\");\n/* harmony import */ var _vrfVerify_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./vrfVerify.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/vrfVerify.js\");\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc3IyNTUxOS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBa0Q7QUFDRTtBQUNJO0FBQ0o7QUFDSztBQUNqQjtBQUNJO0FBQ0U7QUFDSSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL3NyMjU1MTkvaW5kZXguanM/MTE4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBzcjI1NTE5QWdyZWVtZW50IH0gZnJvbSAnLi9hZ3JlZW1lbnQuanMnO1xuZXhwb3J0IHsgc3IyNTUxOURlcml2ZUhhcmQgfSBmcm9tICcuL2Rlcml2ZUhhcmQuanMnO1xuZXhwb3J0IHsgc3IyNTUxOURlcml2ZVB1YmxpYyB9IGZyb20gJy4vZGVyaXZlUHVibGljLmpzJztcbmV4cG9ydCB7IHNyMjU1MTlEZXJpdmVTb2Z0IH0gZnJvbSAnLi9kZXJpdmVTb2Z0LmpzJztcbmV4cG9ydCB7IHNyMjU1MTlQYWlyRnJvbVNlZWQgfSBmcm9tICcuL3BhaXIvZnJvbVNlZWQuanMnO1xuZXhwb3J0IHsgc3IyNTUxOVNpZ24gfSBmcm9tICcuL3NpZ24uanMnO1xuZXhwb3J0IHsgc3IyNTUxOVZlcmlmeSB9IGZyb20gJy4vdmVyaWZ5LmpzJztcbmV4cG9ydCB7IHNyMjU1MTlWcmZTaWduIH0gZnJvbSAnLi92cmZTaWduLmpzJztcbmV4cG9ydCB7IHNyMjU1MTlWcmZWZXJpZnkgfSBmcm9tICcuL3ZyZlZlcmlmeS5qcyc7XG4iXSwibmFtZXMiOlsic3IyNTUxOUFncmVlbWVudCIsInNyMjU1MTlEZXJpdmVIYXJkIiwic3IyNTUxOURlcml2ZVB1YmxpYyIsInNyMjU1MTlEZXJpdmVTb2Z0Iiwic3IyNTUxOVBhaXJGcm9tU2VlZCIsInNyMjU1MTlTaWduIiwic3IyNTUxOVZlcmlmeSIsInNyMjU1MTlWcmZTaWduIiwic3IyNTUxOVZyZlZlcmlmeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/pair/fromSeed.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/sr25519/pair/fromSeed.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sr25519PairFromSeed: function() { return /* binding */ sr25519PairFromSeed; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n/* harmony import */ var _fromU8a_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fromU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/pair/fromU8a.js\");\n\n\n\n/**\n * @name sr25519PairFromSeed\n * @description Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.\n */ function sr25519PairFromSeed(seed) {\n    const seedU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(seed);\n    if (seedU8a.length !== 32) {\n        throw new Error(\"Expected a seed matching 32 bytes, found \".concat(seedU8a.length));\n    }\n    return (0,_fromU8a_js__WEBPACK_IMPORTED_MODULE_1__.sr25519PairFromU8a)((0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.sr25519KeypairFromSeed)(seedU8a));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc3IyNTUxOS9wYWlyL2Zyb21TZWVkLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEM7QUFDcUI7QUFDYjtBQUNsRDs7O0NBR0MsR0FDTSxTQUFTRyxvQkFBb0JDLElBQUk7SUFDcEMsTUFBTUMsVUFBVUwsd0RBQVFBLENBQUNJO0lBQ3pCLElBQUlDLFFBQVFDLE1BQU0sS0FBSyxJQUFJO1FBQ3ZCLE1BQU0sSUFBSUMsTUFBTSw0Q0FBMkQsT0FBZkYsUUFBUUMsTUFBTTtJQUM5RTtJQUNBLE9BQU9KLCtEQUFrQkEsQ0FBQ0QsNkVBQXNCQSxDQUFDSTtBQUNyRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL3NyMjU1MTkvcGFpci9mcm9tU2VlZC5qcz83ZDdiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHU4YVRvVThhIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgc3IyNTUxOUtleXBhaXJGcm9tU2VlZCB9IGZyb20gJ0Bwb2xrYWRvdC93YXNtLWNyeXB0byc7XG5pbXBvcnQgeyBzcjI1NTE5UGFpckZyb21VOGEgfSBmcm9tICcuL2Zyb21VOGEuanMnO1xuLyoqXG4gKiBAbmFtZSBzcjI1NTE5UGFpckZyb21TZWVkXG4gKiBAZGVzY3JpcHRpb24gUmV0dXJucyBhIG9iamVjdCBjb250YWluaW5nIGEgYHB1YmxpY0tleWAgJiBgc2VjcmV0S2V5YCBnZW5lcmF0ZWQgZnJvbSB0aGUgc3VwcGxpZWQgc2VlZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNyMjU1MTlQYWlyRnJvbVNlZWQoc2VlZCkge1xuICAgIGNvbnN0IHNlZWRVOGEgPSB1OGFUb1U4YShzZWVkKTtcbiAgICBpZiAoc2VlZFU4YS5sZW5ndGggIT09IDMyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgRXhwZWN0ZWQgYSBzZWVkIG1hdGNoaW5nIDMyIGJ5dGVzLCBmb3VuZCAke3NlZWRVOGEubGVuZ3RofWApO1xuICAgIH1cbiAgICByZXR1cm4gc3IyNTUxOVBhaXJGcm9tVThhKHNyMjU1MTlLZXlwYWlyRnJvbVNlZWQoc2VlZFU4YSkpO1xufVxuIl0sIm5hbWVzIjpbInU4YVRvVThhIiwic3IyNTUxOUtleXBhaXJGcm9tU2VlZCIsInNyMjU1MTlQYWlyRnJvbVU4YSIsInNyMjU1MTlQYWlyRnJvbVNlZWQiLCJzZWVkIiwic2VlZFU4YSIsImxlbmd0aCIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/pair/fromSeed.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/pair/fromU8a.js":
/*!********************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/sr25519/pair/fromU8a.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sr25519PairFromU8a: function() { return /* binding */ sr25519PairFromU8a; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n\nconst SEC_LEN = 64;\nconst PUB_LEN = 32;\nconst TOT_LEN = SEC_LEN + PUB_LEN;\nfunction sr25519PairFromU8a(full) {\n    const fullU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(full);\n    if (fullU8a.length !== TOT_LEN) {\n        throw new Error(\"Expected keypair with \".concat(TOT_LEN, \" bytes, found \").concat(fullU8a.length));\n    }\n    return {\n        publicKey: fullU8a.slice(SEC_LEN, TOT_LEN),\n        secretKey: fullU8a.slice(0, SEC_LEN)\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc3IyNTUxOS9wYWlyL2Zyb21VOGEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEM7QUFDMUMsTUFBTUMsVUFBVTtBQUNoQixNQUFNQyxVQUFVO0FBQ2hCLE1BQU1DLFVBQVVGLFVBQVVDO0FBQ25CLFNBQVNFLG1CQUFtQkMsSUFBSTtJQUNuQyxNQUFNQyxVQUFVTix3REFBUUEsQ0FBQ0s7SUFDekIsSUFBSUMsUUFBUUMsTUFBTSxLQUFLSixTQUFTO1FBQzVCLE1BQU0sSUFBSUssTUFBTSx5QkFBaURGLE9BQXhCSCxTQUFRLGtCQUErQixPQUFmRyxRQUFRQyxNQUFNO0lBQ25GO0lBQ0EsT0FBTztRQUNIRSxXQUFXSCxRQUFRSSxLQUFLLENBQUNULFNBQVNFO1FBQ2xDUSxXQUFXTCxRQUFRSSxLQUFLLENBQUMsR0FBR1Q7SUFDaEM7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL3NyMjU1MTkvcGFpci9mcm9tVThhLmpzP2NmYjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdThhVG9VOGEgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG5jb25zdCBTRUNfTEVOID0gNjQ7XG5jb25zdCBQVUJfTEVOID0gMzI7XG5jb25zdCBUT1RfTEVOID0gU0VDX0xFTiArIFBVQl9MRU47XG5leHBvcnQgZnVuY3Rpb24gc3IyNTUxOVBhaXJGcm9tVThhKGZ1bGwpIHtcbiAgICBjb25zdCBmdWxsVThhID0gdThhVG9VOGEoZnVsbCk7XG4gICAgaWYgKGZ1bGxVOGEubGVuZ3RoICE9PSBUT1RfTEVOKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgRXhwZWN0ZWQga2V5cGFpciB3aXRoICR7VE9UX0xFTn0gYnl0ZXMsIGZvdW5kICR7ZnVsbFU4YS5sZW5ndGh9YCk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHB1YmxpY0tleTogZnVsbFU4YS5zbGljZShTRUNfTEVOLCBUT1RfTEVOKSxcbiAgICAgICAgc2VjcmV0S2V5OiBmdWxsVThhLnNsaWNlKDAsIFNFQ19MRU4pXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6WyJ1OGFUb1U4YSIsIlNFQ19MRU4iLCJQVUJfTEVOIiwiVE9UX0xFTiIsInNyMjU1MTlQYWlyRnJvbVU4YSIsImZ1bGwiLCJmdWxsVThhIiwibGVuZ3RoIiwiRXJyb3IiLCJwdWJsaWNLZXkiLCJzbGljZSIsInNlY3JldEtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/pair/fromU8a.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/pair/toU8a.js":
/*!******************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/sr25519/pair/toU8a.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sr25519KeypairToU8a: function() { return /* binding */ sr25519KeypairToU8a; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/concat.js\");\n\nfunction sr25519KeypairToU8a(param) {\n    let { publicKey, secretKey } = param;\n    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aConcat)(secretKey, publicKey).slice();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc3IyNTUxOS9wYWlyL3RvVThhLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTJDO0FBQ3BDLFNBQVNDLG9CQUFvQixLQUF3QjtRQUF4QixFQUFFQyxTQUFTLEVBQUVDLFNBQVMsRUFBRSxHQUF4QjtJQUNoQyxPQUFPSCx5REFBU0EsQ0FBQ0csV0FBV0QsV0FBV0UsS0FBSztBQUNoRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL3NyMjU1MTkvcGFpci90b1U4YS5qcz9kOTcwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHU4YUNvbmNhdCB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbmV4cG9ydCBmdW5jdGlvbiBzcjI1NTE5S2V5cGFpclRvVThhKHsgcHVibGljS2V5LCBzZWNyZXRLZXkgfSkge1xuICAgIHJldHVybiB1OGFDb25jYXQoc2VjcmV0S2V5LCBwdWJsaWNLZXkpLnNsaWNlKCk7XG59XG4iXSwibmFtZXMiOlsidThhQ29uY2F0Iiwic3IyNTUxOUtleXBhaXJUb1U4YSIsInB1YmxpY0tleSIsInNlY3JldEtleSIsInNsaWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/pair/toU8a.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/sign.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/sr25519/sign.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sr25519Sign: function() { return /* binding */ sr25519Sign; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n\n\n/**\n * @name sr25519Sign\n * @description Returns message signature of `message`, using the supplied pair\n */ function sr25519Sign(message, param) {\n    let { publicKey, secretKey } = param;\n    if ((publicKey === null || publicKey === void 0 ? void 0 : publicKey.length) !== 32) {\n        throw new Error(\"Expected a valid publicKey, 32-bytes\");\n    } else if ((secretKey === null || secretKey === void 0 ? void 0 : secretKey.length) !== 64) {\n        throw new Error(\"Expected a valid secretKey, 64-bytes\");\n    }\n    return (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_0__.sr25519Sign)(publicKey, secretKey, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToU8a)(message));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc3IyNTUxOS9zaWduLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwQztBQUNzQjtBQUNoRTs7O0NBR0MsR0FDTSxTQUFTQyxZQUFZRSxPQUFPLEVBQUUsS0FBd0I7UUFBeEIsRUFBRUMsU0FBUyxFQUFFQyxTQUFTLEVBQUUsR0FBeEI7SUFDakMsSUFBSUQsQ0FBQUEsc0JBQUFBLGdDQUFBQSxVQUFXRSxNQUFNLE1BQUssSUFBSTtRQUMxQixNQUFNLElBQUlDLE1BQU07SUFDcEIsT0FDSyxJQUFJRixDQUFBQSxzQkFBQUEsZ0NBQUFBLFVBQVdDLE1BQU0sTUFBSyxJQUFJO1FBQy9CLE1BQU0sSUFBSUMsTUFBTTtJQUNwQjtJQUNBLE9BQU9MLGtFQUFRQSxDQUFDRSxXQUFXQyxXQUFXTCx3REFBUUEsQ0FBQ0c7QUFDbkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9zcjI1NTE5L3NpZ24uanM/ZDA2MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1OGFUb1U4YSB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbmltcG9ydCB7IHNyMjU1MTlTaWduIGFzIHdhc21TaWduIH0gZnJvbSAnQHBvbGthZG90L3dhc20tY3J5cHRvJztcbi8qKlxuICogQG5hbWUgc3IyNTUxOVNpZ25cbiAqIEBkZXNjcmlwdGlvbiBSZXR1cm5zIG1lc3NhZ2Ugc2lnbmF0dXJlIG9mIGBtZXNzYWdlYCwgdXNpbmcgdGhlIHN1cHBsaWVkIHBhaXJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNyMjU1MTlTaWduKG1lc3NhZ2UsIHsgcHVibGljS2V5LCBzZWNyZXRLZXkgfSkge1xuICAgIGlmIChwdWJsaWNLZXk/Lmxlbmd0aCAhPT0gMzIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCBhIHZhbGlkIHB1YmxpY0tleSwgMzItYnl0ZXMnKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoc2VjcmV0S2V5Py5sZW5ndGggIT09IDY0KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgYSB2YWxpZCBzZWNyZXRLZXksIDY0LWJ5dGVzJyk7XG4gICAgfVxuICAgIHJldHVybiB3YXNtU2lnbihwdWJsaWNLZXksIHNlY3JldEtleSwgdThhVG9VOGEobWVzc2FnZSkpO1xufVxuIl0sIm5hbWVzIjpbInU4YVRvVThhIiwic3IyNTUxOVNpZ24iLCJ3YXNtU2lnbiIsIm1lc3NhZ2UiLCJwdWJsaWNLZXkiLCJzZWNyZXRLZXkiLCJsZW5ndGgiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/sign.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/verify.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/sr25519/verify.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sr25519Verify: function() { return /* binding */ sr25519Verify; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n\n\n/**\n * @name sr25519Verify\n * @description Verifies the signature of `message`, using the supplied pair\n */ function sr25519Verify(message, signature, publicKey) {\n    const publicKeyU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(publicKey);\n    const signatureU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(signature);\n    if (publicKeyU8a.length !== 32) {\n        throw new Error(\"Invalid publicKey, received \".concat(publicKeyU8a.length, \" bytes, expected 32\"));\n    } else if (signatureU8a.length !== 64) {\n        throw new Error(\"Invalid signature, received \".concat(signatureU8a.length, \" bytes, expected 64\"));\n    }\n    return (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.sr25519Verify)(signatureU8a, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(message), publicKeyU8a);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc3IyNTUxOS92ZXJpZnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBDO0FBQzBCO0FBQ3BFOzs7Q0FHQyxHQUNNLFNBQVNDLGNBQWNFLE9BQU8sRUFBRUMsU0FBUyxFQUFFQyxTQUFTO0lBQ3ZELE1BQU1DLGVBQWVOLHdEQUFRQSxDQUFDSztJQUM5QixNQUFNRSxlQUFlUCx3REFBUUEsQ0FBQ0k7SUFDOUIsSUFBSUUsYUFBYUUsTUFBTSxLQUFLLElBQUk7UUFDNUIsTUFBTSxJQUFJQyxNQUFNLCtCQUFtRCxPQUFwQkgsYUFBYUUsTUFBTSxFQUFDO0lBQ3ZFLE9BQ0ssSUFBSUQsYUFBYUMsTUFBTSxLQUFLLElBQUk7UUFDakMsTUFBTSxJQUFJQyxNQUFNLCtCQUFtRCxPQUFwQkYsYUFBYUMsTUFBTSxFQUFDO0lBQ3ZFO0lBQ0EsT0FBT04sb0VBQVVBLENBQUNLLGNBQWNQLHdEQUFRQSxDQUFDRyxVQUFVRztBQUN2RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL3NyMjU1MTkvdmVyaWZ5LmpzP2M1MzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdThhVG9VOGEgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG5pbXBvcnQgeyBzcjI1NTE5VmVyaWZ5IGFzIHdhc21WZXJpZnkgfSBmcm9tICdAcG9sa2Fkb3Qvd2FzbS1jcnlwdG8nO1xuLyoqXG4gKiBAbmFtZSBzcjI1NTE5VmVyaWZ5XG4gKiBAZGVzY3JpcHRpb24gVmVyaWZpZXMgdGhlIHNpZ25hdHVyZSBvZiBgbWVzc2FnZWAsIHVzaW5nIHRoZSBzdXBwbGllZCBwYWlyXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzcjI1NTE5VmVyaWZ5KG1lc3NhZ2UsIHNpZ25hdHVyZSwgcHVibGljS2V5KSB7XG4gICAgY29uc3QgcHVibGljS2V5VThhID0gdThhVG9VOGEocHVibGljS2V5KTtcbiAgICBjb25zdCBzaWduYXR1cmVVOGEgPSB1OGFUb1U4YShzaWduYXR1cmUpO1xuICAgIGlmIChwdWJsaWNLZXlVOGEubGVuZ3RoICE9PSAzMikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgcHVibGljS2V5LCByZWNlaXZlZCAke3B1YmxpY0tleVU4YS5sZW5ndGh9IGJ5dGVzLCBleHBlY3RlZCAzMmApO1xuICAgIH1cbiAgICBlbHNlIGlmIChzaWduYXR1cmVVOGEubGVuZ3RoICE9PSA2NCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgc2lnbmF0dXJlLCByZWNlaXZlZCAke3NpZ25hdHVyZVU4YS5sZW5ndGh9IGJ5dGVzLCBleHBlY3RlZCA2NGApO1xuICAgIH1cbiAgICByZXR1cm4gd2FzbVZlcmlmeShzaWduYXR1cmVVOGEsIHU4YVRvVThhKG1lc3NhZ2UpLCBwdWJsaWNLZXlVOGEpO1xufVxuIl0sIm5hbWVzIjpbInU4YVRvVThhIiwic3IyNTUxOVZlcmlmeSIsIndhc21WZXJpZnkiLCJtZXNzYWdlIiwic2lnbmF0dXJlIiwicHVibGljS2V5IiwicHVibGljS2V5VThhIiwic2lnbmF0dXJlVThhIiwibGVuZ3RoIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/verify.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/vrfSign.js":
/*!***************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/sr25519/vrfSign.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sr25519VrfSign: function() { return /* binding */ sr25519VrfSign; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n\n\nconst EMPTY_U8A = new Uint8Array();\n/**\n * @name sr25519VrfSign\n * @description Sign with sr25519 vrf signing (deterministic)\n */ function sr25519VrfSign(message, param) {\n    let { secretKey } = param, context = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : EMPTY_U8A, extra = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : EMPTY_U8A;\n    if ((secretKey === null || secretKey === void 0 ? void 0 : secretKey.length) !== 64) {\n        throw new Error(\"Invalid secretKey, expected 64-bytes\");\n    }\n    return (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_0__.vrfSign)(secretKey, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToU8a)(context), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToU8a)(message), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToU8a)(extra));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc3IyNTUxOS92cmZTaWduLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwQztBQUNNO0FBQ2hELE1BQU1FLFlBQVksSUFBSUM7QUFDdEI7OztDQUdDLEdBQ00sU0FBU0MsZUFBZUMsT0FBTyxFQUFFLEtBQWE7UUFBYixFQUFFQyxTQUFTLEVBQUUsR0FBYixPQUFlQyxVQUFBQSxpRUFBVUwsV0FBV00sUUFBQUEsaUVBQVFOO0lBQ2hGLElBQUlJLENBQUFBLHNCQUFBQSxnQ0FBQUEsVUFBV0csTUFBTSxNQUFLLElBQUk7UUFDMUIsTUFBTSxJQUFJQyxNQUFNO0lBQ3BCO0lBQ0EsT0FBT1QsOERBQU9BLENBQUNLLFdBQVdOLHdEQUFRQSxDQUFDTyxVQUFVUCx3REFBUUEsQ0FBQ0ssVUFBVUwsd0RBQVFBLENBQUNRO0FBQzdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc3IyNTUxOS92cmZTaWduLmpzP2U2YzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdThhVG9VOGEgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG5pbXBvcnQgeyB2cmZTaWduIH0gZnJvbSAnQHBvbGthZG90L3dhc20tY3J5cHRvJztcbmNvbnN0IEVNUFRZX1U4QSA9IG5ldyBVaW50OEFycmF5KCk7XG4vKipcbiAqIEBuYW1lIHNyMjU1MTlWcmZTaWduXG4gKiBAZGVzY3JpcHRpb24gU2lnbiB3aXRoIHNyMjU1MTkgdnJmIHNpZ25pbmcgKGRldGVybWluaXN0aWMpXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzcjI1NTE5VnJmU2lnbihtZXNzYWdlLCB7IHNlY3JldEtleSB9LCBjb250ZXh0ID0gRU1QVFlfVThBLCBleHRyYSA9IEVNUFRZX1U4QSkge1xuICAgIGlmIChzZWNyZXRLZXk/Lmxlbmd0aCAhPT0gNjQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHNlY3JldEtleSwgZXhwZWN0ZWQgNjQtYnl0ZXMnKTtcbiAgICB9XG4gICAgcmV0dXJuIHZyZlNpZ24oc2VjcmV0S2V5LCB1OGFUb1U4YShjb250ZXh0KSwgdThhVG9VOGEobWVzc2FnZSksIHU4YVRvVThhKGV4dHJhKSk7XG59XG4iXSwibmFtZXMiOlsidThhVG9VOGEiLCJ2cmZTaWduIiwiRU1QVFlfVThBIiwiVWludDhBcnJheSIsInNyMjU1MTlWcmZTaWduIiwibWVzc2FnZSIsInNlY3JldEtleSIsImNvbnRleHQiLCJleHRyYSIsImxlbmd0aCIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/vrfSign.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/vrfVerify.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/sr25519/vrfVerify.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sr25519VrfVerify: function() { return /* binding */ sr25519VrfVerify; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n\n\nconst EMPTY_U8A = new Uint8Array();\n/**\n * @name sr25519VrfVerify\n * @description Verify with sr25519 vrf verification\n */ function sr25519VrfVerify(message, signOutput, publicKey) {\n    let context = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : EMPTY_U8A, extra = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : EMPTY_U8A;\n    const publicKeyU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(publicKey);\n    const proofU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(signOutput);\n    if (publicKeyU8a.length !== 32) {\n        throw new Error(\"Invalid publicKey, expected 32-bytes\");\n    } else if (proofU8a.length !== 96) {\n        throw new Error(\"Invalid vrfSign output, expected 96 bytes\");\n    }\n    return (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.vrfVerify)(publicKeyU8a, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(context), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(message), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(extra), proofU8a);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vc3IyNTUxOS92cmZWZXJpZnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBDO0FBQ1E7QUFDbEQsTUFBTUUsWUFBWSxJQUFJQztBQUN0Qjs7O0NBR0MsR0FDTSxTQUFTQyxpQkFBaUJDLE9BQU8sRUFBRUMsVUFBVSxFQUFFQyxTQUFTO1FBQUVDLFVBQUFBLGlFQUFVTixXQUFXTyxRQUFBQSxpRUFBUVA7SUFDMUYsTUFBTVEsZUFBZVYsd0RBQVFBLENBQUNPO0lBQzlCLE1BQU1JLFdBQVdYLHdEQUFRQSxDQUFDTTtJQUMxQixJQUFJSSxhQUFhRSxNQUFNLEtBQUssSUFBSTtRQUM1QixNQUFNLElBQUlDLE1BQU07SUFDcEIsT0FDSyxJQUFJRixTQUFTQyxNQUFNLEtBQUssSUFBSTtRQUM3QixNQUFNLElBQUlDLE1BQU07SUFDcEI7SUFDQSxPQUFPWixnRUFBU0EsQ0FBQ1MsY0FBY1Ysd0RBQVFBLENBQUNRLFVBQVVSLHdEQUFRQSxDQUFDSyxVQUFVTCx3REFBUUEsQ0FBQ1MsUUFBUUU7QUFDMUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9zcjI1NTE5L3ZyZlZlcmlmeS5qcz9lZTYxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHU4YVRvVThhIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgdnJmVmVyaWZ5IH0gZnJvbSAnQHBvbGthZG90L3dhc20tY3J5cHRvJztcbmNvbnN0IEVNUFRZX1U4QSA9IG5ldyBVaW50OEFycmF5KCk7XG4vKipcbiAqIEBuYW1lIHNyMjU1MTlWcmZWZXJpZnlcbiAqIEBkZXNjcmlwdGlvbiBWZXJpZnkgd2l0aCBzcjI1NTE5IHZyZiB2ZXJpZmljYXRpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNyMjU1MTlWcmZWZXJpZnkobWVzc2FnZSwgc2lnbk91dHB1dCwgcHVibGljS2V5LCBjb250ZXh0ID0gRU1QVFlfVThBLCBleHRyYSA9IEVNUFRZX1U4QSkge1xuICAgIGNvbnN0IHB1YmxpY0tleVU4YSA9IHU4YVRvVThhKHB1YmxpY0tleSk7XG4gICAgY29uc3QgcHJvb2ZVOGEgPSB1OGFUb1U4YShzaWduT3V0cHV0KTtcbiAgICBpZiAocHVibGljS2V5VThhLmxlbmd0aCAhPT0gMzIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHB1YmxpY0tleSwgZXhwZWN0ZWQgMzItYnl0ZXMnKTtcbiAgICB9XG4gICAgZWxzZSBpZiAocHJvb2ZVOGEubGVuZ3RoICE9PSA5Nikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgdnJmU2lnbiBvdXRwdXQsIGV4cGVjdGVkIDk2IGJ5dGVzJyk7XG4gICAgfVxuICAgIHJldHVybiB2cmZWZXJpZnkocHVibGljS2V5VThhLCB1OGFUb1U4YShjb250ZXh0KSwgdThhVG9VOGEobWVzc2FnZSksIHU4YVRvVThhKGV4dHJhKSwgcHJvb2ZVOGEpO1xufVxuIl0sIm5hbWVzIjpbInU4YVRvVThhIiwidnJmVmVyaWZ5IiwiRU1QVFlfVThBIiwiVWludDhBcnJheSIsInNyMjU1MTlWcmZWZXJpZnkiLCJtZXNzYWdlIiwic2lnbk91dHB1dCIsInB1YmxpY0tleSIsImNvbnRleHQiLCJleHRyYSIsInB1YmxpY0tleVU4YSIsInByb29mVThhIiwibGVuZ3RoIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/sr25519/vrfVerify.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/xxhash/asU8a.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/xxhash/asU8a.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   xxhashAsHex: function() { return /* binding */ xxhashAsHex; },\n/* harmony export */   xxhashAsU8a: function() { return /* binding */ xxhashAsU8a; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/has.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/helpers.js\");\n/* harmony import */ var _xxhash64_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./xxhash64.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/xxhash/xxhash64.js\");\n\n\n\n\n/**\n * @name xxhashAsU8a\n * @summary Creates a xxhash64 u8a from the input.\n * @description\n * From either a `string`, `Uint8Array` or a `Buffer` input, create the xxhash64 and return the result as a `Uint8Array` with the specified `bitLength`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { xxhashAsU8a } from '@polkadot/util-crypto';\n *\n * xxhashAsU8a('abc'); // => 0x44bc2cf5ad770999\n * ```\n */ function xxhashAsU8a(data) {\n    let bitLength = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 64, onlyJs = arguments.length > 2 ? arguments[2] : void 0;\n    const rounds = Math.ceil(bitLength / 64);\n    const u8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(data);\n    if (!_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.isReady)()) {\n        return (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.twox)(u8a, rounds);\n    }\n    const result = new Uint8Array(rounds * 8);\n    for(let seed = 0; seed < rounds; seed++){\n        result.set((0,_xxhash64_js__WEBPACK_IMPORTED_MODULE_3__.xxhash64)(u8a, seed).reverse(), seed * 8);\n    }\n    return result;\n}\n/**\n * @name xxhashAsHex\n * @description Creates a xxhash64 hex from the input.\n */ const xxhashAsHex = /*#__PURE__*/ (0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.createAsHex)(xxhashAsU8a);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8veHhoYXNoL2FzVThhLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBcUQ7QUFDQztBQUNWO0FBQ0g7QUFDekM7Ozs7Ozs7Ozs7Ozs7Q0FhQyxHQUNNLFNBQVNNLFlBQVlDLElBQUk7UUFBRUMsWUFBQUEsaUVBQVksSUFBSUM7SUFDOUMsTUFBTUMsU0FBU0MsS0FBS0MsSUFBSSxDQUFDSixZQUFZO0lBQ3JDLE1BQU1LLE1BQU1aLHdEQUFRQSxDQUFDTTtJQUNyQixJQUFJLENBQUNQLHFEQUFTQSxJQUFLLENBQUNTLFVBQVVQLDhEQUFPQSxJQUFLO1FBQ3RDLE9BQU9DLDJEQUFJQSxDQUFDVSxLQUFLSDtJQUNyQjtJQUNBLE1BQU1JLFNBQVMsSUFBSUMsV0FBV0wsU0FBUztJQUN2QyxJQUFLLElBQUlNLE9BQU8sR0FBR0EsT0FBT04sUUFBUU0sT0FBUTtRQUN0Q0YsT0FBT0csR0FBRyxDQUFDWixzREFBUUEsQ0FBQ1EsS0FBS0csTUFBTUUsT0FBTyxJQUFJRixPQUFPO0lBQ3JEO0lBQ0EsT0FBT0Y7QUFDWDtBQUNBOzs7Q0FHQyxHQUNNLE1BQU1LLGNBQWMsV0FBVyxHQUFHZix3REFBV0EsQ0FBQ0UsYUFBYSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL3h4aGFzaC9hc1U4YS5qcz8zNDBlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGhhc0JpZ0ludCwgdThhVG9VOGEgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG5pbXBvcnQgeyBpc1JlYWR5LCB0d294IH0gZnJvbSAnQHBvbGthZG90L3dhc20tY3J5cHRvJztcbmltcG9ydCB7IGNyZWF0ZUFzSGV4IH0gZnJvbSAnLi4vaGVscGVycy5qcyc7XG5pbXBvcnQgeyB4eGhhc2g2NCB9IGZyb20gJy4veHhoYXNoNjQuanMnO1xuLyoqXG4gKiBAbmFtZSB4eGhhc2hBc1U4YVxuICogQHN1bW1hcnkgQ3JlYXRlcyBhIHh4aGFzaDY0IHU4YSBmcm9tIHRoZSBpbnB1dC5cbiAqIEBkZXNjcmlwdGlvblxuICogRnJvbSBlaXRoZXIgYSBgc3RyaW5nYCwgYFVpbnQ4QXJyYXlgIG9yIGEgYEJ1ZmZlcmAgaW5wdXQsIGNyZWF0ZSB0aGUgeHhoYXNoNjQgYW5kIHJldHVybiB0aGUgcmVzdWx0IGFzIGEgYFVpbnQ4QXJyYXlgIHdpdGggdGhlIHNwZWNpZmllZCBgYml0TGVuZ3RoYC5cbiAqIEBleGFtcGxlXG4gKiA8QlI+XG4gKlxuICogYGBgamF2YXNjcmlwdFxuICogaW1wb3J0IHsgeHhoYXNoQXNVOGEgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbC1jcnlwdG8nO1xuICpcbiAqIHh4aGFzaEFzVThhKCdhYmMnKTsgLy8gPT4gMHg0NGJjMmNmNWFkNzcwOTk5XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHh4aGFzaEFzVThhKGRhdGEsIGJpdExlbmd0aCA9IDY0LCBvbmx5SnMpIHtcbiAgICBjb25zdCByb3VuZHMgPSBNYXRoLmNlaWwoYml0TGVuZ3RoIC8gNjQpO1xuICAgIGNvbnN0IHU4YSA9IHU4YVRvVThhKGRhdGEpO1xuICAgIGlmICghaGFzQmlnSW50IHx8ICghb25seUpzICYmIGlzUmVhZHkoKSkpIHtcbiAgICAgICAgcmV0dXJuIHR3b3godThhLCByb3VuZHMpO1xuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSBuZXcgVWludDhBcnJheShyb3VuZHMgKiA4KTtcbiAgICBmb3IgKGxldCBzZWVkID0gMDsgc2VlZCA8IHJvdW5kczsgc2VlZCsrKSB7XG4gICAgICAgIHJlc3VsdC5zZXQoeHhoYXNoNjQodThhLCBzZWVkKS5yZXZlcnNlKCksIHNlZWQgKiA4KTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbi8qKlxuICogQG5hbWUgeHhoYXNoQXNIZXhcbiAqIEBkZXNjcmlwdGlvbiBDcmVhdGVzIGEgeHhoYXNoNjQgaGV4IGZyb20gdGhlIGlucHV0LlxuICovXG5leHBvcnQgY29uc3QgeHhoYXNoQXNIZXggPSAvKiNfX1BVUkVfXyovIGNyZWF0ZUFzSGV4KHh4aGFzaEFzVThhKTtcbiJdLCJuYW1lcyI6WyJoYXNCaWdJbnQiLCJ1OGFUb1U4YSIsImlzUmVhZHkiLCJ0d294IiwiY3JlYXRlQXNIZXgiLCJ4eGhhc2g2NCIsInh4aGFzaEFzVThhIiwiZGF0YSIsImJpdExlbmd0aCIsIm9ubHlKcyIsInJvdW5kcyIsIk1hdGgiLCJjZWlsIiwidThhIiwicmVzdWx0IiwiVWludDhBcnJheSIsInNlZWQiLCJzZXQiLCJyZXZlcnNlIiwieHhoYXNoQXNIZXgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/xxhash/asU8a.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/xxhash/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/xxhash/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   xxhashAsHex: function() { return /* reexport safe */ _asU8a_js__WEBPACK_IMPORTED_MODULE_0__.xxhashAsHex; },\n/* harmony export */   xxhashAsU8a: function() { return /* reexport safe */ _asU8a_js__WEBPACK_IMPORTED_MODULE_0__.xxhashAsU8a; }\n/* harmony export */ });\n/* harmony import */ var _asU8a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./asU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/xxhash/asU8a.js\");\n/**\n * @summary Create xxhash64 values with specified bitlengths\n */ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8veHhoYXNoL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztDQUVDLEdBQ3FEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8veHhoYXNoL2luZGV4LmpzPzJiNDkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAc3VtbWFyeSBDcmVhdGUgeHhoYXNoNjQgdmFsdWVzIHdpdGggc3BlY2lmaWVkIGJpdGxlbmd0aHNcbiAqL1xuZXhwb3J0IHsgeHhoYXNoQXNIZXgsIHh4aGFzaEFzVThhIH0gZnJvbSAnLi9hc1U4YS5qcyc7XG4iXSwibmFtZXMiOlsieHhoYXNoQXNIZXgiLCJ4eGhhc2hBc1U4YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/xxhash/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util-crypto/xxhash/xxhash64.js":
/*!***************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/xxhash/xxhash64.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   xxhash64: function() { return /* binding */ xxhash64; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/bi/consts.js\");\n/* harmony import */ var _polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/x-bigint */ \"(app-pages-browser)/./node_modules/@polkadot/util-crypto/node_modules/@polkadot/x-bigint/index.js\");\n\n\nconst P64_1 = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(\"11400714785074694791\");\nconst P64_2 = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(\"14029467366897019727\");\nconst P64_3 = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(\"1609587929392839161\");\nconst P64_4 = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(\"9650029242287828579\");\nconst P64_5 = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(\"2870177450012600261\");\nconst U64 = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(\"0xffffffffffffffff\");\nconst _7n = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(7);\nconst _11n = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(11);\nconst _12n = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(12);\nconst _16n = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(16);\nconst _18n = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(18);\nconst _23n = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(23);\nconst _27n = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(27);\nconst _29n = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(29);\nconst _31n = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(31);\nconst _32n = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(32);\nconst _33n = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(33);\nconst _64n = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(64);\nconst _256n = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(256);\nfunction rotl(a, b) {\n    const c = a & U64;\n    return (c << b | c >> _64n - b) & U64;\n}\nfunction fromU8a(u8a, p, count) {\n    const bigints = new Array(count);\n    let offset = 0;\n    for(let i = 0; i < count; i++, offset += 2){\n        bigints[i] = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(u8a[p + offset] | u8a[p + 1 + offset] << 8);\n    }\n    let result = _polkadot_util__WEBPACK_IMPORTED_MODULE_1__._0n;\n    for(let i = count - 1; i >= 0; i--){\n        result = (result << _16n) + bigints[i];\n    }\n    return result;\n}\nfunction init(seed, input) {\n    const state = {\n        seed,\n        u8a: new Uint8Array(32),\n        u8asize: 0,\n        v1: seed + P64_1 + P64_2,\n        v2: seed + P64_2,\n        v3: seed,\n        v4: seed - P64_1\n    };\n    if (input.length < 32) {\n        state.u8a.set(input);\n        state.u8asize = input.length;\n        return state;\n    }\n    const limit = input.length - 32;\n    let p = 0;\n    if (limit >= 0) {\n        const adjustV = (v)=>P64_1 * rotl(v + P64_2 * fromU8a(input, p, 4), _31n);\n        do {\n            state.v1 = adjustV(state.v1);\n            p += 8;\n            state.v2 = adjustV(state.v2);\n            p += 8;\n            state.v3 = adjustV(state.v3);\n            p += 8;\n            state.v4 = adjustV(state.v4);\n            p += 8;\n        }while (p <= limit);\n    }\n    if (p < input.length) {\n        state.u8a.set(input.subarray(p, input.length));\n        state.u8asize = input.length - p;\n    }\n    return state;\n}\nfunction xxhash64(input, initSeed) {\n    const { seed, u8a, u8asize, v1, v2, v3, v4 } = init((0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(initSeed), input);\n    let p = 0;\n    let h64 = U64 & (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(input.length) + (input.length >= 32 ? ((((rotl(v1, _polkadot_util__WEBPACK_IMPORTED_MODULE_1__._1n) + rotl(v2, _7n) + rotl(v3, _12n) + rotl(v4, _18n) ^ P64_1 * rotl(v1 * P64_2, _31n)) * P64_1 + P64_4 ^ P64_1 * rotl(v2 * P64_2, _31n)) * P64_1 + P64_4 ^ P64_1 * rotl(v3 * P64_2, _31n)) * P64_1 + P64_4 ^ P64_1 * rotl(v4 * P64_2, _31n)) * P64_1 + P64_4 : seed + P64_5);\n    while(p <= u8asize - 8){\n        h64 = U64 & P64_4 + P64_1 * rotl(h64 ^ P64_1 * rotl(P64_2 * fromU8a(u8a, p, 4), _31n), _27n);\n        p += 8;\n    }\n    if (p + 4 <= u8asize) {\n        h64 = U64 & P64_3 + P64_2 * rotl(h64 ^ P64_1 * fromU8a(u8a, p, 2), _23n);\n        p += 4;\n    }\n    while(p < u8asize){\n        h64 = U64 & P64_1 * rotl(h64 ^ P64_5 * (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(u8a[p++]), _11n);\n    }\n    h64 = U64 & P64_2 * (h64 ^ h64 >> _33n);\n    h64 = U64 & P64_3 * (h64 ^ h64 >> _29n);\n    h64 = U64 & (h64 ^ h64 >> _32n);\n    const result = new Uint8Array(8);\n    for(let i = 7; i >= 0; i--){\n        result[i] = Number(h64 % _256n);\n        h64 = h64 / _256n;\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util-crypto/xxhash/xxhash64.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/bi/consts.js":
/*!**************************************************!*\
  !*** ./node_modules/@polkadot/util/bi/consts.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _0n: function() { return /* binding */ _0n; },\n/* harmony export */   _1000n: function() { return /* binding */ _1000n; },\n/* harmony export */   _100n: function() { return /* binding */ _100n; },\n/* harmony export */   _10n: function() { return /* binding */ _10n; },\n/* harmony export */   _1Bn: function() { return /* binding */ _1Bn; },\n/* harmony export */   _1Mn: function() { return /* binding */ _1Mn; },\n/* harmony export */   _1Qn: function() { return /* binding */ _1Qn; },\n/* harmony export */   _1n: function() { return /* binding */ _1n; },\n/* harmony export */   _2n: function() { return /* binding */ _2n; },\n/* harmony export */   _2pow53n: function() { return /* binding */ _2pow53n; },\n/* harmony export */   _3n: function() { return /* binding */ _3n; },\n/* harmony export */   _4n: function() { return /* binding */ _4n; },\n/* harmony export */   _5n: function() { return /* binding */ _5n; },\n/* harmony export */   _6n: function() { return /* binding */ _6n; },\n/* harmony export */   _7n: function() { return /* binding */ _7n; },\n/* harmony export */   _8n: function() { return /* binding */ _8n; },\n/* harmony export */   _9n: function() { return /* binding */ _9n; },\n/* harmony export */   _sqrt2pow53n: function() { return /* binding */ _sqrt2pow53n; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/x-bigint */ \"(app-pages-browser)/./node_modules/@polkadot/util/node_modules/@polkadot/x-bigint/index.js\");\n\n/**\n * @name _0n\n * @summary BigInt constant for 0.\n */ const _0n = /*#__PURE__*/ (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(0);\n/**\n * @name _1n\n * @summary BigInt constant for 1.\n */ const _1n = /*#__PURE__*/ (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(1);\n/**\n * @name _2n\n * @summary BigInt constant for 2.\n */ const _2n = /*#__PURE__*/ (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(2);\n/**\n * @name _3n\n * @summary BigInt constant for 3.\n */ const _3n = /*#__PURE__*/ (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(3);\n/**\n * @name _4n\n * @summary BigInt constant for 4.\n */ const _4n = /*#__PURE__*/ (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(4);\n/**\n * @name _5n\n * @summary BigInt constant for 5.\n */ const _5n = /*#__PURE__*/ (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(5);\n/**\n * @name _6n\n * @summary BigInt constant for 6.\n */ const _6n = /*#__PURE__*/ (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(6);\n/**\n * @name _7n\n * @summary BigInt constant for 7.\n */ const _7n = /*#__PURE__*/ (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(7);\n/**\n * @name _8n\n * @summary BigInt constant for 8.\n */ const _8n = /*#__PURE__*/ (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(8);\n/**\n * @name _9n\n * @summary BigInt constant for 9.\n */ const _9n = /*#__PURE__*/ (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(9);\n/**\n * @name _10n\n * @summary BigInt constant for 10.\n */ const _10n = /*#__PURE__*/ (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(10);\n/**\n * @name _100n\n * @summary BigInt constant for 100.\n */ const _100n = /*#__PURE__*/ (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(100);\n/**\n * @name _1000n\n * @summary BigInt constant for 1000.\n */ const _1000n = /*#__PURE__*/ (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(1000);\n/**\n * @name _1Mn\n * @summary BigInt constant for 1,000,000 (million).\n */ const _1Mn = /*#__PURE__*/ (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(1000000);\n/**\n* @name _1Bn\n* @summary BigInt constant for 1,000,000,000 (billion).\n*/ const _1Bn = /*#__PURE__*/ (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(1000000000);\n/**\n* @name _1Qn\n* @summary BigInt constant for 1,000,000,000,000,000,000 (quitillion).\n*/ const _1Qn = _1Bn * _1Bn;\n/**\n* @name _2pow53n\n* @summary BigInt constant for MAX_SAFE_INTEGER\n*/ const _2pow53n = /*#__PURE__*/ (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(Number.MAX_SAFE_INTEGER);\n/**\n * @name _sqrt2pow53n\n * @summary BigInt constant for Math.sqrt(MAX_SAFE_INTEGER)\n */ const _sqrt2pow53n = /*#__PURE__*/ (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(94906265);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9iaS9jb25zdHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE0QztBQUM1Qzs7O0NBR0MsR0FDTSxNQUFNQyxNQUFNLFdBQVcsR0FBR0QsMERBQU1BLENBQUMsR0FBRztBQUMzQzs7O0NBR0MsR0FDTSxNQUFNRSxNQUFNLFdBQVcsR0FBR0YsMERBQU1BLENBQUMsR0FBRztBQUMzQzs7O0NBR0MsR0FDTSxNQUFNRyxNQUFNLFdBQVcsR0FBR0gsMERBQU1BLENBQUMsR0FBRztBQUMzQzs7O0NBR0MsR0FDTSxNQUFNSSxNQUFNLFdBQVcsR0FBR0osMERBQU1BLENBQUMsR0FBRztBQUMzQzs7O0NBR0MsR0FDTSxNQUFNSyxNQUFNLFdBQVcsR0FBR0wsMERBQU1BLENBQUMsR0FBRztBQUMzQzs7O0NBR0MsR0FDTSxNQUFNTSxNQUFNLFdBQVcsR0FBR04sMERBQU1BLENBQUMsR0FBRztBQUMzQzs7O0NBR0MsR0FDTSxNQUFNTyxNQUFNLFdBQVcsR0FBR1AsMERBQU1BLENBQUMsR0FBRztBQUMzQzs7O0NBR0MsR0FDTSxNQUFNUSxNQUFNLFdBQVcsR0FBR1IsMERBQU1BLENBQUMsR0FBRztBQUMzQzs7O0NBR0MsR0FDTSxNQUFNUyxNQUFNLFdBQVcsR0FBR1QsMERBQU1BLENBQUMsR0FBRztBQUMzQzs7O0NBR0MsR0FDTSxNQUFNVSxNQUFNLFdBQVcsR0FBR1YsMERBQU1BLENBQUMsR0FBRztBQUMzQzs7O0NBR0MsR0FDTSxNQUFNVyxPQUFPLFdBQVcsR0FBR1gsMERBQU1BLENBQUMsSUFBSTtBQUM3Qzs7O0NBR0MsR0FDTSxNQUFNWSxRQUFRLFdBQVcsR0FBR1osMERBQU1BLENBQUMsS0FBSztBQUMvQzs7O0NBR0MsR0FDTSxNQUFNYSxTQUFTLFdBQVcsR0FBR2IsMERBQU1BLENBQUMsTUFBTztBQUNsRDs7O0NBR0MsR0FDTSxNQUFNYyxPQUFPLFdBQVcsR0FBR2QsMERBQU1BLENBQUMsU0FBVztBQUNwRDs7O0FBR0EsR0FDTyxNQUFNZSxPQUFPLFdBQVcsR0FBR2YsMERBQU1BLENBQUMsWUFBZTtBQUN4RDs7O0FBR0EsR0FDTyxNQUFNZ0IsT0FBT0QsT0FBT0EsS0FBSztBQUNoQzs7O0FBR0EsR0FDTyxNQUFNRSxXQUFXLFdBQVcsR0FBR2pCLDBEQUFNQSxDQUFDa0IsT0FBT0MsZ0JBQWdCLEVBQUU7QUFDdEU7OztDQUdDLEdBQ00sTUFBTUMsZUFBZSxXQUFXLEdBQUdwQiwwREFBTUEsQ0FBQyxVQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9iaS9jb25zdHMuanM/ZDdiNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCaWdJbnQgfSBmcm9tICdAcG9sa2Fkb3QveC1iaWdpbnQnO1xuLyoqXG4gKiBAbmFtZSBfMG5cbiAqIEBzdW1tYXJ5IEJpZ0ludCBjb25zdGFudCBmb3IgMC5cbiAqL1xuZXhwb3J0IGNvbnN0IF8wbiA9IC8qI19fUFVSRV9fKi8gQmlnSW50KDApO1xuLyoqXG4gKiBAbmFtZSBfMW5cbiAqIEBzdW1tYXJ5IEJpZ0ludCBjb25zdGFudCBmb3IgMS5cbiAqL1xuZXhwb3J0IGNvbnN0IF8xbiA9IC8qI19fUFVSRV9fKi8gQmlnSW50KDEpO1xuLyoqXG4gKiBAbmFtZSBfMm5cbiAqIEBzdW1tYXJ5IEJpZ0ludCBjb25zdGFudCBmb3IgMi5cbiAqL1xuZXhwb3J0IGNvbnN0IF8ybiA9IC8qI19fUFVSRV9fKi8gQmlnSW50KDIpO1xuLyoqXG4gKiBAbmFtZSBfM25cbiAqIEBzdW1tYXJ5IEJpZ0ludCBjb25zdGFudCBmb3IgMy5cbiAqL1xuZXhwb3J0IGNvbnN0IF8zbiA9IC8qI19fUFVSRV9fKi8gQmlnSW50KDMpO1xuLyoqXG4gKiBAbmFtZSBfNG5cbiAqIEBzdW1tYXJ5IEJpZ0ludCBjb25zdGFudCBmb3IgNC5cbiAqL1xuZXhwb3J0IGNvbnN0IF80biA9IC8qI19fUFVSRV9fKi8gQmlnSW50KDQpO1xuLyoqXG4gKiBAbmFtZSBfNW5cbiAqIEBzdW1tYXJ5IEJpZ0ludCBjb25zdGFudCBmb3IgNS5cbiAqL1xuZXhwb3J0IGNvbnN0IF81biA9IC8qI19fUFVSRV9fKi8gQmlnSW50KDUpO1xuLyoqXG4gKiBAbmFtZSBfNm5cbiAqIEBzdW1tYXJ5IEJpZ0ludCBjb25zdGFudCBmb3IgNi5cbiAqL1xuZXhwb3J0IGNvbnN0IF82biA9IC8qI19fUFVSRV9fKi8gQmlnSW50KDYpO1xuLyoqXG4gKiBAbmFtZSBfN25cbiAqIEBzdW1tYXJ5IEJpZ0ludCBjb25zdGFudCBmb3IgNy5cbiAqL1xuZXhwb3J0IGNvbnN0IF83biA9IC8qI19fUFVSRV9fKi8gQmlnSW50KDcpO1xuLyoqXG4gKiBAbmFtZSBfOG5cbiAqIEBzdW1tYXJ5IEJpZ0ludCBjb25zdGFudCBmb3IgOC5cbiAqL1xuZXhwb3J0IGNvbnN0IF84biA9IC8qI19fUFVSRV9fKi8gQmlnSW50KDgpO1xuLyoqXG4gKiBAbmFtZSBfOW5cbiAqIEBzdW1tYXJ5IEJpZ0ludCBjb25zdGFudCBmb3IgOS5cbiAqL1xuZXhwb3J0IGNvbnN0IF85biA9IC8qI19fUFVSRV9fKi8gQmlnSW50KDkpO1xuLyoqXG4gKiBAbmFtZSBfMTBuXG4gKiBAc3VtbWFyeSBCaWdJbnQgY29uc3RhbnQgZm9yIDEwLlxuICovXG5leHBvcnQgY29uc3QgXzEwbiA9IC8qI19fUFVSRV9fKi8gQmlnSW50KDEwKTtcbi8qKlxuICogQG5hbWUgXzEwMG5cbiAqIEBzdW1tYXJ5IEJpZ0ludCBjb25zdGFudCBmb3IgMTAwLlxuICovXG5leHBvcnQgY29uc3QgXzEwMG4gPSAvKiNfX1BVUkVfXyovIEJpZ0ludCgxMDApO1xuLyoqXG4gKiBAbmFtZSBfMTAwMG5cbiAqIEBzdW1tYXJ5IEJpZ0ludCBjb25zdGFudCBmb3IgMTAwMC5cbiAqL1xuZXhwb3J0IGNvbnN0IF8xMDAwbiA9IC8qI19fUFVSRV9fKi8gQmlnSW50KDFfMDAwKTtcbi8qKlxuICogQG5hbWUgXzFNblxuICogQHN1bW1hcnkgQmlnSW50IGNvbnN0YW50IGZvciAxLDAwMCwwMDAgKG1pbGxpb24pLlxuICovXG5leHBvcnQgY29uc3QgXzFNbiA9IC8qI19fUFVSRV9fKi8gQmlnSW50KDFfMDAwXzAwMCk7XG4vKipcbiogQG5hbWUgXzFCblxuKiBAc3VtbWFyeSBCaWdJbnQgY29uc3RhbnQgZm9yIDEsMDAwLDAwMCwwMDAgKGJpbGxpb24pLlxuKi9cbmV4cG9ydCBjb25zdCBfMUJuID0gLyojX19QVVJFX18qLyBCaWdJbnQoMV8wMDBfMDAwXzAwMCk7XG4vKipcbiogQG5hbWUgXzFRblxuKiBAc3VtbWFyeSBCaWdJbnQgY29uc3RhbnQgZm9yIDEsMDAwLDAwMCwwMDAsMDAwLDAwMCwwMDAgKHF1aXRpbGxpb24pLlxuKi9cbmV4cG9ydCBjb25zdCBfMVFuID0gXzFCbiAqIF8xQm47XG4vKipcbiogQG5hbWUgXzJwb3c1M25cbiogQHN1bW1hcnkgQmlnSW50IGNvbnN0YW50IGZvciBNQVhfU0FGRV9JTlRFR0VSXG4qL1xuZXhwb3J0IGNvbnN0IF8ycG93NTNuID0gLyojX19QVVJFX18qLyBCaWdJbnQoTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIpO1xuLyoqXG4gKiBAbmFtZSBfc3FydDJwb3c1M25cbiAqIEBzdW1tYXJ5IEJpZ0ludCBjb25zdGFudCBmb3IgTWF0aC5zcXJ0KE1BWF9TQUZFX0lOVEVHRVIpXG4gKi9cbmV4cG9ydCBjb25zdCBfc3FydDJwb3c1M24gPSAvKiNfX1BVUkVfXyovIEJpZ0ludCg5NDkwNjI2NSk7XG4iXSwibmFtZXMiOlsiQmlnSW50IiwiXzBuIiwiXzFuIiwiXzJuIiwiXzNuIiwiXzRuIiwiXzVuIiwiXzZuIiwiXzduIiwiXzhuIiwiXzluIiwiXzEwbiIsIl8xMDBuIiwiXzEwMDBuIiwiXzFNbiIsIl8xQm4iLCJfMVFuIiwiXzJwb3c1M24iLCJOdW1iZXIiLCJNQVhfU0FGRV9JTlRFR0VSIiwiX3NxcnQycG93NTNuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/bi/consts.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/bi/toBigInt.js":
/*!****************************************************!*\
  !*** ./node_modules/@polkadot/util/bi/toBigInt.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   nToBigInt: function() { return /* binding */ nToBigInt; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/x-bigint */ \"(app-pages-browser)/./node_modules/@polkadot/util/node_modules/@polkadot/x-bigint/index.js\");\n/* harmony import */ var _hex_toBigInt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hex/toBigInt.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/hex/toBigInt.js\");\n/* harmony import */ var _is_bn_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../is/bn.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/bn.js\");\n/* harmony import */ var _is_hex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../is/hex.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/hex.js\");\n/* harmony import */ var _is_toBigInt_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../is/toBigInt.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/toBigInt.js\");\n/* harmony import */ var _is_toBn_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../is/toBn.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/toBn.js\");\n\n\n\n\n\n\n/**\n * @name nToBigInt\n * @summary Creates a bigInt value from a BN, bigint, string (base 10 or hex) or number input.\n */ function nToBigInt(value) {\n    return typeof value === \"bigint\" ? value : !value ? (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(0) : (0,_is_hex_js__WEBPACK_IMPORTED_MODULE_1__.isHex)(value) ? (0,_hex_toBigInt_js__WEBPACK_IMPORTED_MODULE_2__.hexToBigInt)(value.toString()) : (0,_is_bn_js__WEBPACK_IMPORTED_MODULE_3__.isBn)(value) ? (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(value.toString()) : (0,_is_toBigInt_js__WEBPACK_IMPORTED_MODULE_4__.isToBigInt)(value) ? value.toBigInt() : (0,_is_toBn_js__WEBPACK_IMPORTED_MODULE_5__.isToBn)(value) ? (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(value.toBn().toString()) : (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(value);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9iaS90b0JpZ0ludC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTRDO0FBQ0s7QUFDZDtBQUNFO0FBQ1U7QUFDUjtBQUN2Qzs7O0NBR0MsR0FDTSxTQUFTTSxVQUFVQyxLQUFLO0lBQzNCLE9BQU8sT0FBT0EsVUFBVSxXQUNsQkEsUUFDQSxDQUFDQSxRQUNHUCwwREFBTUEsQ0FBQyxLQUNQRyxpREFBS0EsQ0FBQ0ksU0FDRk4sNkRBQVdBLENBQUNNLE1BQU1DLFFBQVEsTUFDMUJOLCtDQUFJQSxDQUFDSyxTQUNEUCwwREFBTUEsQ0FBQ08sTUFBTUMsUUFBUSxNQUNyQkosMkRBQVVBLENBQUNHLFNBQ1BBLE1BQU1FLFFBQVEsS0FDZEosbURBQU1BLENBQUNFLFNBQ0hQLDBEQUFNQSxDQUFDTyxNQUFNRyxJQUFJLEdBQUdGLFFBQVEsTUFDNUJSLDBEQUFNQSxDQUFDTztBQUNyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvYmkvdG9CaWdJbnQuanM/NDAwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCaWdJbnQgfSBmcm9tICdAcG9sa2Fkb3QveC1iaWdpbnQnO1xuaW1wb3J0IHsgaGV4VG9CaWdJbnQgfSBmcm9tICcuLi9oZXgvdG9CaWdJbnQuanMnO1xuaW1wb3J0IHsgaXNCbiB9IGZyb20gJy4uL2lzL2JuLmpzJztcbmltcG9ydCB7IGlzSGV4IH0gZnJvbSAnLi4vaXMvaGV4LmpzJztcbmltcG9ydCB7IGlzVG9CaWdJbnQgfSBmcm9tICcuLi9pcy90b0JpZ0ludC5qcyc7XG5pbXBvcnQgeyBpc1RvQm4gfSBmcm9tICcuLi9pcy90b0JuLmpzJztcbi8qKlxuICogQG5hbWUgblRvQmlnSW50XG4gKiBAc3VtbWFyeSBDcmVhdGVzIGEgYmlnSW50IHZhbHVlIGZyb20gYSBCTiwgYmlnaW50LCBzdHJpbmcgKGJhc2UgMTAgb3IgaGV4KSBvciBudW1iZXIgaW5wdXQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBuVG9CaWdJbnQodmFsdWUpIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnYmlnaW50J1xuICAgICAgICA/IHZhbHVlXG4gICAgICAgIDogIXZhbHVlXG4gICAgICAgICAgICA/IEJpZ0ludCgwKVxuICAgICAgICAgICAgOiBpc0hleCh2YWx1ZSlcbiAgICAgICAgICAgICAgICA/IGhleFRvQmlnSW50KHZhbHVlLnRvU3RyaW5nKCkpXG4gICAgICAgICAgICAgICAgOiBpc0JuKHZhbHVlKVxuICAgICAgICAgICAgICAgICAgICA/IEJpZ0ludCh2YWx1ZS50b1N0cmluZygpKVxuICAgICAgICAgICAgICAgICAgICA6IGlzVG9CaWdJbnQodmFsdWUpXG4gICAgICAgICAgICAgICAgICAgICAgICA/IHZhbHVlLnRvQmlnSW50KClcbiAgICAgICAgICAgICAgICAgICAgICAgIDogaXNUb0JuKHZhbHVlKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gQmlnSW50KHZhbHVlLnRvQm4oKS50b1N0cmluZygpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogQmlnSW50KHZhbHVlKTtcbn1cbiJdLCJuYW1lcyI6WyJCaWdJbnQiLCJoZXhUb0JpZ0ludCIsImlzQm4iLCJpc0hleCIsImlzVG9CaWdJbnQiLCJpc1RvQm4iLCJuVG9CaWdJbnQiLCJ2YWx1ZSIsInRvU3RyaW5nIiwidG9CaWdJbnQiLCJ0b0JuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/bi/toBigInt.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/bi/toU8a.js":
/*!*************************************************!*\
  !*** ./node_modules/@polkadot/util/bi/toU8a.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   nToU8a: function() { return /* binding */ nToU8a; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/x-bigint */ \"(app-pages-browser)/./node_modules/@polkadot/util/node_modules/@polkadot/x-bigint/index.js\");\n/* harmony import */ var _consts_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./consts.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/bi/consts.js\");\n/* harmony import */ var _toBigInt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./toBigInt.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/bi/toBigInt.js\");\n\n\n\nconst DIV = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(256);\nconst NEG_MASK = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(0xff);\nfunction toU8a(value, isLe, isNegative) {\n    const arr = [];\n    const withSigned = isNegative && value < _consts_js__WEBPACK_IMPORTED_MODULE_1__._0n;\n    if (withSigned) {\n        value = (value + _consts_js__WEBPACK_IMPORTED_MODULE_1__._1n) * -_consts_js__WEBPACK_IMPORTED_MODULE_1__._1n;\n    }\n    while(value !== _consts_js__WEBPACK_IMPORTED_MODULE_1__._0n){\n        const mod = value % DIV;\n        const val = Number(withSigned ? mod ^ NEG_MASK : mod);\n        if (isLe) {\n            arr.push(val);\n        } else {\n            arr.unshift(val);\n        }\n        value = (value - mod) / DIV;\n    }\n    return Uint8Array.from(arr);\n}\n/**\n * @name nToU8a\n * @summary Creates a Uint8Array object from a bigint.\n */ function nToU8a(value) {\n    let { bitLength = -1, isLe = true, isNegative = false } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const valueBi = (0,_toBigInt_js__WEBPACK_IMPORTED_MODULE_2__.nToBigInt)(value);\n    if (valueBi === _consts_js__WEBPACK_IMPORTED_MODULE_1__._0n) {\n        return bitLength === -1 ? new Uint8Array(1) : new Uint8Array(Math.ceil((bitLength || 0) / 8));\n    }\n    const u8a = toU8a(valueBi, isLe, isNegative);\n    if (bitLength === -1) {\n        return u8a;\n    }\n    const byteLength = Math.ceil((bitLength || 0) / 8);\n    const output = new Uint8Array(byteLength);\n    if (isNegative) {\n        output.fill(0xff);\n    }\n    output.set(u8a, isLe ? 0 : byteLength - u8a.length);\n    return output;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9iaS90b1U4YS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTRDO0FBQ0w7QUFDRztBQUMxQyxNQUFNSSxNQUFNSiwwREFBTUEsQ0FBQztBQUNuQixNQUFNSyxXQUFXTCwwREFBTUEsQ0FBQztBQUN4QixTQUFTTSxNQUFNQyxLQUFLLEVBQUVDLElBQUksRUFBRUMsVUFBVTtJQUNsQyxNQUFNQyxNQUFNLEVBQUU7SUFDZCxNQUFNQyxhQUFhRixjQUFlRixRQUFRTiwyQ0FBR0E7SUFDN0MsSUFBSVUsWUFBWTtRQUNaSixRQUFRLENBQUNBLFFBQVFMLDJDQUFFLElBQUssQ0FBQ0EsMkNBQUdBO0lBQ2hDO0lBQ0EsTUFBT0ssVUFBVU4sMkNBQUdBLENBQUU7UUFDbEIsTUFBTVcsTUFBTUwsUUFBUUg7UUFDcEIsTUFBTVMsTUFBTUMsT0FBT0gsYUFDYkMsTUFBTVAsV0FDTk87UUFDTixJQUFJSixNQUFNO1lBQ05FLElBQUlLLElBQUksQ0FBQ0Y7UUFDYixPQUNLO1lBQ0RILElBQUlNLE9BQU8sQ0FBQ0g7UUFDaEI7UUFDQU4sUUFBUSxDQUFDQSxRQUFRSyxHQUFFLElBQUtSO0lBQzVCO0lBQ0EsT0FBT2EsV0FBV0MsSUFBSSxDQUFDUjtBQUMzQjtBQUNBOzs7Q0FHQyxHQUNNLFNBQVNTLE9BQU9aLEtBQUs7UUFBRSxFQUFFYSxZQUFZLENBQUMsQ0FBQyxFQUFFWixPQUFPLElBQUksRUFBRUMsYUFBYSxLQUFLLEVBQUUsR0FBbkQsaUVBQXNELENBQUM7SUFDakYsTUFBTVksVUFBVWxCLHVEQUFTQSxDQUFDSTtJQUMxQixJQUFJYyxZQUFZcEIsMkNBQUdBLEVBQUU7UUFDakIsT0FBT21CLGNBQWMsQ0FBQyxJQUNoQixJQUFJSCxXQUFXLEtBQ2YsSUFBSUEsV0FBV0ssS0FBS0MsSUFBSSxDQUFDLENBQUNILGFBQWEsS0FBSztJQUN0RDtJQUNBLE1BQU1JLE1BQU1sQixNQUFNZSxTQUFTYixNQUFNQztJQUNqQyxJQUFJVyxjQUFjLENBQUMsR0FBRztRQUNsQixPQUFPSTtJQUNYO0lBQ0EsTUFBTUMsYUFBYUgsS0FBS0MsSUFBSSxDQUFDLENBQUNILGFBQWEsS0FBSztJQUNoRCxNQUFNTSxTQUFTLElBQUlULFdBQVdRO0lBQzlCLElBQUloQixZQUFZO1FBQ1ppQixPQUFPQyxJQUFJLENBQUM7SUFDaEI7SUFDQUQsT0FBT0UsR0FBRyxDQUFDSixLQUFLaEIsT0FBTyxJQUFJaUIsYUFBYUQsSUFBSUssTUFBTTtJQUNsRCxPQUFPSDtBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9iaS90b1U4YS5qcz9iZmFlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJpZ0ludCB9IGZyb20gJ0Bwb2xrYWRvdC94LWJpZ2ludCc7XG5pbXBvcnQgeyBfMG4sIF8xbiB9IGZyb20gJy4vY29uc3RzLmpzJztcbmltcG9ydCB7IG5Ub0JpZ0ludCB9IGZyb20gJy4vdG9CaWdJbnQuanMnO1xuY29uc3QgRElWID0gQmlnSW50KDI1Nik7XG5jb25zdCBORUdfTUFTSyA9IEJpZ0ludCgweGZmKTtcbmZ1bmN0aW9uIHRvVThhKHZhbHVlLCBpc0xlLCBpc05lZ2F0aXZlKSB7XG4gICAgY29uc3QgYXJyID0gW107XG4gICAgY29uc3Qgd2l0aFNpZ25lZCA9IGlzTmVnYXRpdmUgJiYgKHZhbHVlIDwgXzBuKTtcbiAgICBpZiAod2l0aFNpZ25lZCkge1xuICAgICAgICB2YWx1ZSA9ICh2YWx1ZSArIF8xbikgKiAtXzFuO1xuICAgIH1cbiAgICB3aGlsZSAodmFsdWUgIT09IF8wbikge1xuICAgICAgICBjb25zdCBtb2QgPSB2YWx1ZSAlIERJVjtcbiAgICAgICAgY29uc3QgdmFsID0gTnVtYmVyKHdpdGhTaWduZWRcbiAgICAgICAgICAgID8gbW9kIF4gTkVHX01BU0tcbiAgICAgICAgICAgIDogbW9kKTtcbiAgICAgICAgaWYgKGlzTGUpIHtcbiAgICAgICAgICAgIGFyci5wdXNoKHZhbCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBhcnIudW5zaGlmdCh2YWwpO1xuICAgICAgICB9XG4gICAgICAgIHZhbHVlID0gKHZhbHVlIC0gbW9kKSAvIERJVjtcbiAgICB9XG4gICAgcmV0dXJuIFVpbnQ4QXJyYXkuZnJvbShhcnIpO1xufVxuLyoqXG4gKiBAbmFtZSBuVG9VOGFcbiAqIEBzdW1tYXJ5IENyZWF0ZXMgYSBVaW50OEFycmF5IG9iamVjdCBmcm9tIGEgYmlnaW50LlxuICovXG5leHBvcnQgZnVuY3Rpb24gblRvVThhKHZhbHVlLCB7IGJpdExlbmd0aCA9IC0xLCBpc0xlID0gdHJ1ZSwgaXNOZWdhdGl2ZSA9IGZhbHNlIH0gPSB7fSkge1xuICAgIGNvbnN0IHZhbHVlQmkgPSBuVG9CaWdJbnQodmFsdWUpO1xuICAgIGlmICh2YWx1ZUJpID09PSBfMG4pIHtcbiAgICAgICAgcmV0dXJuIGJpdExlbmd0aCA9PT0gLTFcbiAgICAgICAgICAgID8gbmV3IFVpbnQ4QXJyYXkoMSlcbiAgICAgICAgICAgIDogbmV3IFVpbnQ4QXJyYXkoTWF0aC5jZWlsKChiaXRMZW5ndGggfHwgMCkgLyA4KSk7XG4gICAgfVxuICAgIGNvbnN0IHU4YSA9IHRvVThhKHZhbHVlQmksIGlzTGUsIGlzTmVnYXRpdmUpO1xuICAgIGlmIChiaXRMZW5ndGggPT09IC0xKSB7XG4gICAgICAgIHJldHVybiB1OGE7XG4gICAgfVxuICAgIGNvbnN0IGJ5dGVMZW5ndGggPSBNYXRoLmNlaWwoKGJpdExlbmd0aCB8fCAwKSAvIDgpO1xuICAgIGNvbnN0IG91dHB1dCA9IG5ldyBVaW50OEFycmF5KGJ5dGVMZW5ndGgpO1xuICAgIGlmIChpc05lZ2F0aXZlKSB7XG4gICAgICAgIG91dHB1dC5maWxsKDB4ZmYpO1xuICAgIH1cbiAgICBvdXRwdXQuc2V0KHU4YSwgaXNMZSA/IDAgOiBieXRlTGVuZ3RoIC0gdThhLmxlbmd0aCk7XG4gICAgcmV0dXJuIG91dHB1dDtcbn1cbiJdLCJuYW1lcyI6WyJCaWdJbnQiLCJfMG4iLCJfMW4iLCJuVG9CaWdJbnQiLCJESVYiLCJORUdfTUFTSyIsInRvVThhIiwidmFsdWUiLCJpc0xlIiwiaXNOZWdhdGl2ZSIsImFyciIsIndpdGhTaWduZWQiLCJtb2QiLCJ2YWwiLCJOdW1iZXIiLCJwdXNoIiwidW5zaGlmdCIsIlVpbnQ4QXJyYXkiLCJmcm9tIiwiblRvVThhIiwiYml0TGVuZ3RoIiwidmFsdWVCaSIsIk1hdGgiLCJjZWlsIiwidThhIiwiYnl0ZUxlbmd0aCIsIm91dHB1dCIsImZpbGwiLCJzZXQiLCJsZW5ndGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/bi/toU8a.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/bn/consts.js":
/*!**************************************************!*\
  !*** ./node_modules/@polkadot/util/bn/consts.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BN_BILLION: function() { return /* binding */ BN_BILLION; },\n/* harmony export */   BN_EIGHT: function() { return /* binding */ BN_EIGHT; },\n/* harmony export */   BN_FIVE: function() { return /* binding */ BN_FIVE; },\n/* harmony export */   BN_FOUR: function() { return /* binding */ BN_FOUR; },\n/* harmony export */   BN_HUNDRED: function() { return /* binding */ BN_HUNDRED; },\n/* harmony export */   BN_MAX_INTEGER: function() { return /* binding */ BN_MAX_INTEGER; },\n/* harmony export */   BN_MILLION: function() { return /* binding */ BN_MILLION; },\n/* harmony export */   BN_NINE: function() { return /* binding */ BN_NINE; },\n/* harmony export */   BN_ONE: function() { return /* binding */ BN_ONE; },\n/* harmony export */   BN_QUINTILL: function() { return /* binding */ BN_QUINTILL; },\n/* harmony export */   BN_SEVEN: function() { return /* binding */ BN_SEVEN; },\n/* harmony export */   BN_SIX: function() { return /* binding */ BN_SIX; },\n/* harmony export */   BN_SQRT_MAX_INTEGER: function() { return /* binding */ BN_SQRT_MAX_INTEGER; },\n/* harmony export */   BN_TEN: function() { return /* binding */ BN_TEN; },\n/* harmony export */   BN_THOUSAND: function() { return /* binding */ BN_THOUSAND; },\n/* harmony export */   BN_THREE: function() { return /* binding */ BN_THREE; },\n/* harmony export */   BN_TWO: function() { return /* binding */ BN_TWO; },\n/* harmony export */   BN_ZERO: function() { return /* binding */ BN_ZERO; }\n/* harmony export */ });\n/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bn.js */ \"(app-pages-browser)/./node_modules/bn.js/lib/bn.js\");\n\n/**\n * @name BN_ZERO\n * @summary BN constant for 0.\n */ const BN_ZERO = /*#__PURE__*/ new _bn_js__WEBPACK_IMPORTED_MODULE_0__(0);\n/**\n * @name BN_ONE\n * @summary BN constant for 1.\n */ const BN_ONE = /*#__PURE__*/ new _bn_js__WEBPACK_IMPORTED_MODULE_0__(1);\n/**\n * @name BN_TWO\n * @summary BN constant for 2.\n */ const BN_TWO = /*#__PURE__*/ new _bn_js__WEBPACK_IMPORTED_MODULE_0__(2);\n/**\n * @name BN_THREE\n * @summary BN constant for 3.\n */ const BN_THREE = /*#__PURE__*/ new _bn_js__WEBPACK_IMPORTED_MODULE_0__(3);\n/**\n * @name BN_FOUR\n * @summary BN constant for 4.\n */ const BN_FOUR = /*#__PURE__*/ new _bn_js__WEBPACK_IMPORTED_MODULE_0__(4);\n/**\n * @name BN_FIVE\n * @summary BN constant for 5.\n */ const BN_FIVE = /*#__PURE__*/ new _bn_js__WEBPACK_IMPORTED_MODULE_0__(5);\n/**\n * @name BN_SIX\n * @summary BN constant for 6.\n */ const BN_SIX = /*#__PURE__*/ new _bn_js__WEBPACK_IMPORTED_MODULE_0__(6);\n/**\n * @name BN_SEVEN\n * @summary BN constant for 7.\n */ const BN_SEVEN = /*#__PURE__*/ new _bn_js__WEBPACK_IMPORTED_MODULE_0__(7);\n/**\n * @name BN_EIGHT\n * @summary BN constant for 8.\n */ const BN_EIGHT = /*#__PURE__*/ new _bn_js__WEBPACK_IMPORTED_MODULE_0__(8);\n/**\n * @name BN_NINE\n * @summary BN constant for 9.\n */ const BN_NINE = /*#__PURE__*/ new _bn_js__WEBPACK_IMPORTED_MODULE_0__(9);\n/**\n * @name BN_TEN\n * @summary BN constant for 10.\n */ const BN_TEN = /*#__PURE__*/ new _bn_js__WEBPACK_IMPORTED_MODULE_0__(10);\n/**\n * @name BN_HUNDRED\n * @summary BN constant for 100.\n */ const BN_HUNDRED = /*#__PURE__*/ new _bn_js__WEBPACK_IMPORTED_MODULE_0__(100);\n/**\n * @name BN_THOUSAND\n * @summary BN constant for 1,000.\n */ const BN_THOUSAND = /*#__PURE__*/ new _bn_js__WEBPACK_IMPORTED_MODULE_0__(1000);\n/**\n * @name BN_MILLION\n * @summary BN constant for 1,000,000.\n */ const BN_MILLION = /*#__PURE__*/ new _bn_js__WEBPACK_IMPORTED_MODULE_0__(1000000);\n/**\n * @name BN_BILLION\n * @summary BN constant for 1,000,000,000.\n */ const BN_BILLION = /*#__PURE__*/ new _bn_js__WEBPACK_IMPORTED_MODULE_0__(1000000000);\n/**\n * @name BN_QUINTILL\n * @summary BN constant for 1,000,000,000,000,000,000.\n */ const BN_QUINTILL = BN_BILLION.mul(BN_BILLION);\n_c = BN_QUINTILL;\n/**\n * @name BN_MAX_INTEGER\n * @summary BN constant for MAX_SAFE_INTEGER\n */ const BN_MAX_INTEGER = /*#__PURE__*/ new _bn_js__WEBPACK_IMPORTED_MODULE_0__(Number.MAX_SAFE_INTEGER);\n/**\n * @name BN_SQRT_MAX_INTEGER\n * @summary BN constant for Math.sqrt(MAX_SAFE_INTEGER)\n */ const BN_SQRT_MAX_INTEGER = /*#__PURE__*/ new _bn_js__WEBPACK_IMPORTED_MODULE_0__(94906265);\nvar _c;\n$RefreshReg$(_c, \"BN_QUINTILL\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9ibi9jb25zdHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE2QjtBQUM3Qjs7O0NBR0MsR0FDTSxNQUFNQyxVQUFVLFdBQVcsR0FBRyxJQUFJRCxtQ0FBRUEsQ0FBQyxHQUFHO0FBQy9DOzs7Q0FHQyxHQUNNLE1BQU1FLFNBQVMsV0FBVyxHQUFHLElBQUlGLG1DQUFFQSxDQUFDLEdBQUc7QUFDOUM7OztDQUdDLEdBQ00sTUFBTUcsU0FBUyxXQUFXLEdBQUcsSUFBSUgsbUNBQUVBLENBQUMsR0FBRztBQUM5Qzs7O0NBR0MsR0FDTSxNQUFNSSxXQUFXLFdBQVcsR0FBRyxJQUFJSixtQ0FBRUEsQ0FBQyxHQUFHO0FBQ2hEOzs7Q0FHQyxHQUNNLE1BQU1LLFVBQVUsV0FBVyxHQUFHLElBQUlMLG1DQUFFQSxDQUFDLEdBQUc7QUFDL0M7OztDQUdDLEdBQ00sTUFBTU0sVUFBVSxXQUFXLEdBQUcsSUFBSU4sbUNBQUVBLENBQUMsR0FBRztBQUMvQzs7O0NBR0MsR0FDTSxNQUFNTyxTQUFTLFdBQVcsR0FBRyxJQUFJUCxtQ0FBRUEsQ0FBQyxHQUFHO0FBQzlDOzs7Q0FHQyxHQUNNLE1BQU1RLFdBQVcsV0FBVyxHQUFHLElBQUlSLG1DQUFFQSxDQUFDLEdBQUc7QUFDaEQ7OztDQUdDLEdBQ00sTUFBTVMsV0FBVyxXQUFXLEdBQUcsSUFBSVQsbUNBQUVBLENBQUMsR0FBRztBQUNoRDs7O0NBR0MsR0FDTSxNQUFNVSxVQUFVLFdBQVcsR0FBRyxJQUFJVixtQ0FBRUEsQ0FBQyxHQUFHO0FBQy9DOzs7Q0FHQyxHQUNNLE1BQU1XLFNBQVMsV0FBVyxHQUFHLElBQUlYLG1DQUFFQSxDQUFDLElBQUk7QUFDL0M7OztDQUdDLEdBQ00sTUFBTVksYUFBYSxXQUFXLEdBQUcsSUFBSVosbUNBQUVBLENBQUMsS0FBSztBQUNwRDs7O0NBR0MsR0FDTSxNQUFNYSxjQUFjLFdBQVcsR0FBRyxJQUFJYixtQ0FBRUEsQ0FBQyxNQUFPO0FBQ3ZEOzs7Q0FHQyxHQUNNLE1BQU1jLGFBQWEsV0FBVyxHQUFHLElBQUlkLG1DQUFFQSxDQUFDLFNBQVc7QUFDMUQ7OztDQUdDLEdBQ00sTUFBTWUsYUFBYSxXQUFXLEdBQUcsSUFBSWYsbUNBQUVBLENBQUMsWUFBZTtBQUM5RDs7O0NBR0MsR0FDTSxNQUFNZ0IsY0FBY0QsV0FBV0UsR0FBRyxDQUFDRixZQUFZOztBQUN0RDs7O0NBR0MsR0FDTSxNQUFNRyxpQkFBaUIsV0FBVyxHQUFHLElBQUlsQixtQ0FBRUEsQ0FBQ21CLE9BQU9DLGdCQUFnQixFQUFFO0FBQzVFOzs7Q0FHQyxHQUNNLE1BQU1DLHNCQUFzQixXQUFXLEdBQUcsSUFBSXJCLG1DQUFFQSxDQUFDLFVBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsL2JuL2NvbnN0cy5qcz9hNmY3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJOIH0gZnJvbSAnLi9ibi5qcyc7XG4vKipcbiAqIEBuYW1lIEJOX1pFUk9cbiAqIEBzdW1tYXJ5IEJOIGNvbnN0YW50IGZvciAwLlxuICovXG5leHBvcnQgY29uc3QgQk5fWkVSTyA9IC8qI19fUFVSRV9fKi8gbmV3IEJOKDApO1xuLyoqXG4gKiBAbmFtZSBCTl9PTkVcbiAqIEBzdW1tYXJ5IEJOIGNvbnN0YW50IGZvciAxLlxuICovXG5leHBvcnQgY29uc3QgQk5fT05FID0gLyojX19QVVJFX18qLyBuZXcgQk4oMSk7XG4vKipcbiAqIEBuYW1lIEJOX1RXT1xuICogQHN1bW1hcnkgQk4gY29uc3RhbnQgZm9yIDIuXG4gKi9cbmV4cG9ydCBjb25zdCBCTl9UV08gPSAvKiNfX1BVUkVfXyovIG5ldyBCTigyKTtcbi8qKlxuICogQG5hbWUgQk5fVEhSRUVcbiAqIEBzdW1tYXJ5IEJOIGNvbnN0YW50IGZvciAzLlxuICovXG5leHBvcnQgY29uc3QgQk5fVEhSRUUgPSAvKiNfX1BVUkVfXyovIG5ldyBCTigzKTtcbi8qKlxuICogQG5hbWUgQk5fRk9VUlxuICogQHN1bW1hcnkgQk4gY29uc3RhbnQgZm9yIDQuXG4gKi9cbmV4cG9ydCBjb25zdCBCTl9GT1VSID0gLyojX19QVVJFX18qLyBuZXcgQk4oNCk7XG4vKipcbiAqIEBuYW1lIEJOX0ZJVkVcbiAqIEBzdW1tYXJ5IEJOIGNvbnN0YW50IGZvciA1LlxuICovXG5leHBvcnQgY29uc3QgQk5fRklWRSA9IC8qI19fUFVSRV9fKi8gbmV3IEJOKDUpO1xuLyoqXG4gKiBAbmFtZSBCTl9TSVhcbiAqIEBzdW1tYXJ5IEJOIGNvbnN0YW50IGZvciA2LlxuICovXG5leHBvcnQgY29uc3QgQk5fU0lYID0gLyojX19QVVJFX18qLyBuZXcgQk4oNik7XG4vKipcbiAqIEBuYW1lIEJOX1NFVkVOXG4gKiBAc3VtbWFyeSBCTiBjb25zdGFudCBmb3IgNy5cbiAqL1xuZXhwb3J0IGNvbnN0IEJOX1NFVkVOID0gLyojX19QVVJFX18qLyBuZXcgQk4oNyk7XG4vKipcbiAqIEBuYW1lIEJOX0VJR0hUXG4gKiBAc3VtbWFyeSBCTiBjb25zdGFudCBmb3IgOC5cbiAqL1xuZXhwb3J0IGNvbnN0IEJOX0VJR0hUID0gLyojX19QVVJFX18qLyBuZXcgQk4oOCk7XG4vKipcbiAqIEBuYW1lIEJOX05JTkVcbiAqIEBzdW1tYXJ5IEJOIGNvbnN0YW50IGZvciA5LlxuICovXG5leHBvcnQgY29uc3QgQk5fTklORSA9IC8qI19fUFVSRV9fKi8gbmV3IEJOKDkpO1xuLyoqXG4gKiBAbmFtZSBCTl9URU5cbiAqIEBzdW1tYXJ5IEJOIGNvbnN0YW50IGZvciAxMC5cbiAqL1xuZXhwb3J0IGNvbnN0IEJOX1RFTiA9IC8qI19fUFVSRV9fKi8gbmV3IEJOKDEwKTtcbi8qKlxuICogQG5hbWUgQk5fSFVORFJFRFxuICogQHN1bW1hcnkgQk4gY29uc3RhbnQgZm9yIDEwMC5cbiAqL1xuZXhwb3J0IGNvbnN0IEJOX0hVTkRSRUQgPSAvKiNfX1BVUkVfXyovIG5ldyBCTigxMDApO1xuLyoqXG4gKiBAbmFtZSBCTl9USE9VU0FORFxuICogQHN1bW1hcnkgQk4gY29uc3RhbnQgZm9yIDEsMDAwLlxuICovXG5leHBvcnQgY29uc3QgQk5fVEhPVVNBTkQgPSAvKiNfX1BVUkVfXyovIG5ldyBCTigxXzAwMCk7XG4vKipcbiAqIEBuYW1lIEJOX01JTExJT05cbiAqIEBzdW1tYXJ5IEJOIGNvbnN0YW50IGZvciAxLDAwMCwwMDAuXG4gKi9cbmV4cG9ydCBjb25zdCBCTl9NSUxMSU9OID0gLyojX19QVVJFX18qLyBuZXcgQk4oMV8wMDBfMDAwKTtcbi8qKlxuICogQG5hbWUgQk5fQklMTElPTlxuICogQHN1bW1hcnkgQk4gY29uc3RhbnQgZm9yIDEsMDAwLDAwMCwwMDAuXG4gKi9cbmV4cG9ydCBjb25zdCBCTl9CSUxMSU9OID0gLyojX19QVVJFX18qLyBuZXcgQk4oMV8wMDBfMDAwXzAwMCk7XG4vKipcbiAqIEBuYW1lIEJOX1FVSU5USUxMXG4gKiBAc3VtbWFyeSBCTiBjb25zdGFudCBmb3IgMSwwMDAsMDAwLDAwMCwwMDAsMDAwLDAwMC5cbiAqL1xuZXhwb3J0IGNvbnN0IEJOX1FVSU5USUxMID0gQk5fQklMTElPTi5tdWwoQk5fQklMTElPTik7XG4vKipcbiAqIEBuYW1lIEJOX01BWF9JTlRFR0VSXG4gKiBAc3VtbWFyeSBCTiBjb25zdGFudCBmb3IgTUFYX1NBRkVfSU5URUdFUlxuICovXG5leHBvcnQgY29uc3QgQk5fTUFYX0lOVEVHRVIgPSAvKiNfX1BVUkVfXyovIG5ldyBCTihOdW1iZXIuTUFYX1NBRkVfSU5URUdFUik7XG4vKipcbiAqIEBuYW1lIEJOX1NRUlRfTUFYX0lOVEVHRVJcbiAqIEBzdW1tYXJ5IEJOIGNvbnN0YW50IGZvciBNYXRoLnNxcnQoTUFYX1NBRkVfSU5URUdFUilcbiAqL1xuZXhwb3J0IGNvbnN0IEJOX1NRUlRfTUFYX0lOVEVHRVIgPSAvKiNfX1BVUkVfXyovIG5ldyBCTig5NDkwNjI2NSk7XG4iXSwibmFtZXMiOlsiQk4iLCJCTl9aRVJPIiwiQk5fT05FIiwiQk5fVFdPIiwiQk5fVEhSRUUiLCJCTl9GT1VSIiwiQk5fRklWRSIsIkJOX1NJWCIsIkJOX1NFVkVOIiwiQk5fRUlHSFQiLCJCTl9OSU5FIiwiQk5fVEVOIiwiQk5fSFVORFJFRCIsIkJOX1RIT1VTQU5EIiwiQk5fTUlMTElPTiIsIkJOX0JJTExJT04iLCJCTl9RVUlOVElMTCIsIm11bCIsIkJOX01BWF9JTlRFR0VSIiwiTnVtYmVyIiwiTUFYX1NBRkVfSU5URUdFUiIsIkJOX1NRUlRfTUFYX0lOVEVHRVIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/bn/consts.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/bn/toBn.js":
/*!************************************************!*\
  !*** ./node_modules/@polkadot/util/bn/toBn.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bnToBn: function() { return /* binding */ bnToBn; }\n/* harmony export */ });\n/* harmony import */ var _hex_toBn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hex/toBn.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/hex/toBn.js\");\n/* harmony import */ var _is_bigInt_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../is/bigInt.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/bigInt.js\");\n/* harmony import */ var _is_hex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../is/hex.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/hex.js\");\n/* harmony import */ var _is_toBigInt_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../is/toBigInt.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/toBigInt.js\");\n/* harmony import */ var _is_toBn_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../is/toBn.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/toBn.js\");\n/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bn.js */ \"(app-pages-browser)/./node_modules/bn.js/lib/bn.js\");\n\n\n\n\n\n\n/**\n * @name bnToBn\n * @summary Creates a BN value from a BN, bigint, string (base 10 or hex) or number input.\n * @description\n * `null` inputs returns a `0x0` result, BN values returns the value, numbers returns a BN representation.\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { bnToBn } from '@polkadot/util';\n *\n * bnToBn(0x1234); // => BN(0x1234)\n * bnToBn(new BN(0x1234)); // => BN(0x1234)\n * ```\n */ function bnToBn(value) {\n    return value ? _bn_js__WEBPACK_IMPORTED_MODULE_0__.isBN(value) ? value : (0,_is_hex_js__WEBPACK_IMPORTED_MODULE_1__.isHex)(value) ? (0,_hex_toBn_js__WEBPACK_IMPORTED_MODULE_2__.hexToBn)(value.toString()) : (0,_is_bigInt_js__WEBPACK_IMPORTED_MODULE_3__.isBigInt)(value) ? new _bn_js__WEBPACK_IMPORTED_MODULE_0__(value.toString()) : (0,_is_toBn_js__WEBPACK_IMPORTED_MODULE_4__.isToBn)(value) ? value.toBn() : (0,_is_toBigInt_js__WEBPACK_IMPORTED_MODULE_5__.isToBigInt)(value) ? new _bn_js__WEBPACK_IMPORTED_MODULE_0__(value.toBigInt().toString()) : new _bn_js__WEBPACK_IMPORTED_MODULE_0__(value) : new _bn_js__WEBPACK_IMPORTED_MODULE_0__(0);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9ibi90b0JuLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBeUM7QUFDRTtBQUNOO0FBQ1U7QUFDUjtBQUNWO0FBQzdCOzs7Ozs7Ozs7Ozs7Ozs7Q0FlQyxHQUNNLFNBQVNNLE9BQU9DLEtBQUs7SUFDeEIsT0FBT0EsUUFDREYsd0NBQU8sQ0FBQ0UsU0FDSkEsUUFDQUwsaURBQUtBLENBQUNLLFNBQ0ZQLHFEQUFPQSxDQUFDTyxNQUFNRSxRQUFRLE1BQ3RCUix1REFBUUEsQ0FBQ00sU0FDTCxJQUFJRixtQ0FBRUEsQ0FBQ0UsTUFBTUUsUUFBUSxNQUNyQkwsbURBQU1BLENBQUNHLFNBQ0hBLE1BQU1HLElBQUksS0FDVlAsMkRBQVVBLENBQUNJLFNBQ1AsSUFBSUYsbUNBQUVBLENBQUNFLE1BQU1JLFFBQVEsR0FBR0YsUUFBUSxNQUNoQyxJQUFJSixtQ0FBRUEsQ0FBQ0UsU0FDM0IsSUFBSUYsbUNBQUVBLENBQUM7QUFDakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsL2JuL3RvQm4uanM/YmYwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBoZXhUb0JuIH0gZnJvbSAnLi4vaGV4L3RvQm4uanMnO1xuaW1wb3J0IHsgaXNCaWdJbnQgfSBmcm9tICcuLi9pcy9iaWdJbnQuanMnO1xuaW1wb3J0IHsgaXNIZXggfSBmcm9tICcuLi9pcy9oZXguanMnO1xuaW1wb3J0IHsgaXNUb0JpZ0ludCB9IGZyb20gJy4uL2lzL3RvQmlnSW50LmpzJztcbmltcG9ydCB7IGlzVG9CbiB9IGZyb20gJy4uL2lzL3RvQm4uanMnO1xuaW1wb3J0IHsgQk4gfSBmcm9tICcuL2JuLmpzJztcbi8qKlxuICogQG5hbWUgYm5Ub0JuXG4gKiBAc3VtbWFyeSBDcmVhdGVzIGEgQk4gdmFsdWUgZnJvbSBhIEJOLCBiaWdpbnQsIHN0cmluZyAoYmFzZSAxMCBvciBoZXgpIG9yIG51bWJlciBpbnB1dC5cbiAqIEBkZXNjcmlwdGlvblxuICogYG51bGxgIGlucHV0cyByZXR1cm5zIGEgYDB4MGAgcmVzdWx0LCBCTiB2YWx1ZXMgcmV0dXJucyB0aGUgdmFsdWUsIG51bWJlcnMgcmV0dXJucyBhIEJOIHJlcHJlc2VudGF0aW9uLlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgQk4gZnJvbSAnYm4uanMnO1xuICogaW1wb3J0IHsgYm5Ub0JuIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuICpcbiAqIGJuVG9CbigweDEyMzQpOyAvLyA9PiBCTigweDEyMzQpXG4gKiBiblRvQm4obmV3IEJOKDB4MTIzNCkpOyAvLyA9PiBCTigweDEyMzQpXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJuVG9Cbih2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZVxuICAgICAgICA/IEJOLmlzQk4odmFsdWUpXG4gICAgICAgICAgICA/IHZhbHVlXG4gICAgICAgICAgICA6IGlzSGV4KHZhbHVlKVxuICAgICAgICAgICAgICAgID8gaGV4VG9Cbih2YWx1ZS50b1N0cmluZygpKVxuICAgICAgICAgICAgICAgIDogaXNCaWdJbnQodmFsdWUpXG4gICAgICAgICAgICAgICAgICAgID8gbmV3IEJOKHZhbHVlLnRvU3RyaW5nKCkpXG4gICAgICAgICAgICAgICAgICAgIDogaXNUb0JuKHZhbHVlKVxuICAgICAgICAgICAgICAgICAgICAgICAgPyB2YWx1ZS50b0JuKClcbiAgICAgICAgICAgICAgICAgICAgICAgIDogaXNUb0JpZ0ludCh2YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IG5ldyBCTih2YWx1ZS50b0JpZ0ludCgpLnRvU3RyaW5nKCkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBuZXcgQk4odmFsdWUpXG4gICAgICAgIDogbmV3IEJOKDApO1xufVxuIl0sIm5hbWVzIjpbImhleFRvQm4iLCJpc0JpZ0ludCIsImlzSGV4IiwiaXNUb0JpZ0ludCIsImlzVG9CbiIsIkJOIiwiYm5Ub0JuIiwidmFsdWUiLCJpc0JOIiwidG9TdHJpbmciLCJ0b0JuIiwidG9CaWdJbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/bn/toBn.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/bn/toU8a.js":
/*!*************************************************!*\
  !*** ./node_modules/@polkadot/util/bn/toU8a.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bnToU8a: function() { return /* binding */ bnToU8a; }\n/* harmony export */ });\n/* harmony import */ var _toBn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toBn.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/bn/toBn.js\");\n\nconst DEFAULT_OPTS = {\n    bitLength: -1,\n    isLe: true,\n    isNegative: false\n};\n/**\n * @name bnToU8a\n * @summary Creates a Uint8Array object from a BN.\n * @description\n * `null`/`undefined`/`NaN` inputs returns an empty `Uint8Array` result. `BN` input values return the actual bytes value converted to a `Uint8Array`. Optionally convert using little-endian format if `isLE` is set.\n * @example\n * <BR>\n *\n * ```javascript\n * import { bnToU8a } from '@polkadot/util';\n *\n * bnToU8a(new BN(0x1234)); // => [0x12, 0x34]\n * ```\n */ function bnToU8a(value) {\n    let { bitLength = -1, isLe = true, isNegative = false } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : DEFAULT_OPTS;\n    const valueBn = (0,_toBn_js__WEBPACK_IMPORTED_MODULE_0__.bnToBn)(value);\n    const byteLength = bitLength === -1 ? Math.ceil(valueBn.bitLength() / 8) : Math.ceil((bitLength || 0) / 8);\n    if (!value) {\n        return bitLength === -1 ? new Uint8Array(1) : new Uint8Array(byteLength);\n    }\n    const output = new Uint8Array(byteLength);\n    const bn = isNegative ? valueBn.toTwos(byteLength * 8) : valueBn;\n    output.set(bn.toArray(isLe ? \"le\" : \"be\", byteLength), 0);\n    return output;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9ibi90b1U4YS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFtQztBQUNuQyxNQUFNQyxlQUFlO0lBQUVDLFdBQVcsQ0FBQztJQUFHQyxNQUFNO0lBQU1DLFlBQVk7QUFBTTtBQUNwRTs7Ozs7Ozs7Ozs7OztDQWFDLEdBQ00sU0FBU0MsUUFBUUMsS0FBSztRQUFFLEVBQUVKLFlBQVksQ0FBQyxDQUFDLEVBQUVDLE9BQU8sSUFBSSxFQUFFQyxhQUFhLEtBQUssRUFBRSxHQUFuRCxpRUFBc0RIO0lBQ2pGLE1BQU1NLFVBQVVQLGdEQUFNQSxDQUFDTTtJQUN2QixNQUFNRSxhQUFhTixjQUFjLENBQUMsSUFDNUJPLEtBQUtDLElBQUksQ0FBQ0gsUUFBUUwsU0FBUyxLQUFLLEtBQ2hDTyxLQUFLQyxJQUFJLENBQUMsQ0FBQ1IsYUFBYSxLQUFLO0lBQ25DLElBQUksQ0FBQ0ksT0FBTztRQUNSLE9BQU9KLGNBQWMsQ0FBQyxJQUNoQixJQUFJUyxXQUFXLEtBQ2YsSUFBSUEsV0FBV0g7SUFDekI7SUFDQSxNQUFNSSxTQUFTLElBQUlELFdBQVdIO0lBQzlCLE1BQU1LLEtBQUtULGFBQ0xHLFFBQVFPLE1BQU0sQ0FBQ04sYUFBYSxLQUM1QkQ7SUFDTkssT0FBT0csR0FBRyxDQUFDRixHQUFHRyxPQUFPLENBQUNiLE9BQU8sT0FBTyxNQUFNSyxhQUFhO0lBQ3ZELE9BQU9JO0FBQ1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsL2JuL3RvVThhLmpzPzBjZDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYm5Ub0JuIH0gZnJvbSAnLi90b0JuLmpzJztcbmNvbnN0IERFRkFVTFRfT1BUUyA9IHsgYml0TGVuZ3RoOiAtMSwgaXNMZTogdHJ1ZSwgaXNOZWdhdGl2ZTogZmFsc2UgfTtcbi8qKlxuICogQG5hbWUgYm5Ub1U4YVxuICogQHN1bW1hcnkgQ3JlYXRlcyBhIFVpbnQ4QXJyYXkgb2JqZWN0IGZyb20gYSBCTi5cbiAqIEBkZXNjcmlwdGlvblxuICogYG51bGxgL2B1bmRlZmluZWRgL2BOYU5gIGlucHV0cyByZXR1cm5zIGFuIGVtcHR5IGBVaW50OEFycmF5YCByZXN1bHQuIGBCTmAgaW5wdXQgdmFsdWVzIHJldHVybiB0aGUgYWN0dWFsIGJ5dGVzIHZhbHVlIGNvbnZlcnRlZCB0byBhIGBVaW50OEFycmF5YC4gT3B0aW9uYWxseSBjb252ZXJ0IHVzaW5nIGxpdHRsZS1lbmRpYW4gZm9ybWF0IGlmIGBpc0xFYCBpcyBzZXQuXG4gKiBAZXhhbXBsZVxuICogPEJSPlxuICpcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGltcG9ydCB7IGJuVG9VOGEgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG4gKlxuICogYm5Ub1U4YShuZXcgQk4oMHgxMjM0KSk7IC8vID0+IFsweDEyLCAweDM0XVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBiblRvVThhKHZhbHVlLCB7IGJpdExlbmd0aCA9IC0xLCBpc0xlID0gdHJ1ZSwgaXNOZWdhdGl2ZSA9IGZhbHNlIH0gPSBERUZBVUxUX09QVFMpIHtcbiAgICBjb25zdCB2YWx1ZUJuID0gYm5Ub0JuKHZhbHVlKTtcbiAgICBjb25zdCBieXRlTGVuZ3RoID0gYml0TGVuZ3RoID09PSAtMVxuICAgICAgICA/IE1hdGguY2VpbCh2YWx1ZUJuLmJpdExlbmd0aCgpIC8gOClcbiAgICAgICAgOiBNYXRoLmNlaWwoKGJpdExlbmd0aCB8fCAwKSAvIDgpO1xuICAgIGlmICghdmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIGJpdExlbmd0aCA9PT0gLTFcbiAgICAgICAgICAgID8gbmV3IFVpbnQ4QXJyYXkoMSlcbiAgICAgICAgICAgIDogbmV3IFVpbnQ4QXJyYXkoYnl0ZUxlbmd0aCk7XG4gICAgfVxuICAgIGNvbnN0IG91dHB1dCA9IG5ldyBVaW50OEFycmF5KGJ5dGVMZW5ndGgpO1xuICAgIGNvbnN0IGJuID0gaXNOZWdhdGl2ZVxuICAgICAgICA/IHZhbHVlQm4udG9Ud29zKGJ5dGVMZW5ndGggKiA4KVxuICAgICAgICA6IHZhbHVlQm47XG4gICAgb3V0cHV0LnNldChibi50b0FycmF5KGlzTGUgPyAnbGUnIDogJ2JlJywgYnl0ZUxlbmd0aCksIDApO1xuICAgIHJldHVybiBvdXRwdXQ7XG59XG4iXSwibmFtZXMiOlsiYm5Ub0JuIiwiREVGQVVMVF9PUFRTIiwiYml0TGVuZ3RoIiwiaXNMZSIsImlzTmVnYXRpdmUiLCJiblRvVThhIiwidmFsdWUiLCJ2YWx1ZUJuIiwiYnl0ZUxlbmd0aCIsIk1hdGgiLCJjZWlsIiwiVWludDhBcnJheSIsIm91dHB1dCIsImJuIiwidG9Ud29zIiwic2V0IiwidG9BcnJheSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/bn/toU8a.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/compact/addLength.js":
/*!**********************************************************!*\
  !*** ./node_modules/@polkadot/util/compact/addLength.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compactAddLength: function() { return /* binding */ compactAddLength; }\n/* harmony export */ });\n/* harmony import */ var _u8a_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../u8a/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/concat.js\");\n/* harmony import */ var _toU8a_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/compact/toU8a.js\");\n\n\n/**\n * @name compactAddLength\n * @description Adds a length prefix to the input value\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactAddLength } from '@polkadot/util';\n *\n * console.log(compactAddLength(new Uint8Array([0xde, 0xad, 0xbe, 0xef]))); // Uint8Array([4 << 2, 0xde, 0xad, 0xbe, 0xef])\n * ```\n */ function compactAddLength(input) {\n    return (0,_u8a_index_js__WEBPACK_IMPORTED_MODULE_0__.u8aConcatStrict)([\n        (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_1__.compactToU8a)(input.length),\n        input\n    ]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9jb21wYWN0L2FkZExlbmd0aC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBa0Q7QUFDUjtBQUMxQzs7Ozs7Ozs7Ozs7Q0FXQyxHQUNNLFNBQVNFLGlCQUFpQkMsS0FBSztJQUNsQyxPQUFPSCw4REFBZUEsQ0FBQztRQUNuQkMsdURBQVlBLENBQUNFLE1BQU1DLE1BQU07UUFDekJEO0tBQ0g7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvY29tcGFjdC9hZGRMZW5ndGguanM/ZGJkYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1OGFDb25jYXRTdHJpY3QgfSBmcm9tICcuLi91OGEvaW5kZXguanMnO1xuaW1wb3J0IHsgY29tcGFjdFRvVThhIH0gZnJvbSAnLi90b1U4YS5qcyc7XG4vKipcbiAqIEBuYW1lIGNvbXBhY3RBZGRMZW5ndGhcbiAqIEBkZXNjcmlwdGlvbiBBZGRzIGEgbGVuZ3RoIHByZWZpeCB0byB0aGUgaW5wdXQgdmFsdWVcbiAqIEBleGFtcGxlXG4gKiA8QlI+XG4gKlxuICogYGBgamF2YXNjcmlwdFxuICogaW1wb3J0IHsgY29tcGFjdEFkZExlbmd0aCB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbiAqXG4gKiBjb25zb2xlLmxvZyhjb21wYWN0QWRkTGVuZ3RoKG5ldyBVaW50OEFycmF5KFsweGRlLCAweGFkLCAweGJlLCAweGVmXSkpKTsgLy8gVWludDhBcnJheShbNCA8PCAyLCAweGRlLCAweGFkLCAweGJlLCAweGVmXSlcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gY29tcGFjdEFkZExlbmd0aChpbnB1dCkge1xuICAgIHJldHVybiB1OGFDb25jYXRTdHJpY3QoW1xuICAgICAgICBjb21wYWN0VG9VOGEoaW5wdXQubGVuZ3RoKSxcbiAgICAgICAgaW5wdXRcbiAgICBdKTtcbn1cbiJdLCJuYW1lcyI6WyJ1OGFDb25jYXRTdHJpY3QiLCJjb21wYWN0VG9VOGEiLCJjb21wYWN0QWRkTGVuZ3RoIiwiaW5wdXQiLCJsZW5ndGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/compact/addLength.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/compact/toU8a.js":
/*!******************************************************!*\
  !*** ./node_modules/@polkadot/util/compact/toU8a.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compactToU8a: function() { return /* binding */ compactToU8a; }\n/* harmony export */ });\n/* harmony import */ var _bn_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bn/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/bn/consts.js\");\n/* harmony import */ var _bn_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bn/index.js */ \"(app-pages-browser)/./node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var _bn_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../bn/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/bn/toBn.js\");\n/* harmony import */ var _bn_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../bn/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/bn/toU8a.js\");\n/* harmony import */ var _u8a_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../u8a/index.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/concat.js\");\n\n\nconst MAX_U8 = _bn_index_js__WEBPACK_IMPORTED_MODULE_0__.BN_TWO.pow(new _bn_index_js__WEBPACK_IMPORTED_MODULE_1__(8 - 2)).isub(_bn_index_js__WEBPACK_IMPORTED_MODULE_0__.BN_ONE);\n_c = MAX_U8;\nconst MAX_U16 = _bn_index_js__WEBPACK_IMPORTED_MODULE_0__.BN_TWO.pow(new _bn_index_js__WEBPACK_IMPORTED_MODULE_1__(16 - 2)).isub(_bn_index_js__WEBPACK_IMPORTED_MODULE_0__.BN_ONE);\n_c1 = MAX_U16;\nconst MAX_U32 = _bn_index_js__WEBPACK_IMPORTED_MODULE_0__.BN_TWO.pow(new _bn_index_js__WEBPACK_IMPORTED_MODULE_1__(32 - 2)).isub(_bn_index_js__WEBPACK_IMPORTED_MODULE_0__.BN_ONE);\n_c2 = MAX_U32;\nconst BL_16 = {\n    bitLength: 16\n};\nconst BL_32 = {\n    bitLength: 32\n};\n/**\n * @name compactToU8a\n * @description Encodes a number into a compact representation\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactToU8a } from '@polkadot/util';\n *\n * console.log(compactToU8a(511, 32)); // Uint8Array([0b11111101, 0b00000111])\n * ```\n */ function compactToU8a(value) {\n    const bn = (0,_bn_index_js__WEBPACK_IMPORTED_MODULE_2__.bnToBn)(value);\n    if (bn.lte(MAX_U8)) {\n        return new Uint8Array([\n            bn.toNumber() << 2\n        ]);\n    } else if (bn.lte(MAX_U16)) {\n        return (0,_bn_index_js__WEBPACK_IMPORTED_MODULE_3__.bnToU8a)(bn.shln(2).iadd(_bn_index_js__WEBPACK_IMPORTED_MODULE_0__.BN_ONE), BL_16);\n    } else if (bn.lte(MAX_U32)) {\n        return (0,_bn_index_js__WEBPACK_IMPORTED_MODULE_3__.bnToU8a)(bn.shln(2).iadd(_bn_index_js__WEBPACK_IMPORTED_MODULE_0__.BN_TWO), BL_32);\n    }\n    const u8a = (0,_bn_index_js__WEBPACK_IMPORTED_MODULE_3__.bnToU8a)(bn);\n    let length = u8a.length;\n    // adjust to the minimum number of bytes\n    while(u8a[length - 1] === 0){\n        length--;\n    }\n    if (length < 4) {\n        throw new Error(\"Invalid length, previous checks match anything less than 2^30\");\n    }\n    return (0,_u8a_index_js__WEBPACK_IMPORTED_MODULE_4__.u8aConcatStrict)([\n        // subtract 4 as minimum (also catered for in decoding)\n        new Uint8Array([\n            (length - 4 << 2) + 3\n        ]),\n        u8a.subarray(0, length)\n    ]);\n}\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"MAX_U8\");\n$RefreshReg$(_c1, \"MAX_U16\");\n$RefreshReg$(_c2, \"MAX_U32\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9jb21wYWN0L3RvVThhLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFxRTtBQUNuQjtBQUNsRCxNQUFNTSxTQUFTSixnREFBTUEsQ0FBQ0ssR0FBRyxDQUFDLElBQUlQLHlDQUFFQSxDQUFDLElBQUksSUFBSVEsSUFBSSxDQUFDUCxnREFBTUE7O0FBQ3BELE1BQU1RLFVBQVVQLGdEQUFNQSxDQUFDSyxHQUFHLENBQUMsSUFBSVAseUNBQUVBLENBQUMsS0FBSyxJQUFJUSxJQUFJLENBQUNQLGdEQUFNQTs7QUFDdEQsTUFBTVMsVUFBVVIsZ0RBQU1BLENBQUNLLEdBQUcsQ0FBQyxJQUFJUCx5Q0FBRUEsQ0FBQyxLQUFLLElBQUlRLElBQUksQ0FBQ1AsZ0RBQU1BOztBQUN0RCxNQUFNVSxRQUFRO0lBQUVDLFdBQVc7QUFBRztBQUM5QixNQUFNQyxRQUFRO0lBQUVELFdBQVc7QUFBRztBQUM5Qjs7Ozs7Ozs7Ozs7Q0FXQyxHQUNNLFNBQVNFLGFBQWFDLEtBQUs7SUFDOUIsTUFBTUMsS0FBS2Isb0RBQU1BLENBQUNZO0lBQ2xCLElBQUlDLEdBQUdDLEdBQUcsQ0FBQ1gsU0FBUztRQUNoQixPQUFPLElBQUlZLFdBQVc7WUFBQ0YsR0FBR0csUUFBUSxNQUFNO1NBQUU7SUFDOUMsT0FDSyxJQUFJSCxHQUFHQyxHQUFHLENBQUNSLFVBQVU7UUFDdEIsT0FBT0wscURBQU9BLENBQUNZLEdBQUdJLElBQUksQ0FBQyxHQUFHQyxJQUFJLENBQUNwQixnREFBTUEsR0FBR1U7SUFDNUMsT0FDSyxJQUFJSyxHQUFHQyxHQUFHLENBQUNQLFVBQVU7UUFDdEIsT0FBT04scURBQU9BLENBQUNZLEdBQUdJLElBQUksQ0FBQyxHQUFHQyxJQUFJLENBQUNuQixnREFBTUEsR0FBR1c7SUFDNUM7SUFDQSxNQUFNUyxNQUFNbEIscURBQU9BLENBQUNZO0lBQ3BCLElBQUlPLFNBQVNELElBQUlDLE1BQU07SUFDdkIsd0NBQXdDO0lBQ3hDLE1BQU9ELEdBQUcsQ0FBQ0MsU0FBUyxFQUFFLEtBQUssRUFBRztRQUMxQkE7SUFDSjtJQUNBLElBQUlBLFNBQVMsR0FBRztRQUNaLE1BQU0sSUFBSUMsTUFBTTtJQUNwQjtJQUNBLE9BQU9uQiw4REFBZUEsQ0FBQztRQUNuQix1REFBdUQ7UUFDdkQsSUFBSWEsV0FBVztZQUFFLFVBQVUsS0FBTSxLQUFLO1NBQUs7UUFDM0NJLElBQUlHLFFBQVEsQ0FBQyxHQUFHRjtLQUNuQjtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9jb21wYWN0L3RvVThhLmpzPzk3YjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQk4sIEJOX09ORSwgQk5fVFdPLCBiblRvQm4sIGJuVG9VOGEgfSBmcm9tICcuLi9ibi9pbmRleC5qcyc7XG5pbXBvcnQgeyB1OGFDb25jYXRTdHJpY3QgfSBmcm9tICcuLi91OGEvaW5kZXguanMnO1xuY29uc3QgTUFYX1U4ID0gQk5fVFdPLnBvdyhuZXcgQk4oOCAtIDIpKS5pc3ViKEJOX09ORSk7XG5jb25zdCBNQVhfVTE2ID0gQk5fVFdPLnBvdyhuZXcgQk4oMTYgLSAyKSkuaXN1YihCTl9PTkUpO1xuY29uc3QgTUFYX1UzMiA9IEJOX1RXTy5wb3cobmV3IEJOKDMyIC0gMikpLmlzdWIoQk5fT05FKTtcbmNvbnN0IEJMXzE2ID0geyBiaXRMZW5ndGg6IDE2IH07XG5jb25zdCBCTF8zMiA9IHsgYml0TGVuZ3RoOiAzMiB9O1xuLyoqXG4gKiBAbmFtZSBjb21wYWN0VG9VOGFcbiAqIEBkZXNjcmlwdGlvbiBFbmNvZGVzIGEgbnVtYmVyIGludG8gYSBjb21wYWN0IHJlcHJlc2VudGF0aW9uXG4gKiBAZXhhbXBsZVxuICogPEJSPlxuICpcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGltcG9ydCB7IGNvbXBhY3RUb1U4YSB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbiAqXG4gKiBjb25zb2xlLmxvZyhjb21wYWN0VG9VOGEoNTExLCAzMikpOyAvLyBVaW50OEFycmF5KFswYjExMTExMTAxLCAwYjAwMDAwMTExXSlcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gY29tcGFjdFRvVThhKHZhbHVlKSB7XG4gICAgY29uc3QgYm4gPSBiblRvQm4odmFsdWUpO1xuICAgIGlmIChibi5sdGUoTUFYX1U4KSkge1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoW2JuLnRvTnVtYmVyKCkgPDwgMl0pO1xuICAgIH1cbiAgICBlbHNlIGlmIChibi5sdGUoTUFYX1UxNikpIHtcbiAgICAgICAgcmV0dXJuIGJuVG9VOGEoYm4uc2hsbigyKS5pYWRkKEJOX09ORSksIEJMXzE2KTtcbiAgICB9XG4gICAgZWxzZSBpZiAoYm4ubHRlKE1BWF9VMzIpKSB7XG4gICAgICAgIHJldHVybiBiblRvVThhKGJuLnNobG4oMikuaWFkZChCTl9UV08pLCBCTF8zMik7XG4gICAgfVxuICAgIGNvbnN0IHU4YSA9IGJuVG9VOGEoYm4pO1xuICAgIGxldCBsZW5ndGggPSB1OGEubGVuZ3RoO1xuICAgIC8vIGFkanVzdCB0byB0aGUgbWluaW11bSBudW1iZXIgb2YgYnl0ZXNcbiAgICB3aGlsZSAodThhW2xlbmd0aCAtIDFdID09PSAwKSB7XG4gICAgICAgIGxlbmd0aC0tO1xuICAgIH1cbiAgICBpZiAobGVuZ3RoIDwgNCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgbGVuZ3RoLCBwcmV2aW91cyBjaGVja3MgbWF0Y2ggYW55dGhpbmcgbGVzcyB0aGFuIDJeMzAnKTtcbiAgICB9XG4gICAgcmV0dXJuIHU4YUNvbmNhdFN0cmljdChbXG4gICAgICAgIC8vIHN1YnRyYWN0IDQgYXMgbWluaW11bSAoYWxzbyBjYXRlcmVkIGZvciBpbiBkZWNvZGluZylcbiAgICAgICAgbmV3IFVpbnQ4QXJyYXkoWygobGVuZ3RoIC0gNCkgPDwgMikgKyAwYjExXSksXG4gICAgICAgIHU4YS5zdWJhcnJheSgwLCBsZW5ndGgpXG4gICAgXSk7XG59XG4iXSwibmFtZXMiOlsiQk4iLCJCTl9PTkUiLCJCTl9UV08iLCJiblRvQm4iLCJiblRvVThhIiwidThhQ29uY2F0U3RyaWN0IiwiTUFYX1U4IiwicG93IiwiaXN1YiIsIk1BWF9VMTYiLCJNQVhfVTMyIiwiQkxfMTYiLCJiaXRMZW5ndGgiLCJCTF8zMiIsImNvbXBhY3RUb1U4YSIsInZhbHVlIiwiYm4iLCJsdGUiLCJVaW50OEFycmF5IiwidG9OdW1iZXIiLCJzaGxuIiwiaWFkZCIsInU4YSIsImxlbmd0aCIsIkVycm9yIiwic3ViYXJyYXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/compact/toU8a.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/detectPackage.js":
/*!******************************************************!*\
  !*** ./node_modules/@polkadot/util/detectPackage.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POLKADOTJS_DISABLE_ESM_CJS_WARNING_FLAG: function() { return /* binding */ POLKADOTJS_DISABLE_ESM_CJS_WARNING_FLAG; },\n/* harmony export */   detectPackage: function() { return /* binding */ detectPackage; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/x-global */ \"(app-pages-browser)/./node_modules/@polkadot/x-global/index.js\");\n/* harmony import */ var _is_function_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is/function.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/function.js\");\n\n\nconst DEDUPE = \"Either remove and explicitly install matching versions or dedupe using your package manager.\\nThe following conflicting packages were found:\";\nconst POLKADOTJS_DISABLE_ESM_CJS_WARNING_FLAG = \"POLKADOTJS_DISABLE_ESM_CJS_WARNING\";\n/** @internal */ function getEntry(name) {\n    const _global = _polkadot_x_global__WEBPACK_IMPORTED_MODULE_0__.xglobal;\n    if (!_global.__polkadotjs) {\n        _global.__polkadotjs = {};\n    }\n    if (!_global.__polkadotjs[name]) {\n        _global.__polkadotjs[name] = [];\n    }\n    return _global.__polkadotjs[name];\n}\n/** @internal */ function formatDisplay(all, fmt) {\n    let max = 0;\n    for(let i = 0, count = all.length; i < count; i++){\n        max = Math.max(max, all[i].version.length);\n    }\n    return all.map((d)=>\"\t\".concat(fmt(d.version.padEnd(max), d).join(\"\t\"))).join(\"\\n\");\n}\n/** @internal */ function formatInfo(version, param) {\n    let { name } = param;\n    return [\n        version,\n        name\n    ];\n}\n/** @internal */ function formatVersion(version, param) {\n    let { path, type } = param;\n    let extracted;\n    if (path && path.length >= 5) {\n        const nmIndex = path.indexOf(\"node_modules\");\n        extracted = nmIndex === -1 ? path : path.substring(nmIndex);\n    } else {\n        extracted = \"<unknown>\";\n    }\n    return [\n        \"\".concat(\"\".concat(type || \"\").padStart(3), \" \").concat(version),\n        extracted\n    ];\n}\n/** @internal */ function getPath(infoPath, pathOrFn) {\n    if (infoPath) {\n        return infoPath;\n    } else if ((0,_is_function_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(pathOrFn)) {\n        try {\n            return pathOrFn() || \"\";\n        } catch (e) {\n            return \"\";\n        }\n    }\n    return pathOrFn || \"\";\n}\n/** @internal */ function warn(pre, all, fmt) {\n    console.warn(\"\".concat(pre, \"\\n\").concat(DEDUPE, \"\\n\").concat(formatDisplay(all, fmt)));\n}\n/**\n * @name detectPackage\n * @summary Checks that a specific package is only imported once\n * @description A `@polkadot/*` version detection utility, checking for one occurrence of a package in addition to checking for dependency versions.\n */ function detectPackage(param, pathOrFn) {\n    let { name, path, type, version } = param, deps = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];\n    var _xglobal_process_env, _xglobal_process;\n    if (!name.startsWith(\"@polkadot\")) {\n        throw new Error(\"Invalid package descriptor \".concat(name));\n    }\n    const entry = getEntry(name);\n    entry.push({\n        path: getPath(path, pathOrFn),\n        type,\n        version\n    });\n    // if we have more than one entry at DIFFERENT version types then warn. If there is\n    // more than one entry at the same version and ESM/CJS dual warnings are disabled,\n    // then do not display warnings\n    const entriesSameVersion = entry.every((e)=>e.version === version);\n    const esmCjsWarningDisabled = ((_xglobal_process = _polkadot_x_global__WEBPACK_IMPORTED_MODULE_0__.xglobal.process) === null || _xglobal_process === void 0 ? void 0 : (_xglobal_process_env = _xglobal_process.env) === null || _xglobal_process_env === void 0 ? void 0 : _xglobal_process_env[POLKADOTJS_DISABLE_ESM_CJS_WARNING_FLAG]) === \"1\";\n    const multipleEntries = entry.length !== 1;\n    const disableWarnings = esmCjsWarningDisabled && entriesSameVersion;\n    if (multipleEntries && !disableWarnings) {\n        warn(\"\".concat(name, \" has multiple versions, ensure that there is only one installed.\"), entry, formatVersion);\n    } else {\n        const mismatches = deps.filter((d)=>d && d.version !== version);\n        if (mismatches.length) {\n            warn(\"\".concat(name, \" requires direct dependencies exactly matching version \").concat(version, \".\"), mismatches, formatInfo);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/detectPackage.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/format/formatDate.js":
/*!**********************************************************!*\
  !*** ./node_modules/@polkadot/util/format/formatDate.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatDate: function() { return /* binding */ formatDate; }\n/* harmony export */ });\n/** @internal */ function zeroPad(value) {\n    return value.toString().padStart(2, \"0\");\n}\n/**\n * @name formatDate\n * @description Formats a date in CCYY-MM-DD HH:MM:SS format\n */ function formatDate(date) {\n    const year = date.getFullYear().toString();\n    const month = zeroPad(date.getMonth() + 1);\n    const day = zeroPad(date.getDate());\n    const hour = zeroPad(date.getHours());\n    const minute = zeroPad(date.getMinutes());\n    const second = zeroPad(date.getSeconds());\n    return \"\".concat(year, \"-\").concat(month, \"-\").concat(day, \" \").concat(hour, \":\").concat(minute, \":\").concat(second);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9mb3JtYXQvZm9ybWF0RGF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYyxHQUNkLFNBQVNBLFFBQVFDLEtBQUs7SUFDbEIsT0FBT0EsTUFBTUMsUUFBUSxHQUFHQyxRQUFRLENBQUMsR0FBRztBQUN4QztBQUNBOzs7Q0FHQyxHQUNNLFNBQVNDLFdBQVdDLElBQUk7SUFDM0IsTUFBTUMsT0FBT0QsS0FBS0UsV0FBVyxHQUFHTCxRQUFRO0lBQ3hDLE1BQU1NLFFBQVFSLFFBQVNLLEtBQUtJLFFBQVEsS0FBSztJQUN6QyxNQUFNQyxNQUFNVixRQUFRSyxLQUFLTSxPQUFPO0lBQ2hDLE1BQU1DLE9BQU9aLFFBQVFLLEtBQUtRLFFBQVE7SUFDbEMsTUFBTUMsU0FBU2QsUUFBUUssS0FBS1UsVUFBVTtJQUN0QyxNQUFNQyxTQUFTaEIsUUFBUUssS0FBS1ksVUFBVTtJQUN0QyxPQUFPLEdBQVdULE9BQVJGLE1BQUssS0FBWUksT0FBVEYsT0FBTSxLQUFVSSxPQUFQRixLQUFJLEtBQVdJLE9BQVJGLE1BQUssS0FBYUksT0FBVkYsUUFBTyxLQUFVLE9BQVBFO0FBQ3hEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9mb3JtYXQvZm9ybWF0RGF0ZS5qcz9mNjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBAaW50ZXJuYWwgKi9cbmZ1bmN0aW9uIHplcm9QYWQodmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpO1xufVxuLyoqXG4gKiBAbmFtZSBmb3JtYXREYXRlXG4gKiBAZGVzY3JpcHRpb24gRm9ybWF0cyBhIGRhdGUgaW4gQ0NZWS1NTS1ERCBISDpNTTpTUyBmb3JtYXRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdERhdGUoZGF0ZSkge1xuICAgIGNvbnN0IHllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCkudG9TdHJpbmcoKTtcbiAgICBjb25zdCBtb250aCA9IHplcm9QYWQoKGRhdGUuZ2V0TW9udGgoKSArIDEpKTtcbiAgICBjb25zdCBkYXkgPSB6ZXJvUGFkKGRhdGUuZ2V0RGF0ZSgpKTtcbiAgICBjb25zdCBob3VyID0gemVyb1BhZChkYXRlLmdldEhvdXJzKCkpO1xuICAgIGNvbnN0IG1pbnV0ZSA9IHplcm9QYWQoZGF0ZS5nZXRNaW51dGVzKCkpO1xuICAgIGNvbnN0IHNlY29uZCA9IHplcm9QYWQoZGF0ZS5nZXRTZWNvbmRzKCkpO1xuICAgIHJldHVybiBgJHt5ZWFyfS0ke21vbnRofS0ke2RheX0gJHtob3VyfToke21pbnV0ZX06JHtzZWNvbmR9YDtcbn1cbiJdLCJuYW1lcyI6WyJ6ZXJvUGFkIiwidmFsdWUiLCJ0b1N0cmluZyIsInBhZFN0YXJ0IiwiZm9ybWF0RGF0ZSIsImRhdGUiLCJ5ZWFyIiwiZ2V0RnVsbFllYXIiLCJtb250aCIsImdldE1vbnRoIiwiZGF5IiwiZ2V0RGF0ZSIsImhvdXIiLCJnZXRIb3VycyIsIm1pbnV0ZSIsImdldE1pbnV0ZXMiLCJzZWNvbmQiLCJnZXRTZWNvbmRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/format/formatDate.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/has.js":
/*!********************************************!*\
  !*** ./node_modules/@polkadot/util/has.js ***!
  \********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasBigInt: function() { return /* binding */ hasBigInt; },\n/* harmony export */   hasBuffer: function() { return /* binding */ hasBuffer; },\n/* harmony export */   hasCjs: function() { return /* binding */ hasCjs; },\n/* harmony export */   hasDirname: function() { return /* binding */ hasDirname; },\n/* harmony export */   hasEsm: function() { return /* binding */ hasEsm; },\n/* harmony export */   hasProcess: function() { return /* binding */ hasProcess; },\n/* harmony export */   hasWasm: function() { return /* binding */ hasWasm; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/x-bigint */ \"(app-pages-browser)/./node_modules/@polkadot/util/node_modules/@polkadot/x-bigint/index.js\");\n/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/x-global */ \"(app-pages-browser)/./node_modules/@polkadot/x-global/index.js\");\n\n\n/** true if the environment has proper BigInt support */ const hasBigInt = typeof _polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt === \"function\" && typeof _polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt.asIntN === \"function\";\n/** true if the environment is CJS */ const hasCjs = typeof require === \"function\" && typeof module !== \"undefined\";\n/** true if the environment has __dirname available */ const hasDirname = typeof __dirname !== \"undefined\";\n/** true if the environment is ESM */ const hasEsm = !hasCjs;\n/** true if the environment has WebAssembly available */ const hasWasm = typeof WebAssembly !== \"undefined\";\n/** true if the environment has support for Buffer (typically Node.js) */ const hasBuffer = typeof _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.Buffer === \"function\" && typeof _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.Buffer.isBuffer === \"function\";\n/** true if the environment has process available (typically Node.js) */ const hasProcess = typeof _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.process === \"object\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9oYXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQTRDO0FBQ0M7QUFDN0Msc0RBQXNELEdBQy9DLE1BQU1FLFlBQVksT0FBT0Ysc0RBQU1BLEtBQUssY0FBYyxPQUFPQSxzREFBTUEsQ0FBQ0csTUFBTSxLQUFLLFdBQVc7QUFDN0YsbUNBQW1DLEdBQzVCLE1BQU1DLFNBQVMsT0FBT0MsWUFBWSxjQUFjLE9BQU9DLFdBQVcsWUFBWTtBQUNyRixvREFBb0QsR0FDN0MsTUFBTUMsYUFBYSxPQUFPQyxjQUFjLFlBQVk7QUFDM0QsbUNBQW1DLEdBQzVCLE1BQU1DLFNBQVMsQ0FBQ0wsT0FBTztBQUM5QixzREFBc0QsR0FDL0MsTUFBTU0sVUFBVSxPQUFPQyxnQkFBZ0IsWUFBWTtBQUMxRCx1RUFBdUUsR0FDaEUsTUFBTUMsWUFBWSxPQUFPWCx1REFBT0EsQ0FBQ1ksTUFBTSxLQUFLLGNBQWMsT0FBT1osdURBQU9BLENBQUNZLE1BQU0sQ0FBQ0MsUUFBUSxLQUFLLFdBQVc7QUFDL0csc0VBQXNFLEdBQy9ELE1BQU1DLGFBQWEsT0FBT2QsdURBQU9BLENBQUNlLE9BQU8sS0FBSyxTQUFTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9oYXMuanM/M2I1NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCaWdJbnQgfSBmcm9tICdAcG9sa2Fkb3QveC1iaWdpbnQnO1xuaW1wb3J0IHsgeGdsb2JhbCB9IGZyb20gJ0Bwb2xrYWRvdC94LWdsb2JhbCc7XG4vKiogdHJ1ZSBpZiB0aGUgZW52aXJvbm1lbnQgaGFzIHByb3BlciBCaWdJbnQgc3VwcG9ydCAqL1xuZXhwb3J0IGNvbnN0IGhhc0JpZ0ludCA9IHR5cGVvZiBCaWdJbnQgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIEJpZ0ludC5hc0ludE4gPT09ICdmdW5jdGlvbic7XG4vKiogdHJ1ZSBpZiB0aGUgZW52aXJvbm1lbnQgaXMgQ0pTICovXG5leHBvcnQgY29uc3QgaGFzQ2pzID0gdHlwZW9mIHJlcXVpcmUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCc7XG4vKiogdHJ1ZSBpZiB0aGUgZW52aXJvbm1lbnQgaGFzIF9fZGlybmFtZSBhdmFpbGFibGUgKi9cbmV4cG9ydCBjb25zdCBoYXNEaXJuYW1lID0gdHlwZW9mIF9fZGlybmFtZSAhPT0gJ3VuZGVmaW5lZCc7XG4vKiogdHJ1ZSBpZiB0aGUgZW52aXJvbm1lbnQgaXMgRVNNICovXG5leHBvcnQgY29uc3QgaGFzRXNtID0gIWhhc0Nqcztcbi8qKiB0cnVlIGlmIHRoZSBlbnZpcm9ubWVudCBoYXMgV2ViQXNzZW1ibHkgYXZhaWxhYmxlICovXG5leHBvcnQgY29uc3QgaGFzV2FzbSA9IHR5cGVvZiBXZWJBc3NlbWJseSAhPT0gJ3VuZGVmaW5lZCc7XG4vKiogdHJ1ZSBpZiB0aGUgZW52aXJvbm1lbnQgaGFzIHN1cHBvcnQgZm9yIEJ1ZmZlciAodHlwaWNhbGx5IE5vZGUuanMpICovXG5leHBvcnQgY29uc3QgaGFzQnVmZmVyID0gdHlwZW9mIHhnbG9iYWwuQnVmZmVyID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiB4Z2xvYmFsLkJ1ZmZlci5pc0J1ZmZlciA9PT0gJ2Z1bmN0aW9uJztcbi8qKiB0cnVlIGlmIHRoZSBlbnZpcm9ubWVudCBoYXMgcHJvY2VzcyBhdmFpbGFibGUgKHR5cGljYWxseSBOb2RlLmpzKSAqL1xuZXhwb3J0IGNvbnN0IGhhc1Byb2Nlc3MgPSB0eXBlb2YgeGdsb2JhbC5wcm9jZXNzID09PSAnb2JqZWN0JztcbiJdLCJuYW1lcyI6WyJCaWdJbnQiLCJ4Z2xvYmFsIiwiaGFzQmlnSW50IiwiYXNJbnROIiwiaGFzQ2pzIiwicmVxdWlyZSIsIm1vZHVsZSIsImhhc0Rpcm5hbWUiLCJfX2Rpcm5hbWUiLCJoYXNFc20iLCJoYXNXYXNtIiwiV2ViQXNzZW1ibHkiLCJoYXNCdWZmZXIiLCJCdWZmZXIiLCJpc0J1ZmZlciIsImhhc1Byb2Nlc3MiLCJwcm9jZXNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/has.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/hex/stripPrefix.js":
/*!********************************************************!*\
  !*** ./node_modules/@polkadot/util/hex/stripPrefix.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hexStripPrefix: function() { return /* binding */ hexStripPrefix; }\n/* harmony export */ });\n/* harmony import */ var _is_hex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../is/hex.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/hex.js\");\n\n/**\n * @name hexStripPrefix\n * @summary Strips any leading `0x` prefix.\n * @description\n * Tests for the existence of a `0x` prefix, and returns the value without the prefix. Un-prefixed values are returned as-is.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexStripPrefix } from '@polkadot/util';\n *\n * console.log('stripped', hexStripPrefix('0x1234')); // => 1234\n * ```\n */ function hexStripPrefix(value) {\n    if (!value || value === \"0x\") {\n        return \"\";\n    } else if (_is_hex_js__WEBPACK_IMPORTED_MODULE_0__.REGEX_HEX_PREFIXED.test(value)) {\n        return value.substring(2);\n    } else if (_is_hex_js__WEBPACK_IMPORTED_MODULE_0__.REGEX_HEX_NOPREFIX.test(value)) {\n        return value;\n    }\n    throw new Error(\"Expected hex value to convert, found '\".concat(value, \"'\"));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9oZXgvc3RyaXBQcmVmaXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0U7QUFDdEU7Ozs7Ozs7Ozs7Ozs7Q0FhQyxHQUNNLFNBQVNFLGVBQWVDLEtBQUs7SUFDaEMsSUFBSSxDQUFDQSxTQUFTQSxVQUFVLE1BQU07UUFDMUIsT0FBTztJQUNYLE9BQ0ssSUFBSUYsMERBQWtCQSxDQUFDRyxJQUFJLENBQUNELFFBQVE7UUFDckMsT0FBT0EsTUFBTUUsU0FBUyxDQUFDO0lBQzNCLE9BQ0ssSUFBSUwsMERBQWtCQSxDQUFDSSxJQUFJLENBQUNELFFBQVE7UUFDckMsT0FBT0E7SUFDWDtJQUNBLE1BQU0sSUFBSUcsTUFBTSx5Q0FBK0MsT0FBTkgsT0FBTTtBQUNuRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvaGV4L3N0cmlwUHJlZml4LmpzP2U3NWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUkVHRVhfSEVYX05PUFJFRklYLCBSRUdFWF9IRVhfUFJFRklYRUQgfSBmcm9tICcuLi9pcy9oZXguanMnO1xuLyoqXG4gKiBAbmFtZSBoZXhTdHJpcFByZWZpeFxuICogQHN1bW1hcnkgU3RyaXBzIGFueSBsZWFkaW5nIGAweGAgcHJlZml4LlxuICogQGRlc2NyaXB0aW9uXG4gKiBUZXN0cyBmb3IgdGhlIGV4aXN0ZW5jZSBvZiBhIGAweGAgcHJlZml4LCBhbmQgcmV0dXJucyB0aGUgdmFsdWUgd2l0aG91dCB0aGUgcHJlZml4LiBVbi1wcmVmaXhlZCB2YWx1ZXMgYXJlIHJldHVybmVkIGFzLWlzLlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyBoZXhTdHJpcFByZWZpeCB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbiAqXG4gKiBjb25zb2xlLmxvZygnc3RyaXBwZWQnLCBoZXhTdHJpcFByZWZpeCgnMHgxMjM0JykpOyAvLyA9PiAxMjM0XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhleFN0cmlwUHJlZml4KHZhbHVlKSB7XG4gICAgaWYgKCF2YWx1ZSB8fCB2YWx1ZSA9PT0gJzB4Jykge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgfVxuICAgIGVsc2UgaWYgKFJFR0VYX0hFWF9QUkVGSVhFRC50ZXN0KHZhbHVlKSkge1xuICAgICAgICByZXR1cm4gdmFsdWUuc3Vic3RyaW5nKDIpO1xuICAgIH1cbiAgICBlbHNlIGlmIChSRUdFWF9IRVhfTk9QUkVGSVgudGVzdCh2YWx1ZSkpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoYEV4cGVjdGVkIGhleCB2YWx1ZSB0byBjb252ZXJ0LCBmb3VuZCAnJHt2YWx1ZX0nYCk7XG59XG4iXSwibmFtZXMiOlsiUkVHRVhfSEVYX05PUFJFRklYIiwiUkVHRVhfSEVYX1BSRUZJWEVEIiwiaGV4U3RyaXBQcmVmaXgiLCJ2YWx1ZSIsInRlc3QiLCJzdWJzdHJpbmciLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/hex/stripPrefix.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/hex/toBigInt.js":
/*!*****************************************************!*\
  !*** ./node_modules/@polkadot/util/hex/toBigInt.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hexToBigInt: function() { return /* binding */ hexToBigInt; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/x-bigint */ \"(app-pages-browser)/./node_modules/@polkadot/util/node_modules/@polkadot/x-bigint/index.js\");\n/* harmony import */ var _u8a_toBigInt_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../u8a/toBigInt.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toBigInt.js\");\n/* harmony import */ var _toU8a_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./toU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/hex/toU8a.js\");\n\n\n\n/**\n * @name hexToBigInt\n * @summary Creates a BigInt instance object from a hex string.\n */ function hexToBigInt(value) {\n    let { isLe = false, isNegative = false } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    return !value || value === \"0x\" ? (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(0) : (0,_u8a_toBigInt_js__WEBPACK_IMPORTED_MODULE_1__.u8aToBigInt)((0,_toU8a_js__WEBPACK_IMPORTED_MODULE_2__.hexToU8a)(value), {\n        isLe,\n        isNegative\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9oZXgvdG9CaWdJbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE0QztBQUNLO0FBQ1g7QUFDdEM7OztDQUdDLEdBQ00sU0FBU0csWUFBWUMsS0FBSztRQUFFLEVBQUVDLE9BQU8sS0FBSyxFQUFFQyxhQUFhLEtBQUssRUFBRSxHQUFwQyxpRUFBdUMsQ0FBQztJQUN2RSxPQUFPLENBQUNGLFNBQVNBLFVBQVUsT0FDckJKLDBEQUFNQSxDQUFDLEtBQ1BDLDZEQUFXQSxDQUFDQyxtREFBUUEsQ0FBQ0UsUUFBUTtRQUFFQztRQUFNQztJQUFXO0FBQzFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9oZXgvdG9CaWdJbnQuanM/MzM4YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCaWdJbnQgfSBmcm9tICdAcG9sa2Fkb3QveC1iaWdpbnQnO1xuaW1wb3J0IHsgdThhVG9CaWdJbnQgfSBmcm9tICcuLi91OGEvdG9CaWdJbnQuanMnO1xuaW1wb3J0IHsgaGV4VG9VOGEgfSBmcm9tICcuL3RvVThhLmpzJztcbi8qKlxuICogQG5hbWUgaGV4VG9CaWdJbnRcbiAqIEBzdW1tYXJ5IENyZWF0ZXMgYSBCaWdJbnQgaW5zdGFuY2Ugb2JqZWN0IGZyb20gYSBoZXggc3RyaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaGV4VG9CaWdJbnQodmFsdWUsIHsgaXNMZSA9IGZhbHNlLCBpc05lZ2F0aXZlID0gZmFsc2UgfSA9IHt9KSB7XG4gICAgcmV0dXJuICF2YWx1ZSB8fCB2YWx1ZSA9PT0gJzB4J1xuICAgICAgICA/IEJpZ0ludCgwKVxuICAgICAgICA6IHU4YVRvQmlnSW50KGhleFRvVThhKHZhbHVlKSwgeyBpc0xlLCBpc05lZ2F0aXZlIH0pO1xufVxuIl0sIm5hbWVzIjpbIkJpZ0ludCIsInU4YVRvQmlnSW50IiwiaGV4VG9VOGEiLCJoZXhUb0JpZ0ludCIsInZhbHVlIiwiaXNMZSIsImlzTmVnYXRpdmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/hex/toBigInt.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/hex/toBn.js":
/*!*************************************************!*\
  !*** ./node_modules/@polkadot/util/hex/toBn.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hexToBn: function() { return /* binding */ hexToBn; }\n/* harmony export */ });\n/* harmony import */ var _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bn/bn.js */ \"(app-pages-browser)/./node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var _stripPrefix_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stripPrefix.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/hex/stripPrefix.js\");\n\n\n/**\n * @name hexToBn\n * @summary Creates a BN.js object from a hex string.\n * @description\n * `null` inputs returns a `BN(0)` result. Hex input values return the actual value converted to a BN. Anything that is not a hex string (including the `0x` prefix) throws an error.\n * @param _value The value to convert\n * @param _options Options to pass while converting\n * @param _options.isLe Convert using Little Endian\n * @param _options.isNegative Convert using two's complement\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexToBn } from '@polkadot/util';\n *\n * hexToBn('0x123480001f'); // => BN(0x123480001f)\n * ```\n */ function hexToBn(value) {\n    let { isLe = false, isNegative = false } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    if (!value || value === \"0x\") {\n        return new _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__(0);\n    }\n    const stripped = (0,_stripPrefix_js__WEBPACK_IMPORTED_MODULE_1__.hexStripPrefix)(value);\n    const bn = new _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__(stripped, 16, isLe ? \"le\" : \"be\");\n    // fromTwos takes as parameter the number of bits, which is the hex length\n    // multiplied by 4 (2 bytes being 8 bits)\n    return isNegative ? bn.fromTwos(stripped.length * 4) : bn;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9oZXgvdG9Cbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBaUM7QUFDaUI7QUFDbEQ7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBaUJDLEdBQ00sU0FBU0UsUUFBUUMsS0FBSztRQUFFLEVBQUVDLE9BQU8sS0FBSyxFQUFFQyxhQUFhLEtBQUssRUFBRSxHQUFwQyxpRUFBdUMsQ0FBQztJQUNuRSxJQUFJLENBQUNGLFNBQVNBLFVBQVUsTUFBTTtRQUMxQixPQUFPLElBQUlILHNDQUFFQSxDQUFDO0lBQ2xCO0lBQ0EsTUFBTU0sV0FBV0wsK0RBQWNBLENBQUNFO0lBQ2hDLE1BQU1JLEtBQUssSUFBSVAsc0NBQUVBLENBQUNNLFVBQVUsSUFBSUYsT0FBTyxPQUFPO0lBQzlDLDBFQUEwRTtJQUMxRSx5Q0FBeUM7SUFDekMsT0FBT0MsYUFDREUsR0FBR0MsUUFBUSxDQUFDRixTQUFTRyxNQUFNLEdBQUcsS0FDOUJGO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsL2hleC90b0JuLmpzP2M2M2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQk4gfSBmcm9tICcuLi9ibi9ibi5qcyc7XG5pbXBvcnQgeyBoZXhTdHJpcFByZWZpeCB9IGZyb20gJy4vc3RyaXBQcmVmaXguanMnO1xuLyoqXG4gKiBAbmFtZSBoZXhUb0JuXG4gKiBAc3VtbWFyeSBDcmVhdGVzIGEgQk4uanMgb2JqZWN0IGZyb20gYSBoZXggc3RyaW5nLlxuICogQGRlc2NyaXB0aW9uXG4gKiBgbnVsbGAgaW5wdXRzIHJldHVybnMgYSBgQk4oMClgIHJlc3VsdC4gSGV4IGlucHV0IHZhbHVlcyByZXR1cm4gdGhlIGFjdHVhbCB2YWx1ZSBjb252ZXJ0ZWQgdG8gYSBCTi4gQW55dGhpbmcgdGhhdCBpcyBub3QgYSBoZXggc3RyaW5nIChpbmNsdWRpbmcgdGhlIGAweGAgcHJlZml4KSB0aHJvd3MgYW4gZXJyb3IuXG4gKiBAcGFyYW0gX3ZhbHVlIFRoZSB2YWx1ZSB0byBjb252ZXJ0XG4gKiBAcGFyYW0gX29wdGlvbnMgT3B0aW9ucyB0byBwYXNzIHdoaWxlIGNvbnZlcnRpbmdcbiAqIEBwYXJhbSBfb3B0aW9ucy5pc0xlIENvbnZlcnQgdXNpbmcgTGl0dGxlIEVuZGlhblxuICogQHBhcmFtIF9vcHRpb25zLmlzTmVnYXRpdmUgQ29udmVydCB1c2luZyB0d28ncyBjb21wbGVtZW50XG4gKiBAZXhhbXBsZVxuICogPEJSPlxuICpcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGltcG9ydCB7IGhleFRvQm4gfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG4gKlxuICogaGV4VG9CbignMHgxMjM0ODAwMDFmJyk7IC8vID0+IEJOKDB4MTIzNDgwMDAxZilcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gaGV4VG9Cbih2YWx1ZSwgeyBpc0xlID0gZmFsc2UsIGlzTmVnYXRpdmUgPSBmYWxzZSB9ID0ge30pIHtcbiAgICBpZiAoIXZhbHVlIHx8IHZhbHVlID09PSAnMHgnKSB7XG4gICAgICAgIHJldHVybiBuZXcgQk4oMCk7XG4gICAgfVxuICAgIGNvbnN0IHN0cmlwcGVkID0gaGV4U3RyaXBQcmVmaXgodmFsdWUpO1xuICAgIGNvbnN0IGJuID0gbmV3IEJOKHN0cmlwcGVkLCAxNiwgaXNMZSA/ICdsZScgOiAnYmUnKTtcbiAgICAvLyBmcm9tVHdvcyB0YWtlcyBhcyBwYXJhbWV0ZXIgdGhlIG51bWJlciBvZiBiaXRzLCB3aGljaCBpcyB0aGUgaGV4IGxlbmd0aFxuICAgIC8vIG11bHRpcGxpZWQgYnkgNCAoMiBieXRlcyBiZWluZyA4IGJpdHMpXG4gICAgcmV0dXJuIGlzTmVnYXRpdmVcbiAgICAgICAgPyBibi5mcm9tVHdvcyhzdHJpcHBlZC5sZW5ndGggKiA0KVxuICAgICAgICA6IGJuO1xufVxuIl0sIm5hbWVzIjpbIkJOIiwiaGV4U3RyaXBQcmVmaXgiLCJoZXhUb0JuIiwidmFsdWUiLCJpc0xlIiwiaXNOZWdhdGl2ZSIsInN0cmlwcGVkIiwiYm4iLCJmcm9tVHdvcyIsImxlbmd0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/hex/toBn.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/is/bigInt.js":
/*!**************************************************!*\
  !*** ./node_modules/@polkadot/util/is/bigInt.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBigInt: function() { return /* binding */ isBigInt; }\n/* harmony export */ });\n/**\n * @name isBigInt\n * @summary Tests for a `BigInt` object instance.\n * @description\n * Checks to see if the input object is an instance of `BigInt`\n * @example\n * <BR>\n *\n * ```javascript\n * import { isBigInt } from '@polkadot/util';\n *\n * console.log('isBigInt', isBigInt(123_456n)); // => true\n * ```\n */ function isBigInt(value) {\n    return typeof value === \"bigint\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9pcy9iaWdJbnQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Ozs7Ozs7Ozs7O0NBYUMsR0FDTSxTQUFTQSxTQUFTQyxLQUFLO0lBQzFCLE9BQU8sT0FBT0EsVUFBVTtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvaXMvYmlnSW50LmpzPzBiNDQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbmFtZSBpc0JpZ0ludFxuICogQHN1bW1hcnkgVGVzdHMgZm9yIGEgYEJpZ0ludGAgb2JqZWN0IGluc3RhbmNlLlxuICogQGRlc2NyaXB0aW9uXG4gKiBDaGVja3MgdG8gc2VlIGlmIHRoZSBpbnB1dCBvYmplY3QgaXMgYW4gaW5zdGFuY2Ugb2YgYEJpZ0ludGBcbiAqIEBleGFtcGxlXG4gKiA8QlI+XG4gKlxuICogYGBgamF2YXNjcmlwdFxuICogaW1wb3J0IHsgaXNCaWdJbnQgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG4gKlxuICogY29uc29sZS5sb2coJ2lzQmlnSW50JywgaXNCaWdJbnQoMTIzXzQ1Nm4pKTsgLy8gPT4gdHJ1ZVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0JpZ0ludCh2YWx1ZSkge1xuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdiaWdpbnQnO1xufVxuIl0sIm5hbWVzIjpbImlzQmlnSW50IiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/is/bigInt.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/is/bn.js":
/*!**********************************************!*\
  !*** ./node_modules/@polkadot/util/is/bn.js ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBn: function() { return /* binding */ isBn; }\n/* harmony export */ });\n/* harmony import */ var _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bn/bn.js */ \"(app-pages-browser)/./node_modules/bn.js/lib/bn.js\");\n\n/**\n * @name isBn\n * @summary Tests for a `BN` object instance.\n * @description\n * Checks to see if the input object is an instance of `BN` (bn.js).\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { isBn } from '@polkadot/util';\n *\n * console.log('isBn', isBn(new BN(1))); // => true\n * ```\n */ function isBn(value) {\n    return _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__.isBN(value);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9pcy9ibi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpQztBQUNqQzs7Ozs7Ozs7Ozs7Ozs7Q0FjQyxHQUNNLFNBQVNDLEtBQUtDLEtBQUs7SUFDdEIsT0FBT0YsMkNBQU8sQ0FBQ0U7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsL2lzL2JuLmpzP2NjNzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQk4gfSBmcm9tICcuLi9ibi9ibi5qcyc7XG4vKipcbiAqIEBuYW1lIGlzQm5cbiAqIEBzdW1tYXJ5IFRlc3RzIGZvciBhIGBCTmAgb2JqZWN0IGluc3RhbmNlLlxuICogQGRlc2NyaXB0aW9uXG4gKiBDaGVja3MgdG8gc2VlIGlmIHRoZSBpbnB1dCBvYmplY3QgaXMgYW4gaW5zdGFuY2Ugb2YgYEJOYCAoYm4uanMpLlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgQk4gZnJvbSAnYm4uanMnO1xuICogaW1wb3J0IHsgaXNCbiB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbiAqXG4gKiBjb25zb2xlLmxvZygnaXNCbicsIGlzQm4obmV3IEJOKDEpKSk7IC8vID0+IHRydWVcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNCbih2YWx1ZSkge1xuICAgIHJldHVybiBCTi5pc0JOKHZhbHVlKTtcbn1cbiJdLCJuYW1lcyI6WyJCTiIsImlzQm4iLCJ2YWx1ZSIsImlzQk4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/is/bn.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/is/buffer.js":
/*!**************************************************!*\
  !*** ./node_modules/@polkadot/util/is/buffer.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBuffer: function() { return /* binding */ isBuffer; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/x-global */ \"(app-pages-browser)/./node_modules/@polkadot/x-global/index.js\");\n/* harmony import */ var _has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../has.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/has.js\");\n/* harmony import */ var _function_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./function.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/function.js\");\n\n\n\n/**\n * @name isBuffer\n * @summary Tests for a `Buffer` object instance.\n * @description\n * Checks to see if the input object is an instance of `Buffer`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isBuffer } from '@polkadot/util';\n *\n * console.log('isBuffer', isBuffer(Buffer.from([]))); // => true\n * ```\n */ function isBuffer(value) {\n    // we do check a function first, since it is slightly faster than isBuffer itself\n    return _has_js__WEBPACK_IMPORTED_MODULE_0__.hasBuffer && !!value && (0,_function_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(value.readDoubleLE) && _polkadot_x_global__WEBPACK_IMPORTED_MODULE_2__.xglobal.Buffer.isBuffer(value);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9pcy9idWZmZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE2QztBQUNQO0FBQ0s7QUFDM0M7Ozs7Ozs7Ozs7Ozs7Q0FhQyxHQUNNLFNBQVNHLFNBQVNDLEtBQUs7SUFDMUIsaUZBQWlGO0lBQ2pGLE9BQU9ILDhDQUFTQSxJQUFJLENBQUMsQ0FBQ0csU0FBU0Ysd0RBQVVBLENBQUNFLE1BQU1DLFlBQVksS0FBS0wsdURBQU9BLENBQUNNLE1BQU0sQ0FBQ0gsUUFBUSxDQUFDQztBQUM3RiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvaXMvYnVmZmVyLmpzP2JkM2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgeGdsb2JhbCB9IGZyb20gJ0Bwb2xrYWRvdC94LWdsb2JhbCc7XG5pbXBvcnQgeyBoYXNCdWZmZXIgfSBmcm9tICcuLi9oYXMuanMnO1xuaW1wb3J0IHsgaXNGdW5jdGlvbiB9IGZyb20gJy4vZnVuY3Rpb24uanMnO1xuLyoqXG4gKiBAbmFtZSBpc0J1ZmZlclxuICogQHN1bW1hcnkgVGVzdHMgZm9yIGEgYEJ1ZmZlcmAgb2JqZWN0IGluc3RhbmNlLlxuICogQGRlc2NyaXB0aW9uXG4gKiBDaGVja3MgdG8gc2VlIGlmIHRoZSBpbnB1dCBvYmplY3QgaXMgYW4gaW5zdGFuY2Ugb2YgYEJ1ZmZlcmAuXG4gKiBAZXhhbXBsZVxuICogPEJSPlxuICpcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGltcG9ydCB7IGlzQnVmZmVyIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuICpcbiAqIGNvbnNvbGUubG9nKCdpc0J1ZmZlcicsIGlzQnVmZmVyKEJ1ZmZlci5mcm9tKFtdKSkpOyAvLyA9PiB0cnVlXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzQnVmZmVyKHZhbHVlKSB7XG4gICAgLy8gd2UgZG8gY2hlY2sgYSBmdW5jdGlvbiBmaXJzdCwgc2luY2UgaXQgaXMgc2xpZ2h0bHkgZmFzdGVyIHRoYW4gaXNCdWZmZXIgaXRzZWxmXG4gICAgcmV0dXJuIGhhc0J1ZmZlciAmJiAhIXZhbHVlICYmIGlzRnVuY3Rpb24odmFsdWUucmVhZERvdWJsZUxFKSAmJiB4Z2xvYmFsLkJ1ZmZlci5pc0J1ZmZlcih2YWx1ZSk7XG59XG4iXSwibmFtZXMiOlsieGdsb2JhbCIsImhhc0J1ZmZlciIsImlzRnVuY3Rpb24iLCJpc0J1ZmZlciIsInZhbHVlIiwicmVhZERvdWJsZUxFIiwiQnVmZmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/is/buffer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/is/function.js":
/*!****************************************************!*\
  !*** ./node_modules/@polkadot/util/is/function.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isFunction: function() { return /* binding */ isFunction; }\n/* harmony export */ });\n/**\n * @name isFunction\n * @summary Tests for a `function`.\n * @description\n * Checks to see if the input value is a JavaScript function.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isFunction } from '@polkadot/util';\n *\n * isFunction(() => false); // => true\n * ```\n */ function isFunction(value) {\n    return typeof value === \"function\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9pcy9mdW5jdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Q0FhQyxHQUNNLFNBQVNBLFdBQVdDLEtBQUs7SUFDNUIsT0FBTyxPQUFPQSxVQUFVO0FBQzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9pcy9mdW5jdGlvbi5qcz83ZTE0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG5hbWUgaXNGdW5jdGlvblxuICogQHN1bW1hcnkgVGVzdHMgZm9yIGEgYGZ1bmN0aW9uYC5cbiAqIEBkZXNjcmlwdGlvblxuICogQ2hlY2tzIHRvIHNlZSBpZiB0aGUgaW5wdXQgdmFsdWUgaXMgYSBKYXZhU2NyaXB0IGZ1bmN0aW9uLlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyBpc0Z1bmN0aW9uIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuICpcbiAqIGlzRnVuY3Rpb24oKCkgPT4gZmFsc2UpOyAvLyA9PiB0cnVlXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzRnVuY3Rpb24odmFsdWUpIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nO1xufVxuIl0sIm5hbWVzIjpbImlzRnVuY3Rpb24iLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/is/function.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/is/helpers.js":
/*!***************************************************!*\
  !*** ./node_modules/@polkadot/util/is/helpers.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isOn: function() { return /* binding */ isOn; },\n/* harmony export */   isOnFunction: function() { return /* binding */ isOnFunction; },\n/* harmony export */   isOnObject: function() { return /* binding */ isOnObject; }\n/* harmony export */ });\n/* harmony import */ var _function_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./function.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/function.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./object.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/object.js\");\n\n\nfunction isOn() {\n    for(var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++){\n        fns[_key] = arguments[_key];\n    }\n    return (value)=>((0,_object_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(value) || (0,_function_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(value)) && fns.every((f)=>(0,_function_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(value[f]));\n}\nfunction isOnFunction() {\n    for(var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++){\n        fns[_key] = arguments[_key];\n    }\n    return (value)=>(0,_function_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(value) && fns.every((f)=>(0,_function_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(value[f]));\n}\nfunction isOnObject() {\n    for(var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++){\n        fns[_key] = arguments[_key];\n    }\n    return (value)=>(0,_object_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(value) && fns.every((f)=>(0,_function_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(value[f]));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9pcy9oZWxwZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTJDO0FBQ0o7QUFDaEMsU0FBU0U7SUFBSztRQUFHQyxJQUFILHVCQUFNOztJQUN2QixPQUFPLENBQUNDLFFBQVUsQ0FBQ0gsb0RBQVFBLENBQUNHLFVBQVVKLHdEQUFVQSxDQUFDSSxNQUFLLEtBQ2xERCxJQUFJRSxLQUFLLENBQUMsQ0FBQ0MsSUFBTU4sd0RBQVVBLENBQUNJLEtBQUssQ0FBQ0UsRUFBRTtBQUM1QztBQUNPLFNBQVNDO0lBQWE7UUFBR0osSUFBSCx1QkFBTTs7SUFDL0IsT0FBTyxDQUFDQyxRQUFVSix3REFBVUEsQ0FBQ0ksVUFDekJELElBQUlFLEtBQUssQ0FBQyxDQUFDQyxJQUFNTix3REFBVUEsQ0FBQ0ksS0FBSyxDQUFDRSxFQUFFO0FBQzVDO0FBQ08sU0FBU0U7SUFBVztRQUFHTCxJQUFILHVCQUFNOztJQUM3QixPQUFPLENBQUNDLFFBQVVILG9EQUFRQSxDQUFDRyxVQUN2QkQsSUFBSUUsS0FBSyxDQUFDLENBQUNDLElBQU1OLHdEQUFVQSxDQUFDSSxLQUFLLENBQUNFLEVBQUU7QUFDNUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsL2lzL2hlbHBlcnMuanM/YmVmOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0Z1bmN0aW9uIH0gZnJvbSAnLi9mdW5jdGlvbi5qcyc7XG5pbXBvcnQgeyBpc09iamVjdCB9IGZyb20gJy4vb2JqZWN0LmpzJztcbmV4cG9ydCBmdW5jdGlvbiBpc09uKC4uLmZucykge1xuICAgIHJldHVybiAodmFsdWUpID0+IChpc09iamVjdCh2YWx1ZSkgfHwgaXNGdW5jdGlvbih2YWx1ZSkpICYmXG4gICAgICAgIGZucy5ldmVyeSgoZikgPT4gaXNGdW5jdGlvbih2YWx1ZVtmXSkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzT25GdW5jdGlvbiguLi5mbnMpIHtcbiAgICByZXR1cm4gKHZhbHVlKSA9PiBpc0Z1bmN0aW9uKHZhbHVlKSAmJlxuICAgICAgICBmbnMuZXZlcnkoKGYpID0+IGlzRnVuY3Rpb24odmFsdWVbZl0pKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc09uT2JqZWN0KC4uLmZucykge1xuICAgIHJldHVybiAodmFsdWUpID0+IGlzT2JqZWN0KHZhbHVlKSAmJlxuICAgICAgICBmbnMuZXZlcnkoKGYpID0+IGlzRnVuY3Rpb24odmFsdWVbZl0pKTtcbn1cbiJdLCJuYW1lcyI6WyJpc0Z1bmN0aW9uIiwiaXNPYmplY3QiLCJpc09uIiwiZm5zIiwidmFsdWUiLCJldmVyeSIsImYiLCJpc09uRnVuY3Rpb24iLCJpc09uT2JqZWN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/is/helpers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/is/hex.js":
/*!***********************************************!*\
  !*** ./node_modules/@polkadot/util/is/hex.js ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   REGEX_HEX_NOPREFIX: function() { return /* binding */ REGEX_HEX_NOPREFIX; },\n/* harmony export */   REGEX_HEX_PREFIXED: function() { return /* binding */ REGEX_HEX_PREFIXED; },\n/* harmony export */   isHex: function() { return /* binding */ isHex; }\n/* harmony export */ });\nconst REGEX_HEX_PREFIXED = /^0x[\\da-fA-F]+$/;\nconst REGEX_HEX_NOPREFIX = /^[\\da-fA-F]+$/;\n/**\n * @name isHex\n * @summary Tests for a hex string.\n * @description\n * Checks to see if the input value is a `0x` prefixed hex string. Optionally (`bitLength` !== -1) checks to see if the bitLength is correct.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isHex } from '@polkadot/util';\n *\n * isHex('0x1234'); // => true\n * isHex('0x1234', 8); // => false\n * ```\n */ function isHex(value) {\n    let bitLength = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1, ignoreLength = arguments.length > 2 ? arguments[2] : void 0;\n    return typeof value === \"string\" && (value === \"0x\" || REGEX_HEX_PREFIXED.test(value)) && (bitLength === -1 ? ignoreLength || value.length % 2 === 0 : value.length === 2 + Math.ceil(bitLength / 4));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9pcy9oZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sTUFBTUEscUJBQXFCLGtCQUFrQjtBQUM3QyxNQUFNQyxxQkFBcUIsZ0JBQWdCO0FBQ2xEOzs7Ozs7Ozs7Ozs7OztDQWNDLEdBQ00sU0FBU0MsTUFBTUMsS0FBSztRQUFFQyxZQUFBQSxpRUFBWSxDQUFDLEdBQUdDO0lBQ3pDLE9BQU8sT0FBUUYsVUFBVSxZQUFhQSxDQUFBQSxVQUFVLFFBQzVDSCxtQkFBbUJNLElBQUksQ0FBQ0gsTUFBSyxLQUFRQyxDQUFBQSxjQUFjLENBQUMsSUFDakRDLGdCQUFpQkYsTUFBTUksTUFBTSxHQUFHLE1BQU0sSUFDdENKLE1BQU1JLE1BQU0sS0FBTSxJQUFJQyxLQUFLQyxJQUFJLENBQUNMLFlBQVksRUFBRztBQUMxRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvaXMvaGV4LmpzPzQ4ZDYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFJFR0VYX0hFWF9QUkVGSVhFRCA9IC9eMHhbXFxkYS1mQS1GXSskLztcbmV4cG9ydCBjb25zdCBSRUdFWF9IRVhfTk9QUkVGSVggPSAvXltcXGRhLWZBLUZdKyQvO1xuLyoqXG4gKiBAbmFtZSBpc0hleFxuICogQHN1bW1hcnkgVGVzdHMgZm9yIGEgaGV4IHN0cmluZy5cbiAqIEBkZXNjcmlwdGlvblxuICogQ2hlY2tzIHRvIHNlZSBpZiB0aGUgaW5wdXQgdmFsdWUgaXMgYSBgMHhgIHByZWZpeGVkIGhleCBzdHJpbmcuIE9wdGlvbmFsbHkgKGBiaXRMZW5ndGhgICE9PSAtMSkgY2hlY2tzIHRvIHNlZSBpZiB0aGUgYml0TGVuZ3RoIGlzIGNvcnJlY3QuXG4gKiBAZXhhbXBsZVxuICogPEJSPlxuICpcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGltcG9ydCB7IGlzSGV4IH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuICpcbiAqIGlzSGV4KCcweDEyMzQnKTsgLy8gPT4gdHJ1ZVxuICogaXNIZXgoJzB4MTIzNCcsIDgpOyAvLyA9PiBmYWxzZVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0hleCh2YWx1ZSwgYml0TGVuZ3RoID0gLTEsIGlnbm9yZUxlbmd0aCkge1xuICAgIHJldHVybiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiAodmFsdWUgPT09ICcweCcgfHxcbiAgICAgICAgUkVHRVhfSEVYX1BSRUZJWEVELnRlc3QodmFsdWUpKSkgJiYgKGJpdExlbmd0aCA9PT0gLTFcbiAgICAgICAgPyAoaWdub3JlTGVuZ3RoIHx8ICh2YWx1ZS5sZW5ndGggJSAyID09PSAwKSlcbiAgICAgICAgOiAodmFsdWUubGVuZ3RoID09PSAoMiArIE1hdGguY2VpbChiaXRMZW5ndGggLyA0KSkpKTtcbn1cbiJdLCJuYW1lcyI6WyJSRUdFWF9IRVhfUFJFRklYRUQiLCJSRUdFWF9IRVhfTk9QUkVGSVgiLCJpc0hleCIsInZhbHVlIiwiYml0TGVuZ3RoIiwiaWdub3JlTGVuZ3RoIiwidGVzdCIsImxlbmd0aCIsIk1hdGgiLCJjZWlsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/is/hex.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/is/number.js":
/*!**************************************************!*\
  !*** ./node_modules/@polkadot/util/is/number.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNumber: function() { return /* binding */ isNumber; }\n/* harmony export */ });\n/**\n * @name isNumber\n * @summary Tests for a JavaScript number.\n * @description\n * Checks to see if the input value is a valid number.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isNumber } from '@polkadot/util';\n *\n * console.log('isNumber', isNumber(1234)); // => true\n * ```\n */ function isNumber(value) {\n    return typeof value === \"number\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9pcy9udW1iZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Ozs7Ozs7Ozs7O0NBYUMsR0FDTSxTQUFTQSxTQUFTQyxLQUFLO0lBQzFCLE9BQU8sT0FBT0EsVUFBVTtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvaXMvbnVtYmVyLmpzP2NiMTEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbmFtZSBpc051bWJlclxuICogQHN1bW1hcnkgVGVzdHMgZm9yIGEgSmF2YVNjcmlwdCBudW1iZXIuXG4gKiBAZGVzY3JpcHRpb25cbiAqIENoZWNrcyB0byBzZWUgaWYgdGhlIGlucHV0IHZhbHVlIGlzIGEgdmFsaWQgbnVtYmVyLlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyBpc051bWJlciB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbiAqXG4gKiBjb25zb2xlLmxvZygnaXNOdW1iZXInLCBpc051bWJlcigxMjM0KSk7IC8vID0+IHRydWVcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNOdW1iZXIodmFsdWUpIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJztcbn1cbiJdLCJuYW1lcyI6WyJpc051bWJlciIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/is/number.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/is/object.js":
/*!**************************************************!*\
  !*** ./node_modules/@polkadot/util/is/object.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isObject: function() { return /* binding */ isObject; }\n/* harmony export */ });\n/**\n * @name isObject\n * @summary Tests for an `object`.\n * @description\n * Checks to see if the input value is a JavaScript object.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isObject } from '@polkadot/util';\n *\n * isObject({}); // => true\n * isObject('something'); // => false\n * ```\n */ function isObject(value) {\n    return !!value && typeof value === \"object\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9pcy9vYmplY3QuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Ozs7Ozs7Ozs7OztDQWNDLEdBQ00sU0FBU0EsU0FBU0MsS0FBSztJQUMxQixPQUFPLENBQUMsQ0FBQ0EsU0FBUyxPQUFPQSxVQUFVO0FBQ3ZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9pcy9vYmplY3QuanM/YWRlYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBuYW1lIGlzT2JqZWN0XG4gKiBAc3VtbWFyeSBUZXN0cyBmb3IgYW4gYG9iamVjdGAuXG4gKiBAZGVzY3JpcHRpb25cbiAqIENoZWNrcyB0byBzZWUgaWYgdGhlIGlucHV0IHZhbHVlIGlzIGEgSmF2YVNjcmlwdCBvYmplY3QuXG4gKiBAZXhhbXBsZVxuICogPEJSPlxuICpcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGltcG9ydCB7IGlzT2JqZWN0IH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuICpcbiAqIGlzT2JqZWN0KHt9KTsgLy8gPT4gdHJ1ZVxuICogaXNPYmplY3QoJ3NvbWV0aGluZycpOyAvLyA9PiBmYWxzZVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICAgIHJldHVybiAhIXZhbHVlICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCc7XG59XG4iXSwibmFtZXMiOlsiaXNPYmplY3QiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/is/object.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/is/string.js":
/*!**************************************************!*\
  !*** ./node_modules/@polkadot/util/is/string.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isString: function() { return /* binding */ isString; }\n/* harmony export */ });\n/**\n * @name isString\n * @summary Tests for a string.\n * @description\n * Checks to see if the input value is a JavaScript string.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isString } from '@polkadot/util';\n *\n * console.log('isString', isString('test')); // => true\n * ```\n */ function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9pcy9zdHJpbmcuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Ozs7Ozs7Ozs7O0NBYUMsR0FDTSxTQUFTQSxTQUFTQyxLQUFLO0lBQzFCLE9BQU8sT0FBT0EsVUFBVSxZQUFZQSxpQkFBaUJDO0FBQ3pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9pcy9zdHJpbmcuanM/ZjM2YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBuYW1lIGlzU3RyaW5nXG4gKiBAc3VtbWFyeSBUZXN0cyBmb3IgYSBzdHJpbmcuXG4gKiBAZGVzY3JpcHRpb25cbiAqIENoZWNrcyB0byBzZWUgaWYgdGhlIGlucHV0IHZhbHVlIGlzIGEgSmF2YVNjcmlwdCBzdHJpbmcuXG4gKiBAZXhhbXBsZVxuICogPEJSPlxuICpcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGltcG9ydCB7IGlzU3RyaW5nIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuICpcbiAqIGNvbnNvbGUubG9nKCdpc1N0cmluZycsIGlzU3RyaW5nKCd0ZXN0JykpOyAvLyA9PiB0cnVlXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzU3RyaW5nKHZhbHVlKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgfHwgdmFsdWUgaW5zdGFuY2VvZiBTdHJpbmc7XG59XG4iXSwibmFtZXMiOlsiaXNTdHJpbmciLCJ2YWx1ZSIsIlN0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/is/string.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/is/toBigInt.js":
/*!****************************************************!*\
  !*** ./node_modules/@polkadot/util/is/toBigInt.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isToBigInt: function() { return /* binding */ isToBigInt; }\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/helpers.js\");\n\nconst isToBigInt = /*#__PURE__*/ (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.isOn)(\"toBigInt\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9pcy90b0JpZ0ludC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFvQztBQUM3QixNQUFNQyxhQUFhLFdBQVcsR0FBR0QsaURBQUlBLENBQUMsWUFBWSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvaXMvdG9CaWdJbnQuanM/Y2U0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc09uIH0gZnJvbSAnLi9oZWxwZXJzLmpzJztcbmV4cG9ydCBjb25zdCBpc1RvQmlnSW50ID0gLyojX19QVVJFX18qLyBpc09uKCd0b0JpZ0ludCcpO1xuIl0sIm5hbWVzIjpbImlzT24iLCJpc1RvQmlnSW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/is/toBigInt.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/is/toBn.js":
/*!************************************************!*\
  !*** ./node_modules/@polkadot/util/is/toBn.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isToBn: function() { return /* binding */ isToBn; }\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/helpers.js\");\n\nconst isToBn = /*#__PURE__*/ (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.isOn)(\"toBn\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9pcy90b0JuLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9DO0FBQzdCLE1BQU1DLFNBQVMsV0FBVyxHQUFHRCxpREFBSUEsQ0FBQyxRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9pcy90b0JuLmpzP2IyNzQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNPbiB9IGZyb20gJy4vaGVscGVycy5qcyc7XG5leHBvcnQgY29uc3QgaXNUb0JuID0gLyojX19QVVJFX18qLyBpc09uKCd0b0JuJyk7XG4iXSwibmFtZXMiOlsiaXNPbiIsImlzVG9CbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/is/toBn.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/is/u8a.js":
/*!***********************************************!*\
  !*** ./node_modules/@polkadot/util/is/u8a.js ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isU8a: function() { return /* binding */ isU8a; }\n/* harmony export */ });\n/**\n * @name isU8a\n * @summary Tests for a `Uint8Array` object instance.\n * @description\n * Checks to see if the input object is an instance of `Uint8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isUint8Array } from '@polkadot/util';\n *\n * console.log('isU8a', isU8a([])); // => false\n * ```\n */ function isU8a(value) {\n    // here we defer the instanceof check which is actually slightly\n    // slower than just checking the constrctor (direct instances)\n    return (value && value.constructor) === Uint8Array || value instanceof Uint8Array;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9pcy91OGEuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Ozs7Ozs7Ozs7O0NBYUMsR0FDTSxTQUFTQSxNQUFNQyxLQUFLO0lBQ3ZCLGdFQUFnRTtJQUNoRSw4REFBOEQ7SUFDOUQsT0FBUSxDQUFFQSxTQUFTQSxNQUFNQyxXQUFXLE1BQU1DLGNBQ3RDRixpQkFBaUJFO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9pcy91OGEuanM/YWIzNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBuYW1lIGlzVThhXG4gKiBAc3VtbWFyeSBUZXN0cyBmb3IgYSBgVWludDhBcnJheWAgb2JqZWN0IGluc3RhbmNlLlxuICogQGRlc2NyaXB0aW9uXG4gKiBDaGVja3MgdG8gc2VlIGlmIHRoZSBpbnB1dCBvYmplY3QgaXMgYW4gaW5zdGFuY2Ugb2YgYFVpbnQ4QXJyYXlgLlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyBpc1VpbnQ4QXJyYXkgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG4gKlxuICogY29uc29sZS5sb2coJ2lzVThhJywgaXNVOGEoW10pKTsgLy8gPT4gZmFsc2VcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNVOGEodmFsdWUpIHtcbiAgICAvLyBoZXJlIHdlIGRlZmVyIHRoZSBpbnN0YW5jZW9mIGNoZWNrIHdoaWNoIGlzIGFjdHVhbGx5IHNsaWdodGx5XG4gICAgLy8gc2xvd2VyIHRoYW4ganVzdCBjaGVja2luZyB0aGUgY29uc3RyY3RvciAoZGlyZWN0IGluc3RhbmNlcylcbiAgICByZXR1cm4gKCgodmFsdWUgJiYgdmFsdWUuY29uc3RydWN0b3IpID09PSBVaW50OEFycmF5KSB8fFxuICAgICAgICB2YWx1ZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpO1xufVxuIl0sIm5hbWVzIjpbImlzVThhIiwidmFsdWUiLCJjb25zdHJ1Y3RvciIsIlVpbnQ4QXJyYXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/is/u8a.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/logger.js":
/*!***********************************************!*\
  !*** ./node_modules/@polkadot/util/logger.js ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: function() { return /* binding */ logger; },\n/* harmony export */   loggerFormat: function() { return /* binding */ loggerFormat; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @polkadot/x-global */ \"(app-pages-browser)/./node_modules/@polkadot/x-global/index.js\");\n/* harmony import */ var _format_formatDate_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./format/formatDate.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/format/formatDate.js\");\n/* harmony import */ var _is_bn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is/bn.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/bn.js\");\n/* harmony import */ var _is_buffer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./is/buffer.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/buffer.js\");\n/* harmony import */ var _is_function_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./is/function.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/function.js\");\n/* harmony import */ var _is_object_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is/object.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/object.js\");\n/* harmony import */ var _is_u8a_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./is/u8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/u8a.js\");\n/* harmony import */ var _u8a_toHex_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./u8a/toHex.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toHex.js\");\n/* harmony import */ var _u8a_toU8a_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./u8a/toU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./noop.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/noop.js\");\n\n\n\n\n\n\n\n\n\n\nconst logTo = {\n    debug: \"log\",\n    error: \"error\",\n    log: \"log\",\n    warn: \"warn\"\n};\nfunction formatOther(value) {\n    if (value && (0,_is_object_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(value) && value.constructor === Object) {\n        const result = {};\n        for (const [k, v] of Object.entries(value)){\n            result[k] = loggerFormat(v);\n        }\n        return result;\n    }\n    return value;\n}\nfunction loggerFormat(value) {\n    if (Array.isArray(value)) {\n        return value.map(loggerFormat);\n    } else if ((0,_is_bn_js__WEBPACK_IMPORTED_MODULE_1__.isBn)(value)) {\n        return value.toString();\n    } else if ((0,_is_u8a_js__WEBPACK_IMPORTED_MODULE_2__.isU8a)(value) || (0,_is_buffer_js__WEBPACK_IMPORTED_MODULE_3__.isBuffer)(value)) {\n        return (0,_u8a_toHex_js__WEBPACK_IMPORTED_MODULE_4__.u8aToHex)((0,_u8a_toU8a_js__WEBPACK_IMPORTED_MODULE_5__.u8aToU8a)(value));\n    }\n    return formatOther(value);\n}\nfunction formatWithLength(maxLength) {\n    return (v)=>{\n        if (maxLength <= 0) {\n            return v;\n        }\n        const r = \"\".concat(v);\n        return r.length < maxLength ? v : \"\".concat(r.substring(0, maxLength), \" ...\");\n    };\n}\nfunction apply(log, type, values) {\n    let maxSize = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : -1;\n    if (values.length === 1 && (0,_is_function_js__WEBPACK_IMPORTED_MODULE_6__.isFunction)(values[0])) {\n        const fnResult = values[0]();\n        return apply(log, type, Array.isArray(fnResult) ? fnResult : [\n            fnResult\n        ], maxSize);\n    }\n    console[logTo[log]]((0,_format_formatDate_js__WEBPACK_IMPORTED_MODULE_7__.formatDate)(new Date()), type, ...values.map(loggerFormat).map(formatWithLength(maxSize)));\n}\nfunction isDebugOn(e, type) {\n    return !!e && (e === \"*\" || type === e || e.endsWith(\"*\") && type.startsWith(e.slice(0, -1)));\n}\nfunction isDebugOff(e, type) {\n    return !!e && e.startsWith(\"-\") && (type === e.slice(1) || e.endsWith(\"*\") && type.startsWith(e.slice(1, -1)));\n}\nfunction getDebugFlag(env, type) {\n    let flag = false;\n    for (const e of env){\n        if (isDebugOn(e, type)) {\n            flag = true;\n        } else if (isDebugOff(e, type)) {\n            flag = false;\n        }\n    }\n    return flag;\n}\nfunction parseEnv(type) {\n    var _xglobal_process_env, _xglobal_process, _xglobal_process_env1, _xglobal_process1;\n    const maxSize = parseInt(((_xglobal_process = _polkadot_x_global__WEBPACK_IMPORTED_MODULE_8__.xglobal.process) === null || _xglobal_process === void 0 ? void 0 : (_xglobal_process_env = _xglobal_process.env) === null || _xglobal_process_env === void 0 ? void 0 : _xglobal_process_env[\"DEBUG_MAX\"]) || \"-1\", 10);\n    return [\n        getDebugFlag((((_xglobal_process1 = _polkadot_x_global__WEBPACK_IMPORTED_MODULE_8__.xglobal.process) === null || _xglobal_process1 === void 0 ? void 0 : (_xglobal_process_env1 = _xglobal_process1.env) === null || _xglobal_process_env1 === void 0 ? void 0 : _xglobal_process_env1[\"DEBUG\"]) || \"\").toLowerCase().split(\",\"), type),\n        isNaN(maxSize) ? -1 : maxSize\n    ];\n}\n/**\n * @name Logger\n * @summary Creates a consistent log interface for messages\n * @description\n * Returns a `Logger` that has `.log`, `.error`, `.warn` and `.debug` (controlled with environment `DEBUG=typeA,typeB`) methods. Logging is done with a consistent prefix (type of logger, date) followed by the actual message using the underlying console.\n * @example\n * <BR>\n *\n * ```javascript\n * import { logger } from '@polkadot/util';\n *\n * const l = logger('test');\n * ```\n */ function logger(origin) {\n    const type = \"\".concat(origin.toUpperCase(), \":\").padStart(16);\n    const [isDebug, maxSize] = parseEnv(origin.toLowerCase());\n    return {\n        debug: isDebug ? function() {\n            for(var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++){\n                values[_key] = arguments[_key];\n            }\n            return apply(\"debug\", type, values, maxSize);\n        } : _noop_js__WEBPACK_IMPORTED_MODULE_9__.noop,\n        error: function() {\n            for(var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++){\n                values[_key] = arguments[_key];\n            }\n            return apply(\"error\", type, values);\n        },\n        log: function() {\n            for(var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++){\n                values[_key] = arguments[_key];\n            }\n            return apply(\"log\", type, values);\n        },\n        noop: _noop_js__WEBPACK_IMPORTED_MODULE_9__.noop,\n        warn: function() {\n            for(var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++){\n                values[_key] = arguments[_key];\n            }\n            return apply(\"warn\", type, values);\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/logger.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/node_modules/@polkadot/x-bigint/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@polkadot/util/node_modules/@polkadot/x-bigint/index.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BigInt: function() { return /* binding */ BigInt; },\n/* harmony export */   packageInfo: function() { return /* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/x-global */ \"(app-pages-browser)/./node_modules/@polkadot/x-global/index.js\");\n/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./packageInfo.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/node_modules/@polkadot/x-bigint/packageInfo.js\");\n\n\n/**\n * @internal\n *\n * There are _still_ some older environments (specifically RN < 0.70), that does\n * not have proper BigInt support - a non-working fallback is provided for those.\n *\n * We detect availability of BigInt upon usage, so this is purely to allow functional\n * compilation & bundling. Since we have operators such as *+-/ top-level, a number-ish\n * result is used here.\n */ function invalidFallback() {\n    return Number.NaN;\n}\nconst BigInt = /*#__PURE__*/ (0,_polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.extractGlobal)(\"BigInt\", invalidFallback);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9ub2RlX21vZHVsZXMvQHBvbGthZG90L3gtYmlnaW50L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBbUQ7QUFDSjtBQUMvQzs7Ozs7Ozs7O0NBU0MsR0FDRCxTQUFTRTtJQUNMLE9BQU9DLE9BQU9DLEdBQUc7QUFDckI7QUFDTyxNQUFNQyxTQUFTLFdBQVcsR0FBR0wsaUVBQWFBLENBQUMsVUFBVUUsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9ub2RlX21vZHVsZXMvQHBvbGthZG90L3gtYmlnaW50L2luZGV4LmpzP2M3NjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZXh0cmFjdEdsb2JhbCB9IGZyb20gJ0Bwb2xrYWRvdC94LWdsb2JhbCc7XG5leHBvcnQgeyBwYWNrYWdlSW5mbyB9IGZyb20gJy4vcGFja2FnZUluZm8uanMnO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqXG4gKiBUaGVyZSBhcmUgX3N0aWxsXyBzb21lIG9sZGVyIGVudmlyb25tZW50cyAoc3BlY2lmaWNhbGx5IFJOIDwgMC43MCksIHRoYXQgZG9lc1xuICogbm90IGhhdmUgcHJvcGVyIEJpZ0ludCBzdXBwb3J0IC0gYSBub24td29ya2luZyBmYWxsYmFjayBpcyBwcm92aWRlZCBmb3IgdGhvc2UuXG4gKlxuICogV2UgZGV0ZWN0IGF2YWlsYWJpbGl0eSBvZiBCaWdJbnQgdXBvbiB1c2FnZSwgc28gdGhpcyBpcyBwdXJlbHkgdG8gYWxsb3cgZnVuY3Rpb25hbFxuICogY29tcGlsYXRpb24gJiBidW5kbGluZy4gU2luY2Ugd2UgaGF2ZSBvcGVyYXRvcnMgc3VjaCBhcyAqKy0vIHRvcC1sZXZlbCwgYSBudW1iZXItaXNoXG4gKiByZXN1bHQgaXMgdXNlZCBoZXJlLlxuICovXG5mdW5jdGlvbiBpbnZhbGlkRmFsbGJhY2soKSB7XG4gICAgcmV0dXJuIE51bWJlci5OYU47XG59XG5leHBvcnQgY29uc3QgQmlnSW50ID0gLyojX19QVVJFX18qLyBleHRyYWN0R2xvYmFsKCdCaWdJbnQnLCBpbnZhbGlkRmFsbGJhY2spO1xuIl0sIm5hbWVzIjpbImV4dHJhY3RHbG9iYWwiLCJwYWNrYWdlSW5mbyIsImludmFsaWRGYWxsYmFjayIsIk51bWJlciIsIk5hTiIsIkJpZ0ludCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/node_modules/@polkadot/x-bigint/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/node_modules/@polkadot/x-bigint/packageInfo.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@polkadot/util/node_modules/@polkadot/x-bigint/packageInfo.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   packageInfo: function() { return /* binding */ packageInfo; }\n/* harmony export */ });\nconst packageInfo = {\n    name: \"@polkadot/x-bigint\",\n    path:  true ? new URL(\"file:///C:/Users/crist/monkeyscanjump/download-manager/node_modules/@polkadot/util/node_modules/@polkadot/x-bigint/packageInfo.js\").pathname.substring(0, new URL(\"file:///C:/Users/crist/monkeyscanjump/download-manager/node_modules/@polkadot/util/node_modules/@polkadot/x-bigint/packageInfo.js\").pathname.lastIndexOf(\"/\") + 1) : 0,\n    type: \"esm\",\n    version: \"13.4.3\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9ub2RlX21vZHVsZXMvQHBvbGthZG90L3gtYmlnaW50L3BhY2thZ2VJbmZvLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxjQUFjO0lBQUVDLE1BQU07SUFBc0JDLE1BQU0sS0FBK0IsR0FBSSxJQUFJRSxJQUFJLG1JQUFlLEVBQUVDLFFBQVEsQ0FBQ0MsU0FBUyxDQUFDLEdBQUcsSUFBSUYsSUFBSSxtSUFBZSxFQUFFQyxRQUFRLENBQUNFLFdBQVcsQ0FBQyxPQUFPLEtBQUs7SUFBUUMsTUFBTTtJQUFPQyxTQUFTO0FBQVMsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC94LWJpZ2ludC9wYWNrYWdlSW5mby5qcz84ZjIwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBwYWNrYWdlSW5mbyA9IHsgbmFtZTogJ0Bwb2xrYWRvdC94LWJpZ2ludCcsIHBhdGg6IChpbXBvcnQubWV0YSAmJiBpbXBvcnQubWV0YS51cmwpID8gbmV3IFVSTChpbXBvcnQubWV0YS51cmwpLnBhdGhuYW1lLnN1YnN0cmluZygwLCBuZXcgVVJMKGltcG9ydC5tZXRhLnVybCkucGF0aG5hbWUubGFzdEluZGV4T2YoJy8nKSArIDEpIDogJ2F1dG8nLCB0eXBlOiAnZXNtJywgdmVyc2lvbjogJzEzLjQuMycgfTtcbiJdLCJuYW1lcyI6WyJwYWNrYWdlSW5mbyIsIm5hbWUiLCJwYXRoIiwidXJsIiwiVVJMIiwicGF0aG5hbWUiLCJzdWJzdHJpbmciLCJsYXN0SW5kZXhPZiIsInR5cGUiLCJ2ZXJzaW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/node_modules/@polkadot/x-bigint/packageInfo.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/noop.js":
/*!*********************************************!*\
  !*** ./node_modules/@polkadot/util/noop.js ***!
  \*********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identity: function() { return /* binding */ identity; },\n/* harmony export */   noop: function() { return /* binding */ noop; }\n/* harmony export */ });\n/**\n * A sharable identity function. Returns the input as-is with no transformation applied.\n */ function identity(value) {\n    return value;\n}\n/**\n * A sharable noop function. As the name suggests, does nothing\n */ function noop() {\n// noop\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9ub29wLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7O0NBRUMsR0FDTSxTQUFTQSxTQUFTQyxLQUFLO0lBQzFCLE9BQU9BO0FBQ1g7QUFDQTs7Q0FFQyxHQUNNLFNBQVNDO0FBQ1osT0FBTztBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9ub29wLmpzPzY0MTciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIHNoYXJhYmxlIGlkZW50aXR5IGZ1bmN0aW9uLiBSZXR1cm5zIHRoZSBpbnB1dCBhcy1pcyB3aXRoIG5vIHRyYW5zZm9ybWF0aW9uIGFwcGxpZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpZGVudGl0eSh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZTtcbn1cbi8qKlxuICogQSBzaGFyYWJsZSBub29wIGZ1bmN0aW9uLiBBcyB0aGUgbmFtZSBzdWdnZXN0cywgZG9lcyBub3RoaW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBub29wKCkge1xuICAgIC8vIG5vb3Bcbn1cbiJdLCJuYW1lcyI6WyJpZGVudGl0eSIsInZhbHVlIiwibm9vcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/noop.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/object/spread.js":
/*!******************************************************!*\
  !*** ./node_modules/@polkadot/util/object/spread.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   objectSpread: function() { return /* binding */ objectSpread; }\n/* harmony export */ });\n/**\n * @name objectSpread\n * @summary Concats all sources into the destination\n */ function objectSpread(dest) {\n    for(var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        sources[_key - 1] = arguments[_key];\n    }\n    for(let i = 0, count = sources.length; i < count; i++){\n        const src = sources[i];\n        if (src) {\n            if (typeof src.entries === \"function\") {\n                for (const [key, value] of src.entries()){\n                    dest[key] = value;\n                }\n            } else {\n                Object.assign(dest, src);\n            }\n        }\n    }\n    return dest;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9vYmplY3Qvc3ByZWFkLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7O0NBR0MsR0FDTSxTQUFTQSxhQUFhQyxJQUFJO0lBQUU7UUFBR0MsUUFBSCwyQkFBVTs7SUFDekMsSUFBSyxJQUFJQyxJQUFJLEdBQUdDLFFBQVFGLFFBQVFHLE1BQU0sRUFBRUYsSUFBSUMsT0FBT0QsSUFBSztRQUNwRCxNQUFNRyxNQUFNSixPQUFPLENBQUNDLEVBQUU7UUFDdEIsSUFBSUcsS0FBSztZQUNMLElBQUksT0FBT0EsSUFBSUMsT0FBTyxLQUFLLFlBQVk7Z0JBQ25DLEtBQUssTUFBTSxDQUFDQyxLQUFLQyxNQUFNLElBQUlILElBQUlDLE9BQU8sR0FBSTtvQkFDdENOLElBQUksQ0FBQ08sSUFBSSxHQUFHQztnQkFDaEI7WUFDSixPQUNLO2dCQUNEQyxPQUFPQyxNQUFNLENBQUNWLE1BQU1LO1lBQ3hCO1FBQ0o7SUFDSjtJQUNBLE9BQU9MO0FBQ1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsL29iamVjdC9zcHJlYWQuanM/NzgwYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBuYW1lIG9iamVjdFNwcmVhZFxuICogQHN1bW1hcnkgQ29uY2F0cyBhbGwgc291cmNlcyBpbnRvIHRoZSBkZXN0aW5hdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gb2JqZWN0U3ByZWFkKGRlc3QsIC4uLnNvdXJjZXMpIHtcbiAgICBmb3IgKGxldCBpID0gMCwgY291bnQgPSBzb3VyY2VzLmxlbmd0aDsgaSA8IGNvdW50OyBpKyspIHtcbiAgICAgICAgY29uc3Qgc3JjID0gc291cmNlc1tpXTtcbiAgICAgICAgaWYgKHNyYykge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBzcmMuZW50cmllcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIHNyYy5lbnRyaWVzKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgZGVzdFtrZXldID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihkZXN0LCBzcmMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkZXN0O1xufVxuIl0sIm5hbWVzIjpbIm9iamVjdFNwcmVhZCIsImRlc3QiLCJzb3VyY2VzIiwiaSIsImNvdW50IiwibGVuZ3RoIiwic3JjIiwiZW50cmllcyIsImtleSIsInZhbHVlIiwiT2JqZWN0IiwiYXNzaWduIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/object/spread.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/packageInfo.js":
/*!****************************************************!*\
  !*** ./node_modules/@polkadot/util/packageInfo.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   packageInfo: function() { return /* binding */ packageInfo; }\n/* harmony export */ });\nconst packageInfo = {\n    name: \"@polkadot/util\",\n    path:  true ? new URL(\"file:///C:/Users/crist/monkeyscanjump/download-manager/node_modules/@polkadot/util/packageInfo.js\").pathname.substring(0, new URL(\"file:///C:/Users/crist/monkeyscanjump/download-manager/node_modules/@polkadot/util/packageInfo.js\").pathname.lastIndexOf(\"/\") + 1) : 0,\n    type: \"esm\",\n    version: \"13.4.3\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9wYWNrYWdlSW5mby5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUEsY0FBYztJQUFFQyxNQUFNO0lBQWtCQyxNQUFNLEtBQStCLEdBQUksSUFBSUUsSUFBSSxtR0FBZSxFQUFFQyxRQUFRLENBQUNDLFNBQVMsQ0FBQyxHQUFHLElBQUlGLElBQUksbUdBQWUsRUFBRUMsUUFBUSxDQUFDRSxXQUFXLENBQUMsT0FBTyxLQUFLO0lBQVFDLE1BQU07SUFBT0MsU0FBUztBQUFTLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsL3BhY2thZ2VJbmZvLmpzPzRiOWMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHBhY2thZ2VJbmZvID0geyBuYW1lOiAnQHBvbGthZG90L3V0aWwnLCBwYXRoOiAoaW1wb3J0Lm1ldGEgJiYgaW1wb3J0Lm1ldGEudXJsKSA/IG5ldyBVUkwoaW1wb3J0Lm1ldGEudXJsKS5wYXRobmFtZS5zdWJzdHJpbmcoMCwgbmV3IFVSTChpbXBvcnQubWV0YS51cmwpLnBhdGhuYW1lLmxhc3RJbmRleE9mKCcvJykgKyAxKSA6ICdhdXRvJywgdHlwZTogJ2VzbScsIHZlcnNpb246ICcxMy40LjMnIH07XG4iXSwibmFtZXMiOlsicGFja2FnZUluZm8iLCJuYW1lIiwicGF0aCIsInVybCIsIlVSTCIsInBhdGhuYW1lIiwic3Vic3RyaW5nIiwibGFzdEluZGV4T2YiLCJ0eXBlIiwidmVyc2lvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/packageInfo.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/u8a/cmp.js":
/*!************************************************!*\
  !*** ./node_modules/@polkadot/util/u8a/cmp.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   u8aCmp: function() { return /* binding */ u8aCmp; }\n/* harmony export */ });\n/* harmony import */ var _toU8a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n\n/**\n * @name u8aCmp\n * @summary Compares two Uint8Arrays for sorting.\n * @description\n * For `UInt8Array` (or hex string) input values returning -1, 0 or +1\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aCmp } from '@polkadot/util';\n *\n * u8aCmp(new Uint8Array([0x67, 0x65]), new Uint8Array([0x68, 0x65])); // -1\n * u8aCmp(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // 0\n * u8aCmp(new Uint8Array([0x69, 0x65]), new Uint8Array([0x68, 0x65])); // +1\n * ```\n */ function u8aCmp(a, b) {\n    const u8aa = (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(a);\n    const u8ab = (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(b);\n    let i = 0;\n    while(true){\n        const overA = i >= u8aa.length;\n        const overB = i >= u8ab.length;\n        if (overA && overB) {\n            // both ends reached\n            return 0;\n        } else if (overA) {\n            // a has no more data, b has data\n            return -1;\n        } else if (overB) {\n            // b has no more data, a has data\n            return 1;\n        } else if (u8aa[i] !== u8ab[i]) {\n            // the number in this index doesn't match\n            // (we don't use u8aa[i] - u8ab[i] since that doesn't match with localeCompare)\n            return u8aa[i] > u8ab[i] ? 1 : -1;\n        }\n        i++;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC91OGEvY21wLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNDO0FBQ3RDOzs7Ozs7Ozs7Ozs7Ozs7Q0FlQyxHQUNNLFNBQVNDLE9BQU9DLENBQUMsRUFBRUMsQ0FBQztJQUN2QixNQUFNQyxPQUFPSixtREFBUUEsQ0FBQ0U7SUFDdEIsTUFBTUcsT0FBT0wsbURBQVFBLENBQUNHO0lBQ3RCLElBQUlHLElBQUk7SUFDUixNQUFPLEtBQU07UUFDVCxNQUFNQyxRQUFRRCxLQUFLRixLQUFLSSxNQUFNO1FBQzlCLE1BQU1DLFFBQVFILEtBQUtELEtBQUtHLE1BQU07UUFDOUIsSUFBSUQsU0FBU0UsT0FBTztZQUNoQixvQkFBb0I7WUFDcEIsT0FBTztRQUNYLE9BQ0ssSUFBSUYsT0FBTztZQUNaLGlDQUFpQztZQUNqQyxPQUFPLENBQUM7UUFDWixPQUNLLElBQUlFLE9BQU87WUFDWixpQ0FBaUM7WUFDakMsT0FBTztRQUNYLE9BQ0ssSUFBSUwsSUFBSSxDQUFDRSxFQUFFLEtBQUtELElBQUksQ0FBQ0MsRUFBRSxFQUFFO1lBQzFCLHlDQUF5QztZQUN6QywrRUFBK0U7WUFDL0UsT0FBT0YsSUFBSSxDQUFDRSxFQUFFLEdBQUdELElBQUksQ0FBQ0MsRUFBRSxHQUNsQixJQUNBLENBQUM7UUFDWDtRQUNBQTtJQUNKO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsL3U4YS9jbXAuanM/OGQ3OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1OGFUb1U4YSB9IGZyb20gJy4vdG9VOGEuanMnO1xuLyoqXG4gKiBAbmFtZSB1OGFDbXBcbiAqIEBzdW1tYXJ5IENvbXBhcmVzIHR3byBVaW50OEFycmF5cyBmb3Igc29ydGluZy5cbiAqIEBkZXNjcmlwdGlvblxuICogRm9yIGBVSW50OEFycmF5YCAob3IgaGV4IHN0cmluZykgaW5wdXQgdmFsdWVzIHJldHVybmluZyAtMSwgMCBvciArMVxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyB1OGFDbXAgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG4gKlxuICogdThhQ21wKG5ldyBVaW50OEFycmF5KFsweDY3LCAweDY1XSksIG5ldyBVaW50OEFycmF5KFsweDY4LCAweDY1XSkpOyAvLyAtMVxuICogdThhQ21wKG5ldyBVaW50OEFycmF5KFsweDY4LCAweDY1XSksIG5ldyBVaW50OEFycmF5KFsweDY4LCAweDY1XSkpOyAvLyAwXG4gKiB1OGFDbXAobmV3IFVpbnQ4QXJyYXkoWzB4NjksIDB4NjVdKSwgbmV3IFVpbnQ4QXJyYXkoWzB4NjgsIDB4NjVdKSk7IC8vICsxXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHU4YUNtcChhLCBiKSB7XG4gICAgY29uc3QgdThhYSA9IHU4YVRvVThhKGEpO1xuICAgIGNvbnN0IHU4YWIgPSB1OGFUb1U4YShiKTtcbiAgICBsZXQgaSA9IDA7XG4gICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgY29uc3Qgb3ZlckEgPSBpID49IHU4YWEubGVuZ3RoO1xuICAgICAgICBjb25zdCBvdmVyQiA9IGkgPj0gdThhYi5sZW5ndGg7XG4gICAgICAgIGlmIChvdmVyQSAmJiBvdmVyQikge1xuICAgICAgICAgICAgLy8gYm90aCBlbmRzIHJlYWNoZWRcbiAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKG92ZXJBKSB7XG4gICAgICAgICAgICAvLyBhIGhhcyBubyBtb3JlIGRhdGEsIGIgaGFzIGRhdGFcbiAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChvdmVyQikge1xuICAgICAgICAgICAgLy8gYiBoYXMgbm8gbW9yZSBkYXRhLCBhIGhhcyBkYXRhXG4gICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh1OGFhW2ldICE9PSB1OGFiW2ldKSB7XG4gICAgICAgICAgICAvLyB0aGUgbnVtYmVyIGluIHRoaXMgaW5kZXggZG9lc24ndCBtYXRjaFxuICAgICAgICAgICAgLy8gKHdlIGRvbid0IHVzZSB1OGFhW2ldIC0gdThhYltpXSBzaW5jZSB0aGF0IGRvZXNuJ3QgbWF0Y2ggd2l0aCBsb2NhbGVDb21wYXJlKVxuICAgICAgICAgICAgcmV0dXJuIHU4YWFbaV0gPiB1OGFiW2ldXG4gICAgICAgICAgICAgICAgPyAxXG4gICAgICAgICAgICAgICAgOiAtMTtcbiAgICAgICAgfVxuICAgICAgICBpKys7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbInU4YVRvVThhIiwidThhQ21wIiwiYSIsImIiLCJ1OGFhIiwidThhYiIsImkiLCJvdmVyQSIsImxlbmd0aCIsIm92ZXJCIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/u8a/cmp.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/u8a/concat.js":
/*!***************************************************!*\
  !*** ./node_modules/@polkadot/util/u8a/concat.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   u8aConcat: function() { return /* binding */ u8aConcat; },\n/* harmony export */   u8aConcatStrict: function() { return /* binding */ u8aConcatStrict; }\n/* harmony export */ });\n/* harmony import */ var _toU8a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n\n/**\n * @name u8aConcat\n * @summary Creates a concatenated Uint8Array from the inputs.\n * @description\n * Concatenates the input arrays into a single `UInt8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { { u8aConcat } from '@polkadot/util';\n *\n * u8aConcat(\n *   new Uint8Array([1, 2, 3]),\n *   new Uint8Array([4, 5, 6])\n * ); // [1, 2, 3, 4, 5, 6]\n * ```\n */ function u8aConcat() {\n    for(var _len = arguments.length, list = new Array(_len), _key = 0; _key < _len; _key++){\n        list[_key] = arguments[_key];\n    }\n    const count = list.length;\n    const u8as = new Array(count);\n    let length = 0;\n    for(let i = 0; i < count; i++){\n        u8as[i] = (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(list[i]);\n        length += u8as[i].length;\n    }\n    return u8aConcatStrict(u8as, length);\n}\n/**\n * @name u8aConcatStrict\n * @description A strict version of [[u8aConcat]], accepting only Uint8Array inputs\n */ function u8aConcatStrict(u8as) {\n    let length = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;\n    const count = u8as.length;\n    let offset = 0;\n    if (!length) {\n        for(let i = 0; i < count; i++){\n            length += u8as[i].length;\n        }\n    }\n    const result = new Uint8Array(length);\n    for(let i = 0; i < count; i++){\n        result.set(u8as[i], offset);\n        offset += u8as[i].length;\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC91OGEvY29uY2F0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFzQztBQUN0Qzs7Ozs7Ozs7Ozs7Ozs7OztDQWdCQyxHQUNNLFNBQVNDO0lBQVU7UUFBR0MsS0FBSCx1QkFBTzs7SUFDN0IsTUFBTUMsUUFBUUQsS0FBS0UsTUFBTTtJQUN6QixNQUFNQyxPQUFPLElBQUlDLE1BQU1IO0lBQ3ZCLElBQUlDLFNBQVM7SUFDYixJQUFLLElBQUlHLElBQUksR0FBR0EsSUFBSUosT0FBT0ksSUFBSztRQUM1QkYsSUFBSSxDQUFDRSxFQUFFLEdBQUdQLG1EQUFRQSxDQUFDRSxJQUFJLENBQUNLLEVBQUU7UUFDMUJILFVBQVVDLElBQUksQ0FBQ0UsRUFBRSxDQUFDSCxNQUFNO0lBQzVCO0lBQ0EsT0FBT0ksZ0JBQWdCSCxNQUFNRDtBQUNqQztBQUNBOzs7Q0FHQyxHQUNNLFNBQVNJLGdCQUFnQkgsSUFBSTtRQUFFRCxTQUFBQSxpRUFBUztJQUMzQyxNQUFNRCxRQUFRRSxLQUFLRCxNQUFNO0lBQ3pCLElBQUlLLFNBQVM7SUFDYixJQUFJLENBQUNMLFFBQVE7UUFDVCxJQUFLLElBQUlHLElBQUksR0FBR0EsSUFBSUosT0FBT0ksSUFBSztZQUM1QkgsVUFBVUMsSUFBSSxDQUFDRSxFQUFFLENBQUNILE1BQU07UUFDNUI7SUFDSjtJQUNBLE1BQU1NLFNBQVMsSUFBSUMsV0FBV1A7SUFDOUIsSUFBSyxJQUFJRyxJQUFJLEdBQUdBLElBQUlKLE9BQU9JLElBQUs7UUFDNUJHLE9BQU9FLEdBQUcsQ0FBQ1AsSUFBSSxDQUFDRSxFQUFFLEVBQUVFO1FBQ3BCQSxVQUFVSixJQUFJLENBQUNFLEVBQUUsQ0FBQ0gsTUFBTTtJQUM1QjtJQUNBLE9BQU9NO0FBQ1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsL3U4YS9jb25jYXQuanM/YmU0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1OGFUb1U4YSB9IGZyb20gJy4vdG9VOGEuanMnO1xuLyoqXG4gKiBAbmFtZSB1OGFDb25jYXRcbiAqIEBzdW1tYXJ5IENyZWF0ZXMgYSBjb25jYXRlbmF0ZWQgVWludDhBcnJheSBmcm9tIHRoZSBpbnB1dHMuXG4gKiBAZGVzY3JpcHRpb25cbiAqIENvbmNhdGVuYXRlcyB0aGUgaW5wdXQgYXJyYXlzIGludG8gYSBzaW5nbGUgYFVJbnQ4QXJyYXlgLlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyB7IHU4YUNvbmNhdCB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbiAqXG4gKiB1OGFDb25jYXQoXG4gKiAgIG5ldyBVaW50OEFycmF5KFsxLCAyLCAzXSksXG4gKiAgIG5ldyBVaW50OEFycmF5KFs0LCA1LCA2XSlcbiAqICk7IC8vIFsxLCAyLCAzLCA0LCA1LCA2XVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1OGFDb25jYXQoLi4ubGlzdCkge1xuICAgIGNvbnN0IGNvdW50ID0gbGlzdC5sZW5ndGg7XG4gICAgY29uc3QgdThhcyA9IG5ldyBBcnJheShjb3VudCk7XG4gICAgbGV0IGxlbmd0aCA9IDA7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb3VudDsgaSsrKSB7XG4gICAgICAgIHU4YXNbaV0gPSB1OGFUb1U4YShsaXN0W2ldKTtcbiAgICAgICAgbGVuZ3RoICs9IHU4YXNbaV0ubGVuZ3RoO1xuICAgIH1cbiAgICByZXR1cm4gdThhQ29uY2F0U3RyaWN0KHU4YXMsIGxlbmd0aCk7XG59XG4vKipcbiAqIEBuYW1lIHU4YUNvbmNhdFN0cmljdFxuICogQGRlc2NyaXB0aW9uIEEgc3RyaWN0IHZlcnNpb24gb2YgW1t1OGFDb25jYXRdXSwgYWNjZXB0aW5nIG9ubHkgVWludDhBcnJheSBpbnB1dHNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHU4YUNvbmNhdFN0cmljdCh1OGFzLCBsZW5ndGggPSAwKSB7XG4gICAgY29uc3QgY291bnQgPSB1OGFzLmxlbmd0aDtcbiAgICBsZXQgb2Zmc2V0ID0gMDtcbiAgICBpZiAoIWxlbmd0aCkge1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvdW50OyBpKyspIHtcbiAgICAgICAgICAgIGxlbmd0aCArPSB1OGFzW2ldLmxlbmd0aDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSBuZXcgVWludDhBcnJheShsZW5ndGgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY291bnQ7IGkrKykge1xuICAgICAgICByZXN1bHQuc2V0KHU4YXNbaV0sIG9mZnNldCk7XG4gICAgICAgIG9mZnNldCArPSB1OGFzW2ldLmxlbmd0aDtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6WyJ1OGFUb1U4YSIsInU4YUNvbmNhdCIsImxpc3QiLCJjb3VudCIsImxlbmd0aCIsInU4YXMiLCJBcnJheSIsImkiLCJ1OGFDb25jYXRTdHJpY3QiLCJvZmZzZXQiLCJyZXN1bHQiLCJVaW50OEFycmF5Iiwic2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/u8a/concat.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/u8a/empty.js":
/*!**************************************************!*\
  !*** ./node_modules/@polkadot/util/u8a/empty.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   u8aEmpty: function() { return /* binding */ u8aEmpty; }\n/* harmony export */ });\n/**\n * @name u8aEmpty\n * @summary Tests for a `Uint8Array` for emptyness\n * @description\n * Checks to see if the input `Uint8Array` has zero length or contains all 0 values.\n */ function u8aEmpty(value) {\n    const len = value.length | 0;\n    // on smaller sizes, the byte-by-byte compare is faster than allocating\n    // another object for DataView (on very large arrays the DataView is faster)\n    for(let i = 0; i < len; i++){\n        if (value[i] | 0) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC91OGEvZW1wdHkuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7OztDQUtDLEdBQ00sU0FBU0EsU0FBU0MsS0FBSztJQUMxQixNQUFNQyxNQUFNRCxNQUFNRSxNQUFNLEdBQUc7SUFDM0IsdUVBQXVFO0lBQ3ZFLDRFQUE0RTtJQUM1RSxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUYsS0FBS0UsSUFBSztRQUMxQixJQUFJSCxLQUFLLENBQUNHLEVBQUUsR0FBRyxHQUFHO1lBQ2QsT0FBTztRQUNYO0lBQ0o7SUFDQSxPQUFPO0FBQ1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsL3U4YS9lbXB0eS5qcz9jZTczIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG5hbWUgdThhRW1wdHlcbiAqIEBzdW1tYXJ5IFRlc3RzIGZvciBhIGBVaW50OEFycmF5YCBmb3IgZW1wdHluZXNzXG4gKiBAZGVzY3JpcHRpb25cbiAqIENoZWNrcyB0byBzZWUgaWYgdGhlIGlucHV0IGBVaW50OEFycmF5YCBoYXMgemVybyBsZW5ndGggb3IgY29udGFpbnMgYWxsIDAgdmFsdWVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdThhRW1wdHkodmFsdWUpIHtcbiAgICBjb25zdCBsZW4gPSB2YWx1ZS5sZW5ndGggfCAwO1xuICAgIC8vIG9uIHNtYWxsZXIgc2l6ZXMsIHRoZSBieXRlLWJ5LWJ5dGUgY29tcGFyZSBpcyBmYXN0ZXIgdGhhbiBhbGxvY2F0aW5nXG4gICAgLy8gYW5vdGhlciBvYmplY3QgZm9yIERhdGFWaWV3IChvbiB2ZXJ5IGxhcmdlIGFycmF5cyB0aGUgRGF0YVZpZXcgaXMgZmFzdGVyKVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgaWYgKHZhbHVlW2ldIHwgMCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuIl0sIm5hbWVzIjpbInU4YUVtcHR5IiwidmFsdWUiLCJsZW4iLCJsZW5ndGgiLCJpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/u8a/empty.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/u8a/eq.js":
/*!***********************************************!*\
  !*** ./node_modules/@polkadot/util/u8a/eq.js ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   u8aEq: function() { return /* binding */ u8aEq; }\n/* harmony export */ });\n/* harmony import */ var _toU8a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n\n/**\n * @name u8aEq\n * @summary Compares two Uint8Arrays for equality.\n * @description\n * For `UInt8Array` (or hex string) input values true if there is a match.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aEq } from '@polkadot/util';\n *\n * u8aEq(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // true\n * ```\n */ function u8aEq(a, b) {\n    const u8aa = (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(a);\n    const u8ab = (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(b);\n    if (u8aa.length === u8ab.length) {\n        const dvA = new DataView(u8aa.buffer, u8aa.byteOffset);\n        const dvB = new DataView(u8ab.buffer, u8ab.byteOffset);\n        const mod = u8aa.length % 4 | 0;\n        const length = u8aa.length - mod | 0;\n        for(let i = 0; i < length; i += 4){\n            if (dvA.getUint32(i) !== dvB.getUint32(i)) {\n                return false;\n            }\n        }\n        for(let i = length, count = u8aa.length; i < count; i++){\n            if (u8aa[i] !== u8ab[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC91OGEvZXEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0M7QUFDdEM7Ozs7Ozs7Ozs7Ozs7Q0FhQyxHQUNNLFNBQVNDLE1BQU1DLENBQUMsRUFBRUMsQ0FBQztJQUN0QixNQUFNQyxPQUFPSixtREFBUUEsQ0FBQ0U7SUFDdEIsTUFBTUcsT0FBT0wsbURBQVFBLENBQUNHO0lBQ3RCLElBQUlDLEtBQUtFLE1BQU0sS0FBS0QsS0FBS0MsTUFBTSxFQUFFO1FBQzdCLE1BQU1DLE1BQU0sSUFBSUMsU0FBU0osS0FBS0ssTUFBTSxFQUFFTCxLQUFLTSxVQUFVO1FBQ3JELE1BQU1DLE1BQU0sSUFBSUgsU0FBU0gsS0FBS0ksTUFBTSxFQUFFSixLQUFLSyxVQUFVO1FBQ3JELE1BQU1FLE1BQU0sS0FBTU4sTUFBTSxHQUFHLElBQUs7UUFDaEMsTUFBTUEsU0FBUyxLQUFNQSxNQUFNLEdBQUdNLE1BQU87UUFDckMsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlQLFFBQVFPLEtBQUssRUFBRztZQUNoQyxJQUFJTixJQUFJTyxTQUFTLENBQUNELE9BQU9GLElBQUlHLFNBQVMsQ0FBQ0QsSUFBSTtnQkFDdkMsT0FBTztZQUNYO1FBQ0o7UUFDQSxJQUFLLElBQUlBLElBQUlQLFFBQVFTLFFBQVFYLEtBQUtFLE1BQU0sRUFBRU8sSUFBSUUsT0FBT0YsSUFBSztZQUN0RCxJQUFJVCxJQUFJLENBQUNTLEVBQUUsS0FBS1IsSUFBSSxDQUFDUSxFQUFFLEVBQUU7Z0JBQ3JCLE9BQU87WUFDWDtRQUNKO1FBQ0EsT0FBTztJQUNYO0lBQ0EsT0FBTztBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC91OGEvZXEuanM/ZGY1MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1OGFUb1U4YSB9IGZyb20gJy4vdG9VOGEuanMnO1xuLyoqXG4gKiBAbmFtZSB1OGFFcVxuICogQHN1bW1hcnkgQ29tcGFyZXMgdHdvIFVpbnQ4QXJyYXlzIGZvciBlcXVhbGl0eS5cbiAqIEBkZXNjcmlwdGlvblxuICogRm9yIGBVSW50OEFycmF5YCAob3IgaGV4IHN0cmluZykgaW5wdXQgdmFsdWVzIHRydWUgaWYgdGhlcmUgaXMgYSBtYXRjaC5cbiAqIEBleGFtcGxlXG4gKiA8QlI+XG4gKlxuICogYGBgamF2YXNjcmlwdFxuICogaW1wb3J0IHsgdThhRXEgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG4gKlxuICogdThhRXEobmV3IFVpbnQ4QXJyYXkoWzB4NjgsIDB4NjVdKSwgbmV3IFVpbnQ4QXJyYXkoWzB4NjgsIDB4NjVdKSk7IC8vIHRydWVcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gdThhRXEoYSwgYikge1xuICAgIGNvbnN0IHU4YWEgPSB1OGFUb1U4YShhKTtcbiAgICBjb25zdCB1OGFiID0gdThhVG9VOGEoYik7XG4gICAgaWYgKHU4YWEubGVuZ3RoID09PSB1OGFiLmxlbmd0aCkge1xuICAgICAgICBjb25zdCBkdkEgPSBuZXcgRGF0YVZpZXcodThhYS5idWZmZXIsIHU4YWEuYnl0ZU9mZnNldCk7XG4gICAgICAgIGNvbnN0IGR2QiA9IG5ldyBEYXRhVmlldyh1OGFiLmJ1ZmZlciwgdThhYi5ieXRlT2Zmc2V0KTtcbiAgICAgICAgY29uc3QgbW9kID0gKHU4YWEubGVuZ3RoICUgNCkgfCAwO1xuICAgICAgICBjb25zdCBsZW5ndGggPSAodThhYS5sZW5ndGggLSBtb2QpIHwgMDtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkgKz0gNCkge1xuICAgICAgICAgICAgaWYgKGR2QS5nZXRVaW50MzIoaSkgIT09IGR2Qi5nZXRVaW50MzIoaSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChsZXQgaSA9IGxlbmd0aCwgY291bnQgPSB1OGFhLmxlbmd0aDsgaSA8IGNvdW50OyBpKyspIHtcbiAgICAgICAgICAgIGlmICh1OGFhW2ldICE9PSB1OGFiW2ldKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG4iXSwibmFtZXMiOlsidThhVG9VOGEiLCJ1OGFFcSIsImEiLCJiIiwidThhYSIsInU4YWIiLCJsZW5ndGgiLCJkdkEiLCJEYXRhVmlldyIsImJ1ZmZlciIsImJ5dGVPZmZzZXQiLCJkdkIiLCJtb2QiLCJpIiwiZ2V0VWludDMyIiwiY291bnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/u8a/eq.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/u8a/fixLength.js":
/*!******************************************************!*\
  !*** ./node_modules/@polkadot/util/u8a/fixLength.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   u8aFixLength: function() { return /* binding */ u8aFixLength; }\n/* harmony export */ });\n/**\n * @name u8aFixLength\n * @summary Shifts a Uint8Array to a specific bitLength\n * @description\n * Returns a uint8Array with the specified number of bits contained in the return value. (If bitLength is -1, length checking is not done). Values with more bits are trimmed to the specified length.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aFixLength } from '@polkadot/util';\n *\n * u8aFixLength('0x12') // => 0x12\n * u8aFixLength('0x12', 16) // => 0x0012\n * u8aFixLength('0x1234', 8) // => 0x12\n * ```\n */ function u8aFixLength(value) {\n    let bitLength = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1, atStart = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;\n    const byteLength = Math.ceil(bitLength / 8);\n    if (bitLength === -1 || value.length === byteLength) {\n        return value;\n    } else if (value.length > byteLength) {\n        return value.subarray(0, byteLength);\n    }\n    const result = new Uint8Array(byteLength);\n    result.set(value, atStart ? 0 : byteLength - value.length);\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC91OGEvZml4TGVuZ3RoLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7O0NBZUMsR0FDTSxTQUFTQSxhQUFhQyxLQUFLO1FBQUVDLFlBQUFBLGlFQUFZLENBQUMsR0FBR0MsVUFBQUEsaUVBQVU7SUFDMUQsTUFBTUMsYUFBYUMsS0FBS0MsSUFBSSxDQUFDSixZQUFZO0lBQ3pDLElBQUlBLGNBQWMsQ0FBQyxLQUFLRCxNQUFNTSxNQUFNLEtBQUtILFlBQVk7UUFDakQsT0FBT0g7SUFDWCxPQUNLLElBQUlBLE1BQU1NLE1BQU0sR0FBR0gsWUFBWTtRQUNoQyxPQUFPSCxNQUFNTyxRQUFRLENBQUMsR0FBR0o7SUFDN0I7SUFDQSxNQUFNSyxTQUFTLElBQUlDLFdBQVdOO0lBQzlCSyxPQUFPRSxHQUFHLENBQUNWLE9BQU9FLFVBQVUsSUFBS0MsYUFBYUgsTUFBTU0sTUFBTTtJQUMxRCxPQUFPRTtBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC91OGEvZml4TGVuZ3RoLmpzPzgyZjkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbmFtZSB1OGFGaXhMZW5ndGhcbiAqIEBzdW1tYXJ5IFNoaWZ0cyBhIFVpbnQ4QXJyYXkgdG8gYSBzcGVjaWZpYyBiaXRMZW5ndGhcbiAqIEBkZXNjcmlwdGlvblxuICogUmV0dXJucyBhIHVpbnQ4QXJyYXkgd2l0aCB0aGUgc3BlY2lmaWVkIG51bWJlciBvZiBiaXRzIGNvbnRhaW5lZCBpbiB0aGUgcmV0dXJuIHZhbHVlLiAoSWYgYml0TGVuZ3RoIGlzIC0xLCBsZW5ndGggY2hlY2tpbmcgaXMgbm90IGRvbmUpLiBWYWx1ZXMgd2l0aCBtb3JlIGJpdHMgYXJlIHRyaW1tZWQgdG8gdGhlIHNwZWNpZmllZCBsZW5ndGguXG4gKiBAZXhhbXBsZVxuICogPEJSPlxuICpcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGltcG9ydCB7IHU4YUZpeExlbmd0aCB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbiAqXG4gKiB1OGFGaXhMZW5ndGgoJzB4MTInKSAvLyA9PiAweDEyXG4gKiB1OGFGaXhMZW5ndGgoJzB4MTInLCAxNikgLy8gPT4gMHgwMDEyXG4gKiB1OGFGaXhMZW5ndGgoJzB4MTIzNCcsIDgpIC8vID0+IDB4MTJcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gdThhRml4TGVuZ3RoKHZhbHVlLCBiaXRMZW5ndGggPSAtMSwgYXRTdGFydCA9IGZhbHNlKSB7XG4gICAgY29uc3QgYnl0ZUxlbmd0aCA9IE1hdGguY2VpbChiaXRMZW5ndGggLyA4KTtcbiAgICBpZiAoYml0TGVuZ3RoID09PSAtMSB8fCB2YWx1ZS5sZW5ndGggPT09IGJ5dGVMZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICBlbHNlIGlmICh2YWx1ZS5sZW5ndGggPiBieXRlTGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZS5zdWJhcnJheSgwLCBieXRlTGVuZ3RoKTtcbiAgICB9XG4gICAgY29uc3QgcmVzdWx0ID0gbmV3IFVpbnQ4QXJyYXkoYnl0ZUxlbmd0aCk7XG4gICAgcmVzdWx0LnNldCh2YWx1ZSwgYXRTdGFydCA/IDAgOiAoYnl0ZUxlbmd0aCAtIHZhbHVlLmxlbmd0aCkpO1xuICAgIHJldHVybiByZXN1bHQ7XG59XG4iXSwibmFtZXMiOlsidThhRml4TGVuZ3RoIiwidmFsdWUiLCJiaXRMZW5ndGgiLCJhdFN0YXJ0IiwiYnl0ZUxlbmd0aCIsIk1hdGgiLCJjZWlsIiwibGVuZ3RoIiwic3ViYXJyYXkiLCJyZXN1bHQiLCJVaW50OEFycmF5Iiwic2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/u8a/fixLength.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/u8a/sorted.js":
/*!***************************************************!*\
  !*** ./node_modules/@polkadot/util/u8a/sorted.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   u8aSorted: function() { return /* binding */ u8aSorted; }\n/* harmony export */ });\n/* harmony import */ var _cmp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cmp.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/cmp.js\");\n\n/**\n * @name u8aSorted\n * @summary Sorts an array of Uint8Arrays\n * @description\n * For input `UInt8Array[]` return the sorted result\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aSorted} from '@polkadot/util';\n *\n * u8aSorted([new Uint8Array([0x69]), new Uint8Array([0x68])]); // [0x68, 0x69]\n * ```\n */ function u8aSorted(u8as) {\n    return u8as.sort(_cmp_js__WEBPACK_IMPORTED_MODULE_0__.u8aCmp);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC91OGEvc29ydGVkLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtDO0FBQ2xDOzs7Ozs7Ozs7Ozs7O0NBYUMsR0FDTSxTQUFTQyxVQUFVQyxJQUFJO0lBQzFCLE9BQU9BLEtBQUtDLElBQUksQ0FBQ0gsMkNBQU1BO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC91OGEvc29ydGVkLmpzPzEwYTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdThhQ21wIH0gZnJvbSAnLi9jbXAuanMnO1xuLyoqXG4gKiBAbmFtZSB1OGFTb3J0ZWRcbiAqIEBzdW1tYXJ5IFNvcnRzIGFuIGFycmF5IG9mIFVpbnQ4QXJyYXlzXG4gKiBAZGVzY3JpcHRpb25cbiAqIEZvciBpbnB1dCBgVUludDhBcnJheVtdYCByZXR1cm4gdGhlIHNvcnRlZCByZXN1bHRcbiAqIEBleGFtcGxlXG4gKiA8QlI+XG4gKlxuICogYGBgamF2YXNjcmlwdFxuICogaW1wb3J0IHsgdThhU29ydGVkfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG4gKlxuICogdThhU29ydGVkKFtuZXcgVWludDhBcnJheShbMHg2OV0pLCBuZXcgVWludDhBcnJheShbMHg2OF0pXSk7IC8vIFsweDY4LCAweDY5XVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1OGFTb3J0ZWQodThhcykge1xuICAgIHJldHVybiB1OGFzLnNvcnQodThhQ21wKTtcbn1cbiJdLCJuYW1lcyI6WyJ1OGFDbXAiLCJ1OGFTb3J0ZWQiLCJ1OGFzIiwic29ydCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/u8a/sorted.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/u8a/toBigInt.js":
/*!*****************************************************!*\
  !*** ./node_modules/@polkadot/util/u8a/toBigInt.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   u8aToBigInt: function() { return /* binding */ u8aToBigInt; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/x-bigint */ \"(app-pages-browser)/./node_modules/@polkadot/util/node_modules/@polkadot/x-bigint/index.js\");\n/* harmony import */ var _bi_consts_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bi/consts.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/bi/consts.js\");\n\n\nconst U8_MAX = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(256);\nconst U16_MAX = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(256 * 256);\nconst U64_MAX = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(\"0x10000000000000000\");\n/**\n * @name u8aToBigInt\n * @summary Creates a BigInt from a Uint8Array object.\n */ function u8aToBigInt(value) {\n    let { isLe = true, isNegative = false } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    // slice + reverse is expensive, however SCALE is LE by default so this is the path\n    // we are most interested in (the BE is added for the sake of being comprehensive)\n    if (!isLe) {\n        value = value.slice().reverse();\n    }\n    const count = value.length;\n    if (isNegative && count && value[count - 1] & 0x80) {\n        switch(count){\n            case 0:\n                return (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(0);\n            case 1:\n                return (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)((value[0] ^ 0x000000ff) * -1 - 1);\n            case 2:\n                return (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)((value[0] + (value[1] << 8) ^ 0x0000ffff) * -1 - 1);\n            case 4:\n                return (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)((value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000 ^ 0xffffffff) * -1 - 1);\n        }\n        const dvI = new DataView(value.buffer, value.byteOffset);\n        if (count === 8) {\n            return dvI.getBigInt64(0, true);\n        }\n        let result = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(0);\n        const mod = count % 2;\n        for(let i = count - 2; i >= mod; i -= 2){\n            result = result * U16_MAX + (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(dvI.getUint16(i, true) ^ 0xffff);\n        }\n        if (mod) {\n            result = result * U8_MAX + (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(value[0] ^ 0xff);\n        }\n        return result * -_bi_consts_js__WEBPACK_IMPORTED_MODULE_1__._1n - _bi_consts_js__WEBPACK_IMPORTED_MODULE_1__._1n;\n    }\n    switch(count){\n        case 0:\n            return (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(0);\n        case 1:\n            return (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(value[0]);\n        case 2:\n            return (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(value[0] + (value[1] << 8));\n        case 4:\n            return (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000);\n    }\n    const dvI = new DataView(value.buffer, value.byteOffset);\n    switch(count){\n        case 8:\n            return dvI.getBigUint64(0, true);\n        case 16:\n            return dvI.getBigUint64(8, true) * U64_MAX + dvI.getBigUint64(0, true);\n        default:\n            {\n                let result = (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(0);\n                const mod = count % 2;\n                for(let i = count - 2; i >= mod; i -= 2){\n                    result = result * U16_MAX + (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(dvI.getUint16(i, true));\n                }\n                if (mod) {\n                    result = result * U8_MAX + (0,_polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt)(value[0]);\n                }\n                return result;\n            }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC91OGEvdG9CaWdJbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRDO0FBQ047QUFDdEMsTUFBTUUsU0FBU0YsMERBQU1BLENBQUM7QUFDdEIsTUFBTUcsVUFBVUgsMERBQU1BLENBQUMsTUFBTTtBQUM3QixNQUFNSSxVQUFVSiwwREFBTUEsQ0FBQztBQUN2Qjs7O0NBR0MsR0FDTSxTQUFTSyxZQUFZQyxLQUFLO1FBQUUsRUFBRUMsT0FBTyxJQUFJLEVBQUVDLGFBQWEsS0FBSyxFQUFFLEdBQW5DLGlFQUFzQyxDQUFDO0lBQ3RFLG1GQUFtRjtJQUNuRixrRkFBa0Y7SUFDbEYsSUFBSSxDQUFDRCxNQUFNO1FBQ1BELFFBQVFBLE1BQU1HLEtBQUssR0FBR0MsT0FBTztJQUNqQztJQUNBLE1BQU1DLFFBQVFMLE1BQU1NLE1BQU07SUFDMUIsSUFBSUosY0FBY0csU0FBVUwsS0FBSyxDQUFDSyxRQUFRLEVBQUUsR0FBRyxNQUFPO1FBQ2xELE9BQVFBO1lBQ0osS0FBSztnQkFDRCxPQUFPWCwwREFBTUEsQ0FBQztZQUNsQixLQUFLO2dCQUNELE9BQU9BLDBEQUFNQSxDQUFDLENBQUVNLEtBQUssQ0FBQyxFQUFFLEdBQUcsVUFBVSxJQUFLLENBQUMsSUFBSztZQUNwRCxLQUFLO2dCQUNELE9BQU9OLDBEQUFNQSxDQUFDLENBQUUsS0FBTSxDQUFDLEVBQUUsR0FBSU0sQ0FBQUEsS0FBSyxDQUFDLEVBQUUsSUFBSSxLQUFNLFVBQVUsSUFBSyxDQUFDLElBQUs7WUFDeEUsS0FBSztnQkFDRCxPQUFPTiwwREFBTUEsQ0FBQyxDQUFFLEtBQU0sQ0FBQyxFQUFFLEdBQUlNLENBQUFBLEtBQUssQ0FBQyxFQUFFLElBQUksS0FBTUEsQ0FBQUEsS0FBSyxDQUFDLEVBQUUsSUFBSSxFQUFDLElBQU1BLEtBQUssQ0FBQyxFQUFFLEdBQUcsWUFBaUIsVUFBVSxJQUFLLENBQUMsSUFBSztRQUMzSDtRQUNBLE1BQU1PLE1BQU0sSUFBSUMsU0FBU1IsTUFBTVMsTUFBTSxFQUFFVCxNQUFNVSxVQUFVO1FBQ3ZELElBQUlMLFVBQVUsR0FBRztZQUNiLE9BQU9FLElBQUlJLFdBQVcsQ0FBQyxHQUFHO1FBQzlCO1FBQ0EsSUFBSUMsU0FBU2xCLDBEQUFNQSxDQUFDO1FBQ3BCLE1BQU1tQixNQUFNUixRQUFRO1FBQ3BCLElBQUssSUFBSVMsSUFBSVQsUUFBUSxHQUFHUyxLQUFLRCxLQUFLQyxLQUFLLEVBQUc7WUFDdENGLFNBQVMsU0FBVWYsVUFBV0gsMERBQU1BLENBQUNhLElBQUlRLFNBQVMsQ0FBQ0QsR0FBRyxRQUFRO1FBQ2xFO1FBQ0EsSUFBSUQsS0FBSztZQUNMRCxTQUFTLFNBQVVoQixTQUFVRiwwREFBTUEsQ0FBQ00sS0FBSyxDQUFDLEVBQUUsR0FBRztRQUNuRDtRQUNBLE9BQU8sU0FBVSxDQUFDTCw4Q0FBR0EsR0FBSUEsOENBQUdBO0lBQ2hDO0lBQ0EsT0FBUVU7UUFDSixLQUFLO1lBQ0QsT0FBT1gsMERBQU1BLENBQUM7UUFDbEIsS0FBSztZQUNELE9BQU9BLDBEQUFNQSxDQUFDTSxLQUFLLENBQUMsRUFBRTtRQUMxQixLQUFLO1lBQ0QsT0FBT04sMERBQU1BLENBQUNNLEtBQUssQ0FBQyxFQUFFLEdBQUlBLENBQUFBLEtBQUssQ0FBQyxFQUFFLElBQUk7UUFDMUMsS0FBSztZQUNELE9BQU9OLDBEQUFNQSxDQUFDTSxLQUFLLENBQUMsRUFBRSxHQUFJQSxDQUFBQSxLQUFLLENBQUMsRUFBRSxJQUFJLEtBQU1BLENBQUFBLEtBQUssQ0FBQyxFQUFFLElBQUksRUFBQyxJQUFNQSxLQUFLLENBQUMsRUFBRSxHQUFHO0lBQ2xGO0lBQ0EsTUFBTU8sTUFBTSxJQUFJQyxTQUFTUixNQUFNUyxNQUFNLEVBQUVULE1BQU1VLFVBQVU7SUFDdkQsT0FBUUw7UUFDSixLQUFLO1lBQ0QsT0FBT0UsSUFBSVMsWUFBWSxDQUFDLEdBQUc7UUFDL0IsS0FBSztZQUNELE9BQU8sSUFBS0EsWUFBWSxDQUFDLEdBQUcsUUFBUWxCLFVBQVdTLElBQUlTLFlBQVksQ0FBQyxHQUFHO1FBQ3ZFO1lBQVM7Z0JBQ0wsSUFBSUosU0FBU2xCLDBEQUFNQSxDQUFDO2dCQUNwQixNQUFNbUIsTUFBTVIsUUFBUTtnQkFDcEIsSUFBSyxJQUFJUyxJQUFJVCxRQUFRLEdBQUdTLEtBQUtELEtBQUtDLEtBQUssRUFBRztvQkFDdENGLFNBQVMsU0FBVWYsVUFBV0gsMERBQU1BLENBQUNhLElBQUlRLFNBQVMsQ0FBQ0QsR0FBRztnQkFDMUQ7Z0JBQ0EsSUFBSUQsS0FBSztvQkFDTEQsU0FBUyxTQUFVaEIsU0FBVUYsMERBQU1BLENBQUNNLEtBQUssQ0FBQyxFQUFFO2dCQUNoRDtnQkFDQSxPQUFPWTtZQUNYO0lBQ0o7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvdThhL3RvQmlnSW50LmpzPzBmOGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmlnSW50IH0gZnJvbSAnQHBvbGthZG90L3gtYmlnaW50JztcbmltcG9ydCB7IF8xbiB9IGZyb20gJy4uL2JpL2NvbnN0cy5qcyc7XG5jb25zdCBVOF9NQVggPSBCaWdJbnQoMjU2KTtcbmNvbnN0IFUxNl9NQVggPSBCaWdJbnQoMjU2ICogMjU2KTtcbmNvbnN0IFU2NF9NQVggPSBCaWdJbnQoJzB4MTAwMDAwMDAwMDAwMDAwMDAnKTtcbi8qKlxuICogQG5hbWUgdThhVG9CaWdJbnRcbiAqIEBzdW1tYXJ5IENyZWF0ZXMgYSBCaWdJbnQgZnJvbSBhIFVpbnQ4QXJyYXkgb2JqZWN0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gdThhVG9CaWdJbnQodmFsdWUsIHsgaXNMZSA9IHRydWUsIGlzTmVnYXRpdmUgPSBmYWxzZSB9ID0ge30pIHtcbiAgICAvLyBzbGljZSArIHJldmVyc2UgaXMgZXhwZW5zaXZlLCBob3dldmVyIFNDQUxFIGlzIExFIGJ5IGRlZmF1bHQgc28gdGhpcyBpcyB0aGUgcGF0aFxuICAgIC8vIHdlIGFyZSBtb3N0IGludGVyZXN0ZWQgaW4gKHRoZSBCRSBpcyBhZGRlZCBmb3IgdGhlIHNha2Ugb2YgYmVpbmcgY29tcHJlaGVuc2l2ZSlcbiAgICBpZiAoIWlzTGUpIHtcbiAgICAgICAgdmFsdWUgPSB2YWx1ZS5zbGljZSgpLnJldmVyc2UoKTtcbiAgICB9XG4gICAgY29uc3QgY291bnQgPSB2YWx1ZS5sZW5ndGg7XG4gICAgaWYgKGlzTmVnYXRpdmUgJiYgY291bnQgJiYgKHZhbHVlW2NvdW50IC0gMV0gJiAweDgwKSkge1xuICAgICAgICBzd2l0Y2ggKGNvdW50KSB7XG4gICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgcmV0dXJuIEJpZ0ludCgwKTtcbiAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICByZXR1cm4gQmlnSW50KCgodmFsdWVbMF0gXiAweDAwMDBfMDBmZikgKiAtMSkgLSAxKTtcbiAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICByZXR1cm4gQmlnSW50KCgoKHZhbHVlWzBdICsgKHZhbHVlWzFdIDw8IDgpKSBeIDB4MDAwMF9mZmZmKSAqIC0xKSAtIDEpO1xuICAgICAgICAgICAgY2FzZSA0OlxuICAgICAgICAgICAgICAgIHJldHVybiBCaWdJbnQoKCgodmFsdWVbMF0gKyAodmFsdWVbMV0gPDwgOCkgKyAodmFsdWVbMl0gPDwgMTYpICsgKHZhbHVlWzNdICogMHgxXzAwXzAwXzAwKSkgXiAweGZmZmZfZmZmZikgKiAtMSkgLSAxKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBkdkkgPSBuZXcgRGF0YVZpZXcodmFsdWUuYnVmZmVyLCB2YWx1ZS5ieXRlT2Zmc2V0KTtcbiAgICAgICAgaWYgKGNvdW50ID09PSA4KSB7XG4gICAgICAgICAgICByZXR1cm4gZHZJLmdldEJpZ0ludDY0KDAsIHRydWUpO1xuICAgICAgICB9XG4gICAgICAgIGxldCByZXN1bHQgPSBCaWdJbnQoMCk7XG4gICAgICAgIGNvbnN0IG1vZCA9IGNvdW50ICUgMjtcbiAgICAgICAgZm9yIChsZXQgaSA9IGNvdW50IC0gMjsgaSA+PSBtb2Q7IGkgLT0gMikge1xuICAgICAgICAgICAgcmVzdWx0ID0gKHJlc3VsdCAqIFUxNl9NQVgpICsgQmlnSW50KGR2SS5nZXRVaW50MTYoaSwgdHJ1ZSkgXiAweGZmZmYpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChtb2QpIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IChyZXN1bHQgKiBVOF9NQVgpICsgQmlnSW50KHZhbHVlWzBdIF4gMHhmZik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIChyZXN1bHQgKiAtXzFuKSAtIF8xbjtcbiAgICB9XG4gICAgc3dpdGNoIChjb3VudCkge1xuICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICByZXR1cm4gQmlnSW50KDApO1xuICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICByZXR1cm4gQmlnSW50KHZhbHVlWzBdKTtcbiAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgcmV0dXJuIEJpZ0ludCh2YWx1ZVswXSArICh2YWx1ZVsxXSA8PCA4KSk7XG4gICAgICAgIGNhc2UgNDpcbiAgICAgICAgICAgIHJldHVybiBCaWdJbnQodmFsdWVbMF0gKyAodmFsdWVbMV0gPDwgOCkgKyAodmFsdWVbMl0gPDwgMTYpICsgKHZhbHVlWzNdICogMHgxXzAwXzAwXzAwKSk7XG4gICAgfVxuICAgIGNvbnN0IGR2SSA9IG5ldyBEYXRhVmlldyh2YWx1ZS5idWZmZXIsIHZhbHVlLmJ5dGVPZmZzZXQpO1xuICAgIHN3aXRjaCAoY291bnQpIHtcbiAgICAgICAgY2FzZSA4OlxuICAgICAgICAgICAgcmV0dXJuIGR2SS5nZXRCaWdVaW50NjQoMCwgdHJ1ZSk7XG4gICAgICAgIGNhc2UgMTY6XG4gICAgICAgICAgICByZXR1cm4gKGR2SS5nZXRCaWdVaW50NjQoOCwgdHJ1ZSkgKiBVNjRfTUFYKSArIGR2SS5nZXRCaWdVaW50NjQoMCwgdHJ1ZSk7XG4gICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgIGxldCByZXN1bHQgPSBCaWdJbnQoMCk7XG4gICAgICAgICAgICBjb25zdCBtb2QgPSBjb3VudCAlIDI7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gY291bnQgLSAyOyBpID49IG1vZDsgaSAtPSAyKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gKHJlc3VsdCAqIFUxNl9NQVgpICsgQmlnSW50KGR2SS5nZXRVaW50MTYoaSwgdHJ1ZSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1vZCkge1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IChyZXN1bHQgKiBVOF9NQVgpICsgQmlnSW50KHZhbHVlWzBdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXSwibmFtZXMiOlsiQmlnSW50IiwiXzFuIiwiVThfTUFYIiwiVTE2X01BWCIsIlU2NF9NQVgiLCJ1OGFUb0JpZ0ludCIsInZhbHVlIiwiaXNMZSIsImlzTmVnYXRpdmUiLCJzbGljZSIsInJldmVyc2UiLCJjb3VudCIsImxlbmd0aCIsImR2SSIsIkRhdGFWaWV3IiwiYnVmZmVyIiwiYnl0ZU9mZnNldCIsImdldEJpZ0ludDY0IiwicmVzdWx0IiwibW9kIiwiaSIsImdldFVpbnQxNiIsImdldEJpZ1VpbnQ2NCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/u8a/toBigInt.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/u8a/toBn.js":
/*!*************************************************!*\
  !*** ./node_modules/@polkadot/util/u8a/toBn.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   u8aToBn: function() { return /* binding */ u8aToBn; }\n/* harmony export */ });\n/* harmony import */ var _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bn/bn.js */ \"(app-pages-browser)/./node_modules/bn.js/lib/bn.js\");\n\n/**\n * @name u8aToBn\n * @summary Creates a BN from a Uint8Array object.\n * @description\n * `UInt8Array` input values return the actual BN. `null` or `undefined` values returns an `0x0` value.\n * @param value The value to convert\n * @param options Options to pass while converting\n * @param options.isLe Convert using Little Endian (default)\n * @param options.isNegative Convert using two's complement\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToBn } from '@polkadot/util';\n *\n * u8aToHex(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0xf])); // 0x68656c0f\n * ```\n */ function u8aToBn(value) {\n    let { isLe = true, isNegative = false } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    // slice + reverse is expensive, however SCALE is LE by default so this is the path\n    // we are most interested in (the BE is added for the sake of being comprehensive)\n    if (!isLe) {\n        value = value.slice().reverse();\n    }\n    const count = value.length;\n    // shortcut for <= u48 values - in this case the manual conversion\n    // here seems to be more efficient than passing the full array\n    if (isNegative && count && value[count - 1] & 0x80) {\n        // Most common case i{8, 16, 32} default LE SCALE-encoded\n        // For <= 32, we also optimize the xor to a single op\n        switch(count){\n            case 0:\n                return new _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__(0);\n            case 1:\n                return new _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__((value[0] ^ 0x000000ff) * -1 - 1);\n            case 2:\n                return new _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__((value[0] + (value[1] << 8) ^ 0x0000ffff) * -1 - 1);\n            case 3:\n                return new _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__((value[0] + (value[1] << 8) + (value[2] << 16) ^ 0x00ffffff) * -1 - 1);\n            case 4:\n                // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to\n                // 32-bit, in the case where the top-most bit is set this yields a negative value\n                return new _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__((value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000 ^ 0xffffffff) * -1 - 1);\n            case 5:\n                return new _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__(((value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000 ^ 0xffffffff) + (value[4] ^ 0xff) * 0x100000000) * -1 - 1);\n            case 6:\n                return new _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__(((value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000 ^ 0xffffffff) + (value[4] + (value[5] << 8) ^ 0x0000ffff) * 0x100000000) * -1 - 1);\n            default:\n                return new _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__(value, \"le\").fromTwos(count * 8);\n        }\n    }\n    // Most common case - u{8, 16, 32} default LE SCALE-encoded\n    //\n    // There are some slight benefits in unrolling this specific loop,\n    // however it comes with diminishing returns since here the actual\n    // `new BN` does seem to take up the bulk of the time\n    switch(count){\n        case 0:\n            return new _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__(0);\n        case 1:\n            return new _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__(value[0]);\n        case 2:\n            return new _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__(value[0] + (value[1] << 8));\n        case 3:\n            return new _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__(value[0] + (value[1] << 8) + (value[2] << 16));\n        case 4:\n            // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to\n            // 32-bit, in the case where the top-most bit is set this yields a negative value\n            return new _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__(value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000);\n        case 5:\n            return new _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__(value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] + (value[4] << 8)) * 0x1000000);\n        case 6:\n            return new _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__(value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] + (value[4] << 8) + (value[5] << 16)) * 0x1000000);\n        default:\n            return new _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__(value, \"le\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/u8a/toBn.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/u8a/toString.js":
/*!*****************************************************!*\
  !*** ./node_modules/@polkadot/util/u8a/toString.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   u8aToString: function() { return /* binding */ u8aToString; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_x_textdecoder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/x-textdecoder */ \"(app-pages-browser)/./node_modules/@polkadot/x-textdecoder/browser.js\");\n\nconst decoder = new _polkadot_x_textdecoder__WEBPACK_IMPORTED_MODULE_0__.TextDecoder(\"utf-8\");\n/**\n * @name u8aToString\n * @summary Creates a utf-8 string from a Uint8Array object.\n * @description\n * `UInt8Array` input values return the actual decoded utf-8 string. `null` or `undefined` values returns an empty string.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToString } from '@polkadot/util';\n *\n * u8aToString(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0x6f])); // hello\n * ```\n */ function u8aToString(value) {\n    return value ? decoder.decode(value) : \"\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC91OGEvdG9TdHJpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0Q7QUFDdEQsTUFBTUMsVUFBVSxJQUFJRCxnRUFBV0EsQ0FBQztBQUNoQzs7Ozs7Ozs7Ozs7OztDQWFDLEdBQ00sU0FBU0UsWUFBWUMsS0FBSztJQUM3QixPQUFPQSxRQUNERixRQUFRRyxNQUFNLENBQUNELFNBQ2Y7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvdThhL3RvU3RyaW5nLmpzPzY3ZWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGV4dERlY29kZXIgfSBmcm9tICdAcG9sa2Fkb3QveC10ZXh0ZGVjb2Rlcic7XG5jb25zdCBkZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKCd1dGYtOCcpO1xuLyoqXG4gKiBAbmFtZSB1OGFUb1N0cmluZ1xuICogQHN1bW1hcnkgQ3JlYXRlcyBhIHV0Zi04IHN0cmluZyBmcm9tIGEgVWludDhBcnJheSBvYmplY3QuXG4gKiBAZGVzY3JpcHRpb25cbiAqIGBVSW50OEFycmF5YCBpbnB1dCB2YWx1ZXMgcmV0dXJuIHRoZSBhY3R1YWwgZGVjb2RlZCB1dGYtOCBzdHJpbmcuIGBudWxsYCBvciBgdW5kZWZpbmVkYCB2YWx1ZXMgcmV0dXJucyBhbiBlbXB0eSBzdHJpbmcuXG4gKiBAZXhhbXBsZVxuICogPEJSPlxuICpcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGltcG9ydCB7IHU4YVRvU3RyaW5nIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuICpcbiAqIHU4YVRvU3RyaW5nKG5ldyBVaW50OEFycmF5KFsweDY4LCAweDY1LCAweDZjLCAweDZjLCAweDZmXSkpOyAvLyBoZWxsb1xuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1OGFUb1N0cmluZyh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZVxuICAgICAgICA/IGRlY29kZXIuZGVjb2RlKHZhbHVlKVxuICAgICAgICA6ICcnO1xufVxuIl0sIm5hbWVzIjpbIlRleHREZWNvZGVyIiwiZGVjb2RlciIsInU4YVRvU3RyaW5nIiwidmFsdWUiLCJkZWNvZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/u8a/toString.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js":
/*!**************************************************!*\
  !*** ./node_modules/@polkadot/util/u8a/toU8a.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   u8aToU8a: function() { return /* binding */ u8aToU8a; }\n/* harmony export */ });\n/* harmony import */ var _hex_toU8a_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hex/toU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/hex/toU8a.js\");\n/* harmony import */ var _is_buffer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../is/buffer.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/buffer.js\");\n/* harmony import */ var _is_hex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../is/hex.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/hex.js\");\n/* harmony import */ var _is_u8a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../is/u8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/is/u8a.js\");\n/* harmony import */ var _string_toU8a_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../string/toU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/string/toU8a.js\");\n\n\n\n\n\n/**\n * @name u8aToU8a\n * @summary Creates a Uint8Array value from a Uint8Array, Buffer, string or hex input.\n * @description\n * `null` or `undefined` inputs returns a `[]` result, Uint8Array values returns the value, hex strings returns a Uint8Array representation.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToU8a } from '@polkadot/util';\n *\n * u8aToU8a(new Uint8Array([0x12, 0x34]); // => Uint8Array([0x12, 0x34])\n * u8aToU8a(0x1234); // => Uint8Array([0x12, 0x34])\n * ```\n */ function u8aToU8a(value) {\n    return (0,_is_u8a_js__WEBPACK_IMPORTED_MODULE_0__.isU8a)(value) ? (0,_is_buffer_js__WEBPACK_IMPORTED_MODULE_1__.isBuffer)(value) ? new Uint8Array(value) : value : (0,_is_hex_js__WEBPACK_IMPORTED_MODULE_2__.isHex)(value) ? (0,_hex_toU8a_js__WEBPACK_IMPORTED_MODULE_3__.hexToU8a)(value) : Array.isArray(value) ? new Uint8Array(value) : (0,_string_toU8a_js__WEBPACK_IMPORTED_MODULE_4__.stringToU8a)(value);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC91OGEvdG9VOGEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTJDO0FBQ0E7QUFDTjtBQUNBO0FBQ1k7QUFDakQ7Ozs7Ozs7Ozs7Ozs7O0NBY0MsR0FDTSxTQUFTSyxTQUFTQyxLQUFLO0lBQzFCLE9BQU9ILGlEQUFLQSxDQUFDRyxTQUlQTCx1REFBUUEsQ0FBQ0ssU0FDTCxJQUFJQyxXQUFXRCxTQUNmQSxRQUNKSixpREFBS0EsQ0FBQ0ksU0FDRk4sdURBQVFBLENBQUNNLFNBQ1RFLE1BQU1DLE9BQU8sQ0FBQ0gsU0FDVixJQUFJQyxXQUFXRCxTQUNmRiw2REFBV0EsQ0FBQ0U7QUFDOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsL3U4YS90b1U4YS5qcz83OTc2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGhleFRvVThhIH0gZnJvbSAnLi4vaGV4L3RvVThhLmpzJztcbmltcG9ydCB7IGlzQnVmZmVyIH0gZnJvbSAnLi4vaXMvYnVmZmVyLmpzJztcbmltcG9ydCB7IGlzSGV4IH0gZnJvbSAnLi4vaXMvaGV4LmpzJztcbmltcG9ydCB7IGlzVThhIH0gZnJvbSAnLi4vaXMvdThhLmpzJztcbmltcG9ydCB7IHN0cmluZ1RvVThhIH0gZnJvbSAnLi4vc3RyaW5nL3RvVThhLmpzJztcbi8qKlxuICogQG5hbWUgdThhVG9VOGFcbiAqIEBzdW1tYXJ5IENyZWF0ZXMgYSBVaW50OEFycmF5IHZhbHVlIGZyb20gYSBVaW50OEFycmF5LCBCdWZmZXIsIHN0cmluZyBvciBoZXggaW5wdXQuXG4gKiBAZGVzY3JpcHRpb25cbiAqIGBudWxsYCBvciBgdW5kZWZpbmVkYCBpbnB1dHMgcmV0dXJucyBhIGBbXWAgcmVzdWx0LCBVaW50OEFycmF5IHZhbHVlcyByZXR1cm5zIHRoZSB2YWx1ZSwgaGV4IHN0cmluZ3MgcmV0dXJucyBhIFVpbnQ4QXJyYXkgcmVwcmVzZW50YXRpb24uXG4gKiBAZXhhbXBsZVxuICogPEJSPlxuICpcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGltcG9ydCB7IHU4YVRvVThhIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuICpcbiAqIHU4YVRvVThhKG5ldyBVaW50OEFycmF5KFsweDEyLCAweDM0XSk7IC8vID0+IFVpbnQ4QXJyYXkoWzB4MTIsIDB4MzRdKVxuICogdThhVG9VOGEoMHgxMjM0KTsgLy8gPT4gVWludDhBcnJheShbMHgxMiwgMHgzNF0pXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHU4YVRvVThhKHZhbHVlKSB7XG4gICAgcmV0dXJuIGlzVThhKHZhbHVlKVxuICAgICAgICAvLyBOT1RFIGlzQnVmZmVyIG5lZWRzIHRvIGdvIGhlcmUgc2luY2UgaXQgYWN0dWFsbHkgZXh0ZW5kc1xuICAgICAgICAvLyBVaW50OEFycmF5IG9uIE5vZGUuanMgZW52aXJvbm1lbnRzLCBzbyBhbGwgQnVmZmVyIGFyZSBVaW50OEFycmF5LFxuICAgICAgICAvLyBidXQgVWludDhBcnJheSBpcyBub3QgQnVmZmVyXG4gICAgICAgID8gaXNCdWZmZXIodmFsdWUpXG4gICAgICAgICAgICA/IG5ldyBVaW50OEFycmF5KHZhbHVlKVxuICAgICAgICAgICAgOiB2YWx1ZVxuICAgICAgICA6IGlzSGV4KHZhbHVlKVxuICAgICAgICAgICAgPyBoZXhUb1U4YSh2YWx1ZSlcbiAgICAgICAgICAgIDogQXJyYXkuaXNBcnJheSh2YWx1ZSlcbiAgICAgICAgICAgICAgICA/IG5ldyBVaW50OEFycmF5KHZhbHVlKVxuICAgICAgICAgICAgICAgIDogc3RyaW5nVG9VOGEodmFsdWUpO1xufVxuIl0sIm5hbWVzIjpbImhleFRvVThhIiwiaXNCdWZmZXIiLCJpc0hleCIsImlzVThhIiwic3RyaW5nVG9VOGEiLCJ1OGFUb1U4YSIsInZhbHVlIiwiVWludDhBcnJheSIsIkFycmF5IiwiaXNBcnJheSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/util/u8a/wrap.js":
/*!*************************************************!*\
  !*** ./node_modules/@polkadot/util/u8a/wrap.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   U8A_WRAP_ETHEREUM: function() { return /* binding */ U8A_WRAP_ETHEREUM; },\n/* harmony export */   U8A_WRAP_POSTFIX: function() { return /* binding */ U8A_WRAP_POSTFIX; },\n/* harmony export */   U8A_WRAP_PREFIX: function() { return /* binding */ U8A_WRAP_PREFIX; },\n/* harmony export */   u8aIsWrapped: function() { return /* binding */ u8aIsWrapped; },\n/* harmony export */   u8aUnwrapBytes: function() { return /* binding */ u8aUnwrapBytes; },\n/* harmony export */   u8aWrapBytes: function() { return /* binding */ u8aWrapBytes; }\n/* harmony export */ });\n/* harmony import */ var _concat_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./concat.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/concat.js\");\n/* harmony import */ var _eq_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./eq.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/eq.js\");\n/* harmony import */ var _toU8a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toU8a.js */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n\n\n\n/** @internal */ const U8A_WRAP_ETHEREUM = /*#__PURE__*/ (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(\"\\x19Ethereum Signed Message:\\n\");\n/** @internal */ const U8A_WRAP_PREFIX = /*#__PURE__*/ (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(\"<Bytes>\");\n/** @internal */ const U8A_WRAP_POSTFIX = /*#__PURE__*/ (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(\"</Bytes>\");\nconst WRAP_LEN = U8A_WRAP_PREFIX.length + U8A_WRAP_POSTFIX.length;\n/** @internal */ function u8aIsWrapped(u8a, withEthereum) {\n    return u8a.length >= WRAP_LEN && (0,_eq_js__WEBPACK_IMPORTED_MODULE_1__.u8aEq)(u8a.subarray(0, U8A_WRAP_PREFIX.length), U8A_WRAP_PREFIX) && (0,_eq_js__WEBPACK_IMPORTED_MODULE_1__.u8aEq)(u8a.slice(-U8A_WRAP_POSTFIX.length), U8A_WRAP_POSTFIX) || withEthereum && u8a.length >= U8A_WRAP_ETHEREUM.length && (0,_eq_js__WEBPACK_IMPORTED_MODULE_1__.u8aEq)(u8a.subarray(0, U8A_WRAP_ETHEREUM.length), U8A_WRAP_ETHEREUM);\n}\n/**\n * @name u8aUnwrapBytes\n * @description Removes all <Bytes>...</Bytes> wrappers from the supplied value\n */ function u8aUnwrapBytes(bytes) {\n    const u8a = (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(bytes);\n    // we don't want to unwrap Ethereum-style wraps\n    return u8aIsWrapped(u8a, false) ? u8a.subarray(U8A_WRAP_PREFIX.length, u8a.length - U8A_WRAP_POSTFIX.length) : u8a;\n}\n/**\n * @name u8aWrapBytes\n * @description\n * Adds a <Bytes>...</Bytes> wrapper to the supplied value, if\n * - We don't already have a Bytes wrapper\n * - The message is not an Ethereum-style message\n */ function u8aWrapBytes(bytes) {\n    const u8a = (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(bytes);\n    return u8aIsWrapped(u8a, true) ? u8a : (0,_concat_js__WEBPACK_IMPORTED_MODULE_2__.u8aConcatStrict)([\n        U8A_WRAP_PREFIX,\n        u8a,\n        U8A_WRAP_POSTFIX\n    ]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC91OGEvd3JhcC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBOEM7QUFDZDtBQUNNO0FBQ3RDLGNBQWMsR0FDUCxNQUFNRyxvQkFBb0IsV0FBVyxHQUFHRCxtREFBUUEsQ0FBQyxrQ0FBa0M7QUFDMUYsY0FBYyxHQUNQLE1BQU1FLGtCQUFrQixXQUFXLEdBQUdGLG1EQUFRQSxDQUFDLFdBQVc7QUFDakUsY0FBYyxHQUNQLE1BQU1HLG1CQUFtQixXQUFXLEdBQUdILG1EQUFRQSxDQUFDLFlBQVk7QUFDbkUsTUFBTUksV0FBV0YsZ0JBQWdCRyxNQUFNLEdBQUdGLGlCQUFpQkUsTUFBTTtBQUNqRSxjQUFjLEdBQ1AsU0FBU0MsYUFBYUMsR0FBRyxFQUFFQyxZQUFZO0lBQzFDLE9BQVEsSUFBS0gsTUFBTSxJQUFJRCxZQUNuQkwsNkNBQUtBLENBQUNRLElBQUlFLFFBQVEsQ0FBQyxHQUFHUCxnQkFBZ0JHLE1BQU0sR0FBR0gsb0JBQy9DSCw2Q0FBS0EsQ0FBQ1EsSUFBSUcsS0FBSyxDQUFDLENBQUNQLGlCQUFpQkUsTUFBTSxHQUFHRixxQkFDMUNLLGdCQUNHRCxJQUFJRixNQUFNLElBQUlKLGtCQUFrQkksTUFBTSxJQUN0Q04sNkNBQUtBLENBQUNRLElBQUlFLFFBQVEsQ0FBQyxHQUFHUixrQkFBa0JJLE1BQU0sR0FBR0o7QUFDN0Q7QUFDQTs7O0NBR0MsR0FDTSxTQUFTVSxlQUFlQyxLQUFLO0lBQ2hDLE1BQU1MLE1BQU1QLG1EQUFRQSxDQUFDWTtJQUNyQiwrQ0FBK0M7SUFDL0MsT0FBT04sYUFBYUMsS0FBSyxTQUNuQkEsSUFBSUUsUUFBUSxDQUFDUCxnQkFBZ0JHLE1BQU0sRUFBRUUsSUFBSUYsTUFBTSxHQUFHRixpQkFBaUJFLE1BQU0sSUFDekVFO0FBQ1Y7QUFDQTs7Ozs7O0NBTUMsR0FDTSxTQUFTTSxhQUFhRCxLQUFLO0lBQzlCLE1BQU1MLE1BQU1QLG1EQUFRQSxDQUFDWTtJQUNyQixPQUFPTixhQUFhQyxLQUFLLFFBQ25CQSxNQUNBVCwyREFBZUEsQ0FBQztRQUFDSTtRQUFpQks7UUFBS0o7S0FBaUI7QUFDbEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsL3U4YS93cmFwLmpzPzUzYTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdThhQ29uY2F0U3RyaWN0IH0gZnJvbSAnLi9jb25jYXQuanMnO1xuaW1wb3J0IHsgdThhRXEgfSBmcm9tICcuL2VxLmpzJztcbmltcG9ydCB7IHU4YVRvVThhIH0gZnJvbSAnLi90b1U4YS5qcyc7XG4vKiogQGludGVybmFsICovXG5leHBvcnQgY29uc3QgVThBX1dSQVBfRVRIRVJFVU0gPSAvKiNfX1BVUkVfXyovIHU4YVRvVThhKCdcXHgxOUV0aGVyZXVtIFNpZ25lZCBNZXNzYWdlOlxcbicpO1xuLyoqIEBpbnRlcm5hbCAqL1xuZXhwb3J0IGNvbnN0IFU4QV9XUkFQX1BSRUZJWCA9IC8qI19fUFVSRV9fKi8gdThhVG9VOGEoJzxCeXRlcz4nKTtcbi8qKiBAaW50ZXJuYWwgKi9cbmV4cG9ydCBjb25zdCBVOEFfV1JBUF9QT1NURklYID0gLyojX19QVVJFX18qLyB1OGFUb1U4YSgnPC9CeXRlcz4nKTtcbmNvbnN0IFdSQVBfTEVOID0gVThBX1dSQVBfUFJFRklYLmxlbmd0aCArIFU4QV9XUkFQX1BPU1RGSVgubGVuZ3RoO1xuLyoqIEBpbnRlcm5hbCAqL1xuZXhwb3J0IGZ1bmN0aW9uIHU4YUlzV3JhcHBlZCh1OGEsIHdpdGhFdGhlcmV1bSkge1xuICAgIHJldHVybiAoKHU4YS5sZW5ndGggPj0gV1JBUF9MRU4gJiZcbiAgICAgICAgdThhRXEodThhLnN1YmFycmF5KDAsIFU4QV9XUkFQX1BSRUZJWC5sZW5ndGgpLCBVOEFfV1JBUF9QUkVGSVgpICYmXG4gICAgICAgIHU4YUVxKHU4YS5zbGljZSgtVThBX1dSQVBfUE9TVEZJWC5sZW5ndGgpLCBVOEFfV1JBUF9QT1NURklYKSkgfHxcbiAgICAgICAgKHdpdGhFdGhlcmV1bSAmJlxuICAgICAgICAgICAgdThhLmxlbmd0aCA+PSBVOEFfV1JBUF9FVEhFUkVVTS5sZW5ndGggJiZcbiAgICAgICAgICAgIHU4YUVxKHU4YS5zdWJhcnJheSgwLCBVOEFfV1JBUF9FVEhFUkVVTS5sZW5ndGgpLCBVOEFfV1JBUF9FVEhFUkVVTSkpKTtcbn1cbi8qKlxuICogQG5hbWUgdThhVW53cmFwQnl0ZXNcbiAqIEBkZXNjcmlwdGlvbiBSZW1vdmVzIGFsbCA8Qnl0ZXM+Li4uPC9CeXRlcz4gd3JhcHBlcnMgZnJvbSB0aGUgc3VwcGxpZWQgdmFsdWVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHU4YVVud3JhcEJ5dGVzKGJ5dGVzKSB7XG4gICAgY29uc3QgdThhID0gdThhVG9VOGEoYnl0ZXMpO1xuICAgIC8vIHdlIGRvbid0IHdhbnQgdG8gdW53cmFwIEV0aGVyZXVtLXN0eWxlIHdyYXBzXG4gICAgcmV0dXJuIHU4YUlzV3JhcHBlZCh1OGEsIGZhbHNlKVxuICAgICAgICA/IHU4YS5zdWJhcnJheShVOEFfV1JBUF9QUkVGSVgubGVuZ3RoLCB1OGEubGVuZ3RoIC0gVThBX1dSQVBfUE9TVEZJWC5sZW5ndGgpXG4gICAgICAgIDogdThhO1xufVxuLyoqXG4gKiBAbmFtZSB1OGFXcmFwQnl0ZXNcbiAqIEBkZXNjcmlwdGlvblxuICogQWRkcyBhIDxCeXRlcz4uLi48L0J5dGVzPiB3cmFwcGVyIHRvIHRoZSBzdXBwbGllZCB2YWx1ZSwgaWZcbiAqIC0gV2UgZG9uJ3QgYWxyZWFkeSBoYXZlIGEgQnl0ZXMgd3JhcHBlclxuICogLSBUaGUgbWVzc2FnZSBpcyBub3QgYW4gRXRoZXJldW0tc3R5bGUgbWVzc2FnZVxuICovXG5leHBvcnQgZnVuY3Rpb24gdThhV3JhcEJ5dGVzKGJ5dGVzKSB7XG4gICAgY29uc3QgdThhID0gdThhVG9VOGEoYnl0ZXMpO1xuICAgIHJldHVybiB1OGFJc1dyYXBwZWQodThhLCB0cnVlKVxuICAgICAgICA/IHU4YVxuICAgICAgICA6IHU4YUNvbmNhdFN0cmljdChbVThBX1dSQVBfUFJFRklYLCB1OGEsIFU4QV9XUkFQX1BPU1RGSVhdKTtcbn1cbiJdLCJuYW1lcyI6WyJ1OGFDb25jYXRTdHJpY3QiLCJ1OGFFcSIsInU4YVRvVThhIiwiVThBX1dSQVBfRVRIRVJFVU0iLCJVOEFfV1JBUF9QUkVGSVgiLCJVOEFfV1JBUF9QT1NURklYIiwiV1JBUF9MRU4iLCJsZW5ndGgiLCJ1OGFJc1dyYXBwZWQiLCJ1OGEiLCJ3aXRoRXRoZXJldW0iLCJzdWJhcnJheSIsInNsaWNlIiwidThhVW53cmFwQnl0ZXMiLCJieXRlcyIsInU4YVdyYXBCeXRlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/util/u8a/wrap.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/wasm-bridge/bridge.js":
/*!******************************************************!*\
  !*** ./node_modules/@polkadot/wasm-bridge/bridge.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bridge: function() { return /* binding */ Bridge; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/u8a/toString.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(app-pages-browser)/./node_modules/@polkadot/util/string/toU8a.js\");\n/* harmony import */ var _wbg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wbg.js */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-bridge/wbg.js\");\n\n\n/**\n * @name Bridge\n * @description\n * Creates a bridge between the JS and WASM environments.\n *\n * For any bridge it is passed an function which is then called internally at the\n * time of initialization. This affectively implements the layer between WASM and\n * the native environment, providing all the plumbing needed for the Wbg classes.\n */\nclass Bridge {\n    __internal__createWasm;\n    __internal__heap;\n    __internal__wbg;\n    __internal__cachegetInt32;\n    __internal__cachegetUint8;\n    __internal__heapNext;\n    __internal__wasm;\n    __internal__wasmError;\n    __internal__wasmPromise;\n    __internal__type;\n    constructor(createWasm) {\n        this.__internal__createWasm = createWasm;\n        this.__internal__cachegetInt32 = null;\n        this.__internal__cachegetUint8 = null;\n        this.__internal__heap = new Array(32)\n            .fill(undefined)\n            .concat(undefined, null, true, false);\n        this.__internal__heapNext = this.__internal__heap.length;\n        this.__internal__type = 'none';\n        this.__internal__wasm = null;\n        this.__internal__wasmError = null;\n        this.__internal__wasmPromise = null;\n        this.__internal__wbg = { ...new _wbg_js__WEBPACK_IMPORTED_MODULE_0__.Wbg(this) };\n    }\n    /** @description Returns the init error */\n    get error() {\n        return this.__internal__wasmError;\n    }\n    /** @description Returns the init type */\n    get type() {\n        return this.__internal__type;\n    }\n    /** @description Returns the created wasm interface */\n    get wasm() {\n        return this.__internal__wasm;\n    }\n    /** @description Performs the wasm initialization */\n    async init(createWasm) {\n        if (!this.__internal__wasmPromise || createWasm) {\n            this.__internal__wasmPromise = (createWasm || this.__internal__createWasm)(this.__internal__wbg);\n        }\n        const { error, type, wasm } = await this.__internal__wasmPromise;\n        this.__internal__type = type;\n        this.__internal__wasm = wasm;\n        this.__internal__wasmError = error;\n        return this.__internal__wasm;\n    }\n    /**\n     * @internal\n     * @description Gets an object from the heap\n     */\n    getObject(idx) {\n        return this.__internal__heap[idx];\n    }\n    /**\n     * @internal\n     * @description Removes an object from the heap\n     */\n    dropObject(idx) {\n        if (idx < 36) {\n            return;\n        }\n        this.__internal__heap[idx] = this.__internal__heapNext;\n        this.__internal__heapNext = idx;\n    }\n    /**\n     * @internal\n     * @description Retrieves and removes an object to the heap\n     */\n    takeObject(idx) {\n        const ret = this.getObject(idx);\n        this.dropObject(idx);\n        return ret;\n    }\n    /**\n     * @internal\n     * @description Adds an object to the heap\n     */\n    addObject(obj) {\n        if (this.__internal__heapNext === this.__internal__heap.length) {\n            this.__internal__heap.push(this.__internal__heap.length + 1);\n        }\n        const idx = this.__internal__heapNext;\n        this.__internal__heapNext = this.__internal__heap[idx];\n        this.__internal__heap[idx] = obj;\n        return idx;\n    }\n    /**\n     * @internal\n     * @description Retrieve an Int32 in the WASM interface\n     */\n    getInt32() {\n        if (this.__internal__cachegetInt32 === null || this.__internal__cachegetInt32.buffer !== this.__internal__wasm.memory.buffer) {\n            this.__internal__cachegetInt32 = new Int32Array(this.__internal__wasm.memory.buffer);\n        }\n        return this.__internal__cachegetInt32;\n    }\n    /**\n     * @internal\n     * @description Retrieve an Uint8Array in the WASM interface\n     */\n    getUint8() {\n        if (this.__internal__cachegetUint8 === null || this.__internal__cachegetUint8.buffer !== this.__internal__wasm.memory.buffer) {\n            this.__internal__cachegetUint8 = new Uint8Array(this.__internal__wasm.memory.buffer);\n        }\n        return this.__internal__cachegetUint8;\n    }\n    /**\n     * @internal\n     * @description Retrieves an Uint8Array in the WASM interface\n     */\n    getU8a(ptr, len) {\n        return this.getUint8().subarray(ptr / 1, ptr / 1 + len);\n    }\n    /**\n     * @internal\n     * @description Retrieves a string in the WASM interface\n     */\n    getString(ptr, len) {\n        return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToString)(this.getU8a(ptr, len));\n    }\n    /**\n     * @internal\n     * @description Allocates an Uint8Array in the WASM interface\n     */\n    allocU8a(arg) {\n        const ptr = this.__internal__wasm.__wbindgen_malloc(arg.length * 1);\n        this.getUint8().set(arg, ptr / 1);\n        return [ptr, arg.length];\n    }\n    /**\n     * @internal\n     * @description Allocates a string in the WASM interface\n     */\n    allocString(arg) {\n        return this.allocU8a((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.stringToU8a)(arg));\n    }\n    /**\n     * @internal\n     * @description Retrieves an Uint8Array from the WASM interface\n     */\n    resultU8a() {\n        const r0 = this.getInt32()[8 / 4 + 0];\n        const r1 = this.getInt32()[8 / 4 + 1];\n        const ret = this.getU8a(r0, r1).slice();\n        this.__internal__wasm.__wbindgen_free(r0, r1 * 1);\n        return ret;\n    }\n    /**\n     * @internal\n     * @description Retrieve a string from the WASM interface\n     */\n    resultString() {\n        return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToString)(this.resultU8a());\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/wasm-bridge/bridge.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/wasm-bridge/init.js":
/*!****************************************************!*\
  !*** ./node_modules/@polkadot/wasm-bridge/init.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createWasmFn: function() { return /* binding */ createWasmFn; }\n/* harmony export */ });\n/**\n * @name createWasmFn\n * @description\n * Create a WASM (or ASM.js) creator interface based on the supplied information.\n *\n * It will attempt to create a WASM interface first and if this fails or is not available in\n * the environment, will fallback to attempting to create an ASM.js interface.\n */\nfunction createWasmFn(root, wasmBytes, asmFn) {\n    return async (wbg) => {\n        const result = {\n            error: null,\n            type: 'none',\n            wasm: null\n        };\n        try {\n            if (!wasmBytes?.length) {\n                throw new Error('No WebAssembly provided for initialization');\n            }\n            else if (typeof WebAssembly !== 'object' || typeof WebAssembly.instantiate !== 'function') {\n                throw new Error('WebAssembly is not available in your environment');\n            }\n            const source = await WebAssembly.instantiate(wasmBytes, { wbg });\n            result.wasm = source.instance.exports;\n            result.type = 'wasm';\n        }\n        catch (error) {\n            // if we have a valid supplied asm.js, return that\n            if (typeof asmFn === 'function') {\n                result.wasm = asmFn(wbg);\n                result.type = 'asm';\n            }\n            else {\n                result.error = `FATAL: Unable to initialize @polkadot/wasm-${root}:: ${error.message}`;\n                console.error(result.error);\n            }\n        }\n        return result;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3Qvd2FzbS1icmlkZ2UvaW5pdC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzRUFBc0UsS0FBSztBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZFQUE2RSxLQUFLLEtBQUssY0FBYztBQUNyRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC93YXNtLWJyaWRnZS9pbml0LmpzPzhlZmEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbmFtZSBjcmVhdGVXYXNtRm5cbiAqIEBkZXNjcmlwdGlvblxuICogQ3JlYXRlIGEgV0FTTSAob3IgQVNNLmpzKSBjcmVhdG9yIGludGVyZmFjZSBiYXNlZCBvbiB0aGUgc3VwcGxpZWQgaW5mb3JtYXRpb24uXG4gKlxuICogSXQgd2lsbCBhdHRlbXB0IHRvIGNyZWF0ZSBhIFdBU00gaW50ZXJmYWNlIGZpcnN0IGFuZCBpZiB0aGlzIGZhaWxzIG9yIGlzIG5vdCBhdmFpbGFibGUgaW5cbiAqIHRoZSBlbnZpcm9ubWVudCwgd2lsbCBmYWxsYmFjayB0byBhdHRlbXB0aW5nIHRvIGNyZWF0ZSBhbiBBU00uanMgaW50ZXJmYWNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlV2FzbUZuKHJvb3QsIHdhc21CeXRlcywgYXNtRm4pIHtcbiAgICByZXR1cm4gYXN5bmMgKHdiZykgPT4ge1xuICAgICAgICBjb25zdCByZXN1bHQgPSB7XG4gICAgICAgICAgICBlcnJvcjogbnVsbCxcbiAgICAgICAgICAgIHR5cGU6ICdub25lJyxcbiAgICAgICAgICAgIHdhc206IG51bGxcbiAgICAgICAgfTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICghd2FzbUJ5dGVzPy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIFdlYkFzc2VtYmx5IHByb3ZpZGVkIGZvciBpbml0aWFsaXphdGlvbicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodHlwZW9mIFdlYkFzc2VtYmx5ICE9PSAnb2JqZWN0JyB8fCB0eXBlb2YgV2ViQXNzZW1ibHkuaW5zdGFudGlhdGUgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1dlYkFzc2VtYmx5IGlzIG5vdCBhdmFpbGFibGUgaW4geW91ciBlbnZpcm9ubWVudCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3Qgc291cmNlID0gYXdhaXQgV2ViQXNzZW1ibHkuaW5zdGFudGlhdGUod2FzbUJ5dGVzLCB7IHdiZyB9KTtcbiAgICAgICAgICAgIHJlc3VsdC53YXNtID0gc291cmNlLmluc3RhbmNlLmV4cG9ydHM7XG4gICAgICAgICAgICByZXN1bHQudHlwZSA9ICd3YXNtJztcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIC8vIGlmIHdlIGhhdmUgYSB2YWxpZCBzdXBwbGllZCBhc20uanMsIHJldHVybiB0aGF0XG4gICAgICAgICAgICBpZiAodHlwZW9mIGFzbUZuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0Lndhc20gPSBhc21Gbih3YmcpO1xuICAgICAgICAgICAgICAgIHJlc3VsdC50eXBlID0gJ2FzbSc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXN1bHQuZXJyb3IgPSBgRkFUQUw6IFVuYWJsZSB0byBpbml0aWFsaXplIEBwb2xrYWRvdC93YXNtLSR7cm9vdH06OiAke2Vycm9yLm1lc3NhZ2V9YDtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKHJlc3VsdC5lcnJvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/wasm-bridge/init.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/wasm-bridge/wbg.js":
/*!***************************************************!*\
  !*** ./node_modules/@polkadot/wasm-bridge/wbg.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Wbg: function() { return /* binding */ Wbg; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_x_randomvalues__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/x-randomvalues */ \"(app-pages-browser)/./node_modules/@polkadot/x-randomvalues/browser.js\");\n\nconst DEFAULT_CRYPTO = { getRandomValues: _polkadot_x_randomvalues__WEBPACK_IMPORTED_MODULE_0__.getRandomValues };\nconst DEFAULT_SELF = { crypto: DEFAULT_CRYPTO };\n/**\n * @name Wbg\n * @description\n * This defines the internal interfaces that wasm-bindgen used to communicate\n * with the host layer. None of these functions are available to the user, rather\n * they are called internally from the WASM code itself.\n *\n * The interfaces here are exposed in the imports on the created WASM interfaces.\n *\n * Internally the implementation does a thin layer into the supplied bridge.\n */\nclass Wbg {\n    __internal__bridge;\n    constructor(bridge) {\n        this.__internal__bridge = bridge;\n    }\n    /** @internal */\n    abort = () => {\n        throw new Error('abort');\n    };\n    /** @internal */\n    __wbindgen_is_undefined = (idx) => {\n        return this.__internal__bridge.getObject(idx) === undefined;\n    };\n    /** @internal */\n    __wbindgen_throw = (ptr, len) => {\n        throw new Error(this.__internal__bridge.getString(ptr, len));\n    };\n    /** @internal */\n    __wbg_self_1b7a39e3a92c949c = () => {\n        return this.__internal__bridge.addObject(DEFAULT_SELF);\n    };\n    /** @internal */\n    __wbg_require_604837428532a733 = (ptr, len) => {\n        throw new Error(`Unable to require ${this.__internal__bridge.getString(ptr, len)}`);\n    };\n    /** @internal */\n    __wbg_crypto_968f1772287e2df0 = (_idx) => {\n        return this.__internal__bridge.addObject(DEFAULT_CRYPTO);\n    };\n    /** @internal */\n    __wbg_getRandomValues_a3d34b4fee3c2869 = (_idx) => {\n        return this.__internal__bridge.addObject(DEFAULT_CRYPTO.getRandomValues);\n    };\n    /** @internal */\n    __wbg_getRandomValues_f5e14ab7ac8e995d = (_arg0, ptr, len) => {\n        DEFAULT_CRYPTO.getRandomValues(this.__internal__bridge.getU8a(ptr, len));\n    };\n    /** @internal */\n    __wbg_randomFillSync_d5bd2d655fdf256a = (_idx, _ptr, _len) => {\n        throw new Error('randomFillsync is not available');\n        // getObject(idx).randomFillSync(getU8a(ptr, len));\n    };\n    /** @internal */\n    __wbindgen_object_drop_ref = (idx) => {\n        this.__internal__bridge.takeObject(idx);\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3Qvd2FzbS1icmlkZ2Uvd2JnLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTJEO0FBQzNELHlCQUF5QixlQUFlO0FBQ3hDLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2Qyw0Q0FBNEM7QUFDekY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3dhc20tYnJpZGdlL3diZy5qcz82OTk2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFJhbmRvbVZhbHVlcyB9IGZyb20gJ0Bwb2xrYWRvdC94LXJhbmRvbXZhbHVlcyc7XG5jb25zdCBERUZBVUxUX0NSWVBUTyA9IHsgZ2V0UmFuZG9tVmFsdWVzIH07XG5jb25zdCBERUZBVUxUX1NFTEYgPSB7IGNyeXB0bzogREVGQVVMVF9DUllQVE8gfTtcbi8qKlxuICogQG5hbWUgV2JnXG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoaXMgZGVmaW5lcyB0aGUgaW50ZXJuYWwgaW50ZXJmYWNlcyB0aGF0IHdhc20tYmluZGdlbiB1c2VkIHRvIGNvbW11bmljYXRlXG4gKiB3aXRoIHRoZSBob3N0IGxheWVyLiBOb25lIG9mIHRoZXNlIGZ1bmN0aW9ucyBhcmUgYXZhaWxhYmxlIHRvIHRoZSB1c2VyLCByYXRoZXJcbiAqIHRoZXkgYXJlIGNhbGxlZCBpbnRlcm5hbGx5IGZyb20gdGhlIFdBU00gY29kZSBpdHNlbGYuXG4gKlxuICogVGhlIGludGVyZmFjZXMgaGVyZSBhcmUgZXhwb3NlZCBpbiB0aGUgaW1wb3J0cyBvbiB0aGUgY3JlYXRlZCBXQVNNIGludGVyZmFjZXMuXG4gKlxuICogSW50ZXJuYWxseSB0aGUgaW1wbGVtZW50YXRpb24gZG9lcyBhIHRoaW4gbGF5ZXIgaW50byB0aGUgc3VwcGxpZWQgYnJpZGdlLlxuICovXG5leHBvcnQgY2xhc3MgV2JnIHtcbiAgICBfX2ludGVybmFsX19icmlkZ2U7XG4gICAgY29uc3RydWN0b3IoYnJpZGdlKSB7XG4gICAgICAgIHRoaXMuX19pbnRlcm5hbF9fYnJpZGdlID0gYnJpZGdlO1xuICAgIH1cbiAgICAvKiogQGludGVybmFsICovXG4gICAgYWJvcnQgPSAoKSA9PiB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignYWJvcnQnKTtcbiAgICB9O1xuICAgIC8qKiBAaW50ZXJuYWwgKi9cbiAgICBfX3diaW5kZ2VuX2lzX3VuZGVmaW5lZCA9IChpZHgpID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX19pbnRlcm5hbF9fYnJpZGdlLmdldE9iamVjdChpZHgpID09PSB1bmRlZmluZWQ7XG4gICAgfTtcbiAgICAvKiogQGludGVybmFsICovXG4gICAgX193YmluZGdlbl90aHJvdyA9IChwdHIsIGxlbikgPT4ge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IodGhpcy5fX2ludGVybmFsX19icmlkZ2UuZ2V0U3RyaW5nKHB0ciwgbGVuKSk7XG4gICAgfTtcbiAgICAvKiogQGludGVybmFsICovXG4gICAgX193Ymdfc2VsZl8xYjdhMzllM2E5MmM5NDljID0gKCkgPT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5fX2ludGVybmFsX19icmlkZ2UuYWRkT2JqZWN0KERFRkFVTFRfU0VMRik7XG4gICAgfTtcbiAgICAvKiogQGludGVybmFsICovXG4gICAgX193YmdfcmVxdWlyZV82MDQ4Mzc0Mjg1MzJhNzMzID0gKHB0ciwgbGVuKSA9PiB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5hYmxlIHRvIHJlcXVpcmUgJHt0aGlzLl9faW50ZXJuYWxfX2JyaWRnZS5nZXRTdHJpbmcocHRyLCBsZW4pfWApO1xuICAgIH07XG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIF9fd2JnX2NyeXB0b185NjhmMTc3MjI4N2UyZGYwID0gKF9pZHgpID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX19pbnRlcm5hbF9fYnJpZGdlLmFkZE9iamVjdChERUZBVUxUX0NSWVBUTyk7XG4gICAgfTtcbiAgICAvKiogQGludGVybmFsICovXG4gICAgX193YmdfZ2V0UmFuZG9tVmFsdWVzX2EzZDM0YjRmZWUzYzI4NjkgPSAoX2lkeCkgPT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5fX2ludGVybmFsX19icmlkZ2UuYWRkT2JqZWN0KERFRkFVTFRfQ1JZUFRPLmdldFJhbmRvbVZhbHVlcyk7XG4gICAgfTtcbiAgICAvKiogQGludGVybmFsICovXG4gICAgX193YmdfZ2V0UmFuZG9tVmFsdWVzX2Y1ZTE0YWI3YWM4ZTk5NWQgPSAoX2FyZzAsIHB0ciwgbGVuKSA9PiB7XG4gICAgICAgIERFRkFVTFRfQ1JZUFRPLmdldFJhbmRvbVZhbHVlcyh0aGlzLl9faW50ZXJuYWxfX2JyaWRnZS5nZXRVOGEocHRyLCBsZW4pKTtcbiAgICB9O1xuICAgIC8qKiBAaW50ZXJuYWwgKi9cbiAgICBfX3diZ19yYW5kb21GaWxsU3luY19kNWJkMmQ2NTVmZGYyNTZhID0gKF9pZHgsIF9wdHIsIF9sZW4pID0+IHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdyYW5kb21GaWxsc3luYyBpcyBub3QgYXZhaWxhYmxlJyk7XG4gICAgICAgIC8vIGdldE9iamVjdChpZHgpLnJhbmRvbUZpbGxTeW5jKGdldFU4YShwdHIsIGxlbikpO1xuICAgIH07XG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIF9fd2JpbmRnZW5fb2JqZWN0X2Ryb3BfcmVmID0gKGlkeCkgPT4ge1xuICAgICAgICB0aGlzLl9faW50ZXJuYWxfX2JyaWRnZS50YWtlT2JqZWN0KGlkeCk7XG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/wasm-bridge/wbg.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/wasm-crypto-init/packageInfo.js":
/*!****************************************************************!*\
  !*** ./node_modules/@polkadot/wasm-crypto-init/packageInfo.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   packageInfo: function() { return /* binding */ packageInfo; }\n/* harmony export */ });\nconst packageInfo = { name: '@polkadot/wasm-crypto-init', path: ( true) ? new URL(\"file:///C:/Users/crist/monkeyscanjump/download-manager/node_modules/@polkadot/wasm-crypto-init/packageInfo.js\").pathname.substring(0, new URL(\"file:///C:/Users/crist/monkeyscanjump/download-manager/node_modules/@polkadot/wasm-crypto-init/packageInfo.js\").pathname.lastIndexOf('/') + 1) : 0, type: 'esm', version: '7.4.1' };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3Qvd2FzbS1jcnlwdG8taW5pdC9wYWNrYWdlSW5mby5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sc0JBQXNCLDJDQUEyQyxLQUE4QixZQUFZLCtHQUFlLGdDQUFnQywrR0FBZSxtQ0FBbUMsQ0FBTSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3dhc20tY3J5cHRvLWluaXQvcGFja2FnZUluZm8uanM/NjRiNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcGFja2FnZUluZm8gPSB7IG5hbWU6ICdAcG9sa2Fkb3Qvd2FzbS1jcnlwdG8taW5pdCcsIHBhdGg6IChpbXBvcnQubWV0YSAmJiBpbXBvcnQubWV0YS51cmwpID8gbmV3IFVSTChpbXBvcnQubWV0YS51cmwpLnBhdGhuYW1lLnN1YnN0cmluZygwLCBuZXcgVVJMKGltcG9ydC5tZXRhLnVybCkucGF0aG5hbWUubGFzdEluZGV4T2YoJy8nKSArIDEpIDogJ2F1dG8nLCB0eXBlOiAnZXNtJywgdmVyc2lvbjogJzcuNC4xJyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/wasm-crypto-init/packageInfo.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/wasm-crypto-init/wasm.js":
/*!*********************************************************!*\
  !*** ./node_modules/@polkadot/wasm-crypto-init/wasm.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createWasm: function() { return /* binding */ createWasm; },\n/* harmony export */   packageInfo: function() { return /* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_wasm_bridge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/wasm-bridge */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-bridge/init.js\");\n/* harmony import */ var _polkadot_wasm_crypto_wasm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/wasm-crypto-wasm */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto-wasm/bundle.js\");\n/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./packageInfo.js */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto-init/packageInfo.js\");\n\n\n\n/**\n * @name createWasm\n * @description\n * Creates an interface using only WASM\n */\nconst createWasm = /*#__PURE__*/ (0,_polkadot_wasm_bridge__WEBPACK_IMPORTED_MODULE_1__.createWasmFn)('crypto', _polkadot_wasm_crypto_wasm__WEBPACK_IMPORTED_MODULE_2__.wasmBytes, null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3Qvd2FzbS1jcnlwdG8taW5pdC93YXNtLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXFEO0FBQ0U7QUFDUjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08saUNBQWlDLG1FQUFZLFdBQVcsaUVBQVMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC93YXNtLWNyeXB0by1pbml0L3dhc20uanM/MTIzOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVXYXNtRm4gfSBmcm9tICdAcG9sa2Fkb3Qvd2FzbS1icmlkZ2UnO1xuaW1wb3J0IHsgd2FzbUJ5dGVzIH0gZnJvbSAnQHBvbGthZG90L3dhc20tY3J5cHRvLXdhc20nO1xuZXhwb3J0IHsgcGFja2FnZUluZm8gfSBmcm9tICcuL3BhY2thZ2VJbmZvLmpzJztcbi8qKlxuICogQG5hbWUgY3JlYXRlV2FzbVxuICogQGRlc2NyaXB0aW9uXG4gKiBDcmVhdGVzIGFuIGludGVyZmFjZSB1c2luZyBvbmx5IFdBU01cbiAqL1xuZXhwb3J0IGNvbnN0IGNyZWF0ZVdhc20gPSAvKiNfX1BVUkVfXyovIGNyZWF0ZVdhc21GbignY3J5cHRvJywgd2FzbUJ5dGVzLCBudWxsKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/wasm-crypto-init/wasm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/wasm-crypto-wasm/bundle.js":
/*!***********************************************************!*\
  !*** ./node_modules/@polkadot/wasm-crypto-wasm/bundle.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   packageInfo: function() { return /* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_1__.packageInfo; },\n/* harmony export */   wasmBytes: function() { return /* binding */ wasmBytes; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_wasm_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/wasm-util */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-util/fflate.js\");\n/* harmony import */ var _polkadot_wasm_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polkadot/wasm-util */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-util/base64.js\");\n/* harmony import */ var _cjs_bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cjs/bytes.js */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto-wasm/cjs/bytes.js\");\n/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./packageInfo.js */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto-wasm/packageInfo.js\");\n\n\n\n/**\n * @name wasmBytes\n * @description\n * The decoded WASM interface as exposed by this package.\n *\n * The build process will output into cjs/* into a compressed base64 format.\n * Upon loading the exposed bytes will be decoded and decompressed from this\n * specific format and returned.\n */\nconst wasmBytes = /*#__PURE__*/ (0,_polkadot_wasm_util__WEBPACK_IMPORTED_MODULE_2__.unzlibSync)((0,_polkadot_wasm_util__WEBPACK_IMPORTED_MODULE_3__.base64Decode)(_cjs_bytes_js__WEBPACK_IMPORTED_MODULE_0__.bytes, new Uint8Array(_cjs_bytes_js__WEBPACK_IMPORTED_MODULE_0__.lenIn)), new Uint8Array(_cjs_bytes_js__WEBPACK_IMPORTED_MODULE_0__.lenOut));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3Qvd2FzbS1jcnlwdG8td2FzbS9idW5kbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQStEO0FBQ1Q7QUFDUDtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxnQ0FBZ0MsK0RBQVUsQ0FBQyxpRUFBWSxDQUFDLGdEQUFLLGlCQUFpQixnREFBSyxtQkFBbUIsaURBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC93YXNtLWNyeXB0by13YXNtL2J1bmRsZS5qcz85N2EwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJhc2U2NERlY29kZSwgdW56bGliU3luYyB9IGZyb20gJ0Bwb2xrYWRvdC93YXNtLXV0aWwnO1xuaW1wb3J0IHsgYnl0ZXMsIGxlbkluLCBsZW5PdXQgfSBmcm9tICcuL2Nqcy9ieXRlcy5qcyc7XG5leHBvcnQgeyBwYWNrYWdlSW5mbyB9IGZyb20gJy4vcGFja2FnZUluZm8uanMnO1xuLyoqXG4gKiBAbmFtZSB3YXNtQnl0ZXNcbiAqIEBkZXNjcmlwdGlvblxuICogVGhlIGRlY29kZWQgV0FTTSBpbnRlcmZhY2UgYXMgZXhwb3NlZCBieSB0aGlzIHBhY2thZ2UuXG4gKlxuICogVGhlIGJ1aWxkIHByb2Nlc3Mgd2lsbCBvdXRwdXQgaW50byBjanMvKiBpbnRvIGEgY29tcHJlc3NlZCBiYXNlNjQgZm9ybWF0LlxuICogVXBvbiBsb2FkaW5nIHRoZSBleHBvc2VkIGJ5dGVzIHdpbGwgYmUgZGVjb2RlZCBhbmQgZGVjb21wcmVzc2VkIGZyb20gdGhpc1xuICogc3BlY2lmaWMgZm9ybWF0IGFuZCByZXR1cm5lZC5cbiAqL1xuZXhwb3J0IGNvbnN0IHdhc21CeXRlcyA9IC8qI19fUFVSRV9fKi8gdW56bGliU3luYyhiYXNlNjREZWNvZGUoYnl0ZXMsIG5ldyBVaW50OEFycmF5KGxlbkluKSksIG5ldyBVaW50OEFycmF5KGxlbk91dCkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/wasm-crypto-wasm/bundle.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/wasm-crypto-wasm/packageInfo.js":
/*!****************************************************************!*\
  !*** ./node_modules/@polkadot/wasm-crypto-wasm/packageInfo.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   packageInfo: function() { return /* binding */ packageInfo; }\n/* harmony export */ });\nconst packageInfo = { name: '@polkadot/wasm-crypto-wasm', path: ( true) ? new URL(\"file:///C:/Users/crist/monkeyscanjump/download-manager/node_modules/@polkadot/wasm-crypto-wasm/packageInfo.js\").pathname.substring(0, new URL(\"file:///C:/Users/crist/monkeyscanjump/download-manager/node_modules/@polkadot/wasm-crypto-wasm/packageInfo.js\").pathname.lastIndexOf('/') + 1) : 0, type: 'esm', version: '7.4.1' };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3Qvd2FzbS1jcnlwdG8td2FzbS9wYWNrYWdlSW5mby5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sc0JBQXNCLDJDQUEyQyxLQUE4QixZQUFZLCtHQUFlLGdDQUFnQywrR0FBZSxtQ0FBbUMsQ0FBTSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3dhc20tY3J5cHRvLXdhc20vcGFja2FnZUluZm8uanM/NzU4YiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcGFja2FnZUluZm8gPSB7IG5hbWU6ICdAcG9sa2Fkb3Qvd2FzbS1jcnlwdG8td2FzbScsIHBhdGg6IChpbXBvcnQubWV0YSAmJiBpbXBvcnQubWV0YS51cmwpID8gbmV3IFVSTChpbXBvcnQubWV0YS51cmwpLnBhdGhuYW1lLnN1YnN0cmluZygwLCBuZXcgVVJMKGltcG9ydC5tZXRhLnVybCkucGF0aG5hbWUubGFzdEluZGV4T2YoJy8nKSArIDEpIDogJ2F1dG8nLCB0eXBlOiAnZXNtJywgdmVyc2lvbjogJzcuNC4xJyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/wasm-crypto-wasm/packageInfo.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js":
/*!******************************************************!*\
  !*** ./node_modules/@polkadot/wasm-crypto/bundle.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bip39Generate: function() { return /* binding */ bip39Generate; },\n/* harmony export */   bip39ToEntropy: function() { return /* binding */ bip39ToEntropy; },\n/* harmony export */   bip39ToMiniSecret: function() { return /* binding */ bip39ToMiniSecret; },\n/* harmony export */   bip39ToSeed: function() { return /* binding */ bip39ToSeed; },\n/* harmony export */   bip39Validate: function() { return /* binding */ bip39Validate; },\n/* harmony export */   blake2b: function() { return /* binding */ blake2b; },\n/* harmony export */   bridge: function() { return /* reexport safe */ _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge; },\n/* harmony export */   ed25519KeypairFromSeed: function() { return /* binding */ ed25519KeypairFromSeed; },\n/* harmony export */   ed25519Sign: function() { return /* binding */ ed25519Sign; },\n/* harmony export */   ed25519Verify: function() { return /* binding */ ed25519Verify; },\n/* harmony export */   hmacSha256: function() { return /* binding */ hmacSha256; },\n/* harmony export */   hmacSha512: function() { return /* binding */ hmacSha512; },\n/* harmony export */   isReady: function() { return /* binding */ isReady; },\n/* harmony export */   keccak256: function() { return /* binding */ keccak256; },\n/* harmony export */   keccak512: function() { return /* binding */ keccak512; },\n/* harmony export */   packageInfo: function() { return /* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo; },\n/* harmony export */   pbkdf2: function() { return /* binding */ pbkdf2; },\n/* harmony export */   scrypt: function() { return /* binding */ scrypt; },\n/* harmony export */   secp256k1Compress: function() { return /* binding */ secp256k1Compress; },\n/* harmony export */   secp256k1Expand: function() { return /* binding */ secp256k1Expand; },\n/* harmony export */   secp256k1FromSeed: function() { return /* binding */ secp256k1FromSeed; },\n/* harmony export */   secp256k1Recover: function() { return /* binding */ secp256k1Recover; },\n/* harmony export */   secp256k1Sign: function() { return /* binding */ secp256k1Sign; },\n/* harmony export */   sha256: function() { return /* binding */ sha256; },\n/* harmony export */   sha512: function() { return /* binding */ sha512; },\n/* harmony export */   sr25519Agree: function() { return /* binding */ sr25519Agree; },\n/* harmony export */   sr25519DeriveKeypairHard: function() { return /* binding */ sr25519DeriveKeypairHard; },\n/* harmony export */   sr25519DeriveKeypairSoft: function() { return /* binding */ sr25519DeriveKeypairSoft; },\n/* harmony export */   sr25519DerivePublicSoft: function() { return /* binding */ sr25519DerivePublicSoft; },\n/* harmony export */   sr25519KeypairFromSeed: function() { return /* binding */ sr25519KeypairFromSeed; },\n/* harmony export */   sr25519Sign: function() { return /* binding */ sr25519Sign; },\n/* harmony export */   sr25519Verify: function() { return /* binding */ sr25519Verify; },\n/* harmony export */   twox: function() { return /* binding */ twox; },\n/* harmony export */   vrfSign: function() { return /* binding */ vrfSign; },\n/* harmony export */   vrfVerify: function() { return /* binding */ vrfVerify; },\n/* harmony export */   waitReady: function() { return /* binding */ waitReady; }\n/* harmony export */ });\n/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init.js */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/init.js\");\n/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./packageInfo.js */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/packageInfo.js\");\n\n\n\n/**\n * @internal\n * @description\n * This create an extenal interface function from the signature, all the while checking\n * the actual bridge wasm interface to ensure it has been initialized.\n *\n * This means that we can call it\n *\n *   withWasm(wasm: WasmCryptoInstance, a: number, b: string) => Uint8Array\n *\n * and in this case it will create an interface function with the signarure\n *\n *   (a: number, b: string) => Uint8Array\n */\nfunction withWasm(fn) {\n    return (...params) => {\n        if (!_init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.wasm) {\n            throw new Error('The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.');\n        }\n        return fn(_init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.wasm, ...params);\n    };\n}\nconst bip39Generate = /*#__PURE__*/ withWasm((wasm, words) => {\n    wasm.ext_bip39_generate(8, words);\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultString();\n});\nconst bip39ToEntropy = /*#__PURE__*/ withWasm((wasm, phrase) => {\n    wasm.ext_bip39_to_entropy(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocString(phrase));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst bip39ToMiniSecret = /*#__PURE__*/ withWasm((wasm, phrase, password) => {\n    wasm.ext_bip39_to_mini_secret(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocString(phrase), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocString(password));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst bip39ToSeed = /*#__PURE__*/ withWasm((wasm, phrase, password) => {\n    wasm.ext_bip39_to_seed(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocString(phrase), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocString(password));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst bip39Validate = /*#__PURE__*/ withWasm((wasm, phrase) => {\n    const ret = wasm.ext_bip39_validate(..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocString(phrase));\n    return ret !== 0;\n});\nconst ed25519KeypairFromSeed = /*#__PURE__*/ withWasm((wasm, seed) => {\n    wasm.ext_ed_from_seed(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(seed));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst ed25519Sign = /*#__PURE__*/ withWasm((wasm, pubkey, seckey, message) => {\n    wasm.ext_ed_sign(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(pubkey), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(seckey), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(message));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst ed25519Verify = /*#__PURE__*/ withWasm((wasm, signature, message, pubkey) => {\n    const ret = wasm.ext_ed_verify(..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(signature), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(message), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(pubkey));\n    return ret !== 0;\n});\nconst secp256k1FromSeed = /*#__PURE__*/ withWasm((wasm, seckey) => {\n    wasm.ext_secp_from_seed(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(seckey));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst secp256k1Compress = /*#__PURE__*/ withWasm((wasm, pubkey) => {\n    wasm.ext_secp_pub_compress(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(pubkey));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst secp256k1Expand = /*#__PURE__*/ withWasm((wasm, pubkey) => {\n    wasm.ext_secp_pub_expand(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(pubkey));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst secp256k1Recover = /*#__PURE__*/ withWasm((wasm, msgHash, sig, recovery) => {\n    wasm.ext_secp_recover(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(msgHash), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(sig), recovery);\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst secp256k1Sign = /*#__PURE__*/ withWasm((wasm, msgHash, seckey) => {\n    wasm.ext_secp_sign(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(msgHash), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(seckey));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst sr25519DeriveKeypairHard = /*#__PURE__*/ withWasm((wasm, pair, cc) => {\n    wasm.ext_sr_derive_keypair_hard(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(pair), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(cc));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst sr25519DeriveKeypairSoft = /*#__PURE__*/ withWasm((wasm, pair, cc) => {\n    wasm.ext_sr_derive_keypair_soft(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(pair), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(cc));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst sr25519DerivePublicSoft = /*#__PURE__*/ withWasm((wasm, pubkey, cc) => {\n    wasm.ext_sr_derive_public_soft(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(pubkey), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(cc));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst sr25519KeypairFromSeed = /*#__PURE__*/ withWasm((wasm, seed) => {\n    wasm.ext_sr_from_seed(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(seed));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst sr25519Sign = /*#__PURE__*/ withWasm((wasm, pubkey, secret, message) => {\n    wasm.ext_sr_sign(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(pubkey), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(secret), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(message));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst sr25519Verify = /*#__PURE__*/ withWasm((wasm, signature, message, pubkey) => {\n    const ret = wasm.ext_sr_verify(..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(signature), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(message), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(pubkey));\n    return ret !== 0;\n});\nconst sr25519Agree = /*#__PURE__*/ withWasm((wasm, pubkey, secret) => {\n    wasm.ext_sr_agree(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(pubkey), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(secret));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst vrfSign = /*#__PURE__*/ withWasm((wasm, secret, context, message, extra) => {\n    wasm.ext_vrf_sign(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(secret), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(context), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(message), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(extra));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst vrfVerify = /*#__PURE__*/ withWasm((wasm, pubkey, context, message, extra, outAndProof) => {\n    const ret = wasm.ext_vrf_verify(..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(pubkey), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(context), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(message), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(extra), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(outAndProof));\n    return ret !== 0;\n});\nconst blake2b = /*#__PURE__*/ withWasm((wasm, data, key, size) => {\n    wasm.ext_blake2b(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(data), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(key), size);\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst hmacSha256 = /*#__PURE__*/ withWasm((wasm, key, data) => {\n    wasm.ext_hmac_sha256(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(key), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(data));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst hmacSha512 = /*#__PURE__*/ withWasm((wasm, key, data) => {\n    wasm.ext_hmac_sha512(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(key), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(data));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst keccak256 = /*#__PURE__*/ withWasm((wasm, data) => {\n    wasm.ext_keccak256(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(data));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst keccak512 = /*#__PURE__*/ withWasm((wasm, data) => {\n    wasm.ext_keccak512(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(data));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst pbkdf2 = /*#__PURE__*/ withWasm((wasm, data, salt, rounds) => {\n    wasm.ext_pbkdf2(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(data), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(salt), rounds);\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst scrypt = /*#__PURE__*/ withWasm((wasm, password, salt, log2n, r, p) => {\n    wasm.ext_scrypt(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(password), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(salt), log2n, r, p);\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst sha256 = /*#__PURE__*/ withWasm((wasm, data) => {\n    wasm.ext_sha256(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(data));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst sha512 = /*#__PURE__*/ withWasm((wasm, data) => {\n    wasm.ext_sha512(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(data));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst twox = /*#__PURE__*/ withWasm((wasm, data, rounds) => {\n    wasm.ext_twox(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(data), rounds);\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nfunction isReady() {\n    return !!_init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.wasm;\n}\nasync function waitReady() {\n    try {\n        const wasm = await (0,_init_js__WEBPACK_IMPORTED_MODULE_1__.initBridge)();\n        return !!wasm;\n    }\n    catch {\n        return false;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/bundle.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/init.js":
/*!****************************************************!*\
  !*** ./node_modules/@polkadot/wasm-crypto/init.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bridge: function() { return /* binding */ bridge; },\n/* harmony export */   initBridge: function() { return /* binding */ initBridge; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_wasm_bridge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/wasm-bridge */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-bridge/bridge.js\");\n/* harmony import */ var _polkadot_wasm_crypto_init__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/wasm-crypto-init */ \"(app-pages-browser)/./node_modules/@polkadot/wasm-crypto-init/wasm.js\");\n\n\n/**\n * @name bridge\n * @description\n * The JS <-> WASM bridge that is in operation. For the specific package\n * it is a global, i.e. all operations happens on this specific bridge\n */\nconst bridge = new _polkadot_wasm_bridge__WEBPACK_IMPORTED_MODULE_0__.Bridge(_polkadot_wasm_crypto_init__WEBPACK_IMPORTED_MODULE_1__.createWasm);\n/**\n * @name initBridge\n * @description\n * Creates a new bridge interface with the (optional) initialization function\n */\nasync function initBridge(createWasm) {\n    return bridge.init(createWasm);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3Qvd2FzbS1jcnlwdG8vaW5pdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQStDO0FBQ1M7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sbUJBQW1CLHlEQUFNLENBQUMsa0VBQVU7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3dhc20tY3J5cHRvL2luaXQuanM/Y2IwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCcmlkZ2UgfSBmcm9tICdAcG9sa2Fkb3Qvd2FzbS1icmlkZ2UnO1xuaW1wb3J0IHsgY3JlYXRlV2FzbSB9IGZyb20gJ0Bwb2xrYWRvdC93YXNtLWNyeXB0by1pbml0Jztcbi8qKlxuICogQG5hbWUgYnJpZGdlXG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoZSBKUyA8LT4gV0FTTSBicmlkZ2UgdGhhdCBpcyBpbiBvcGVyYXRpb24uIEZvciB0aGUgc3BlY2lmaWMgcGFja2FnZVxuICogaXQgaXMgYSBnbG9iYWwsIGkuZS4gYWxsIG9wZXJhdGlvbnMgaGFwcGVucyBvbiB0aGlzIHNwZWNpZmljIGJyaWRnZVxuICovXG5leHBvcnQgY29uc3QgYnJpZGdlID0gbmV3IEJyaWRnZShjcmVhdGVXYXNtKTtcbi8qKlxuICogQG5hbWUgaW5pdEJyaWRnZVxuICogQGRlc2NyaXB0aW9uXG4gKiBDcmVhdGVzIGEgbmV3IGJyaWRnZSBpbnRlcmZhY2Ugd2l0aCB0aGUgKG9wdGlvbmFsKSBpbml0aWFsaXphdGlvbiBmdW5jdGlvblxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaW5pdEJyaWRnZShjcmVhdGVXYXNtKSB7XG4gICAgcmV0dXJuIGJyaWRnZS5pbml0KGNyZWF0ZVdhc20pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/init.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/packageInfo.js":
/*!***********************************************************!*\
  !*** ./node_modules/@polkadot/wasm-crypto/packageInfo.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   packageInfo: function() { return /* binding */ packageInfo; }\n/* harmony export */ });\nconst packageInfo = { name: '@polkadot/wasm-crypto', path: ( true) ? new URL(\"file:///C:/Users/crist/monkeyscanjump/download-manager/node_modules/@polkadot/wasm-crypto/packageInfo.js\").pathname.substring(0, new URL(\"file:///C:/Users/crist/monkeyscanjump/download-manager/node_modules/@polkadot/wasm-crypto/packageInfo.js\").pathname.lastIndexOf('/') + 1) : 0, type: 'esm', version: '7.4.1' };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3Qvd2FzbS1jcnlwdG8vcGFja2FnZUluZm8uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLHNCQUFzQixzQ0FBc0MsS0FBOEIsWUFBWSwwR0FBZSxnQ0FBZ0MsMEdBQWUsbUNBQW1DLENBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC93YXNtLWNyeXB0by9wYWNrYWdlSW5mby5qcz82YzFiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBwYWNrYWdlSW5mbyA9IHsgbmFtZTogJ0Bwb2xrYWRvdC93YXNtLWNyeXB0bycsIHBhdGg6IChpbXBvcnQubWV0YSAmJiBpbXBvcnQubWV0YS51cmwpID8gbmV3IFVSTChpbXBvcnQubWV0YS51cmwpLnBhdGhuYW1lLnN1YnN0cmluZygwLCBuZXcgVVJMKGltcG9ydC5tZXRhLnVybCkucGF0aG5hbWUubGFzdEluZGV4T2YoJy8nKSArIDEpIDogJ2F1dG8nLCB0eXBlOiAnZXNtJywgdmVyc2lvbjogJzcuNC4xJyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/wasm-crypto/packageInfo.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/wasm-util/base64.js":
/*!****************************************************!*\
  !*** ./node_modules/@polkadot/wasm-util/base64.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64Decode: function() { return /* binding */ base64Decode; }\n/* harmony export */ });\nconst CHR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst map = new Array(256);\nfor (let i = 0, count = CHR.length; i < count; i++) {\n    map[CHR.charCodeAt(i)] = i;\n}\n/**\n * @name base64Decode\n * @description\n * A base64 decoding function that operates in all environments. Unlike decoding\n * from Buffer (Node.js only) or atob (browser-only) this implementation is\n * slightly slower, but it is platform independent.\n *\n * For our usage, since we have access to the static final size, so we decode\n * to a specified output buffer. This also means we have applied a number of\n * optimizations based on this - checking output position instead of chars.\n */\nfunction base64Decode(data, out) {\n    let byte = 0;\n    let bits = 0;\n    let pos = -1;\n    for (let i = 0, last = out.length - 1; pos !== last; i++) {\n        // each character represents 6 bits\n        byte = (byte << 6) | map[data.charCodeAt(i)];\n        // each byte needs to contain 8 bits\n        if ((bits += 6) >= 8) {\n            out[++pos] = (byte >>> (bits -= 8)) & 0xff;\n        }\n    }\n    return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3Qvd2FzbS11dGlsL2Jhc2U2NC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBLG9DQUFvQyxXQUFXO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsY0FBYztBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC93YXNtLXV0aWwvYmFzZTY0LmpzP2Y2NmMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQ0hSID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8nO1xuY29uc3QgbWFwID0gbmV3IEFycmF5KDI1Nik7XG5mb3IgKGxldCBpID0gMCwgY291bnQgPSBDSFIubGVuZ3RoOyBpIDwgY291bnQ7IGkrKykge1xuICAgIG1hcFtDSFIuY2hhckNvZGVBdChpKV0gPSBpO1xufVxuLyoqXG4gKiBAbmFtZSBiYXNlNjREZWNvZGVcbiAqIEBkZXNjcmlwdGlvblxuICogQSBiYXNlNjQgZGVjb2RpbmcgZnVuY3Rpb24gdGhhdCBvcGVyYXRlcyBpbiBhbGwgZW52aXJvbm1lbnRzLiBVbmxpa2UgZGVjb2RpbmdcbiAqIGZyb20gQnVmZmVyIChOb2RlLmpzIG9ubHkpIG9yIGF0b2IgKGJyb3dzZXItb25seSkgdGhpcyBpbXBsZW1lbnRhdGlvbiBpc1xuICogc2xpZ2h0bHkgc2xvd2VyLCBidXQgaXQgaXMgcGxhdGZvcm0gaW5kZXBlbmRlbnQuXG4gKlxuICogRm9yIG91ciB1c2FnZSwgc2luY2Ugd2UgaGF2ZSBhY2Nlc3MgdG8gdGhlIHN0YXRpYyBmaW5hbCBzaXplLCBzbyB3ZSBkZWNvZGVcbiAqIHRvIGEgc3BlY2lmaWVkIG91dHB1dCBidWZmZXIuIFRoaXMgYWxzbyBtZWFucyB3ZSBoYXZlIGFwcGxpZWQgYSBudW1iZXIgb2ZcbiAqIG9wdGltaXphdGlvbnMgYmFzZWQgb24gdGhpcyAtIGNoZWNraW5nIG91dHB1dCBwb3NpdGlvbiBpbnN0ZWFkIG9mIGNoYXJzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gYmFzZTY0RGVjb2RlKGRhdGEsIG91dCkge1xuICAgIGxldCBieXRlID0gMDtcbiAgICBsZXQgYml0cyA9IDA7XG4gICAgbGV0IHBvcyA9IC0xO1xuICAgIGZvciAobGV0IGkgPSAwLCBsYXN0ID0gb3V0Lmxlbmd0aCAtIDE7IHBvcyAhPT0gbGFzdDsgaSsrKSB7XG4gICAgICAgIC8vIGVhY2ggY2hhcmFjdGVyIHJlcHJlc2VudHMgNiBiaXRzXG4gICAgICAgIGJ5dGUgPSAoYnl0ZSA8PCA2KSB8IG1hcFtkYXRhLmNoYXJDb2RlQXQoaSldO1xuICAgICAgICAvLyBlYWNoIGJ5dGUgbmVlZHMgdG8gY29udGFpbiA4IGJpdHNcbiAgICAgICAgaWYgKChiaXRzICs9IDYpID49IDgpIHtcbiAgICAgICAgICAgIG91dFsrK3Bvc10gPSAoYnl0ZSA+Pj4gKGJpdHMgLT0gOCkpICYgMHhmZjtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gb3V0O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/wasm-util/base64.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/wasm-util/fflate.js":
/*!****************************************************!*\
  !*** ./node_modules/@polkadot/wasm-util/fflate.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   unzlibSync: function() { return /* binding */ unzlibSync; }\n/* harmony export */ });\nconst u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\nconst clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\nconst fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\nconst fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\nconst freb = (eb, start) => {\n    const b = new u16(31);\n    for (let i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    const r = new u32(b[30]);\n    for (let i = 1; i < 30; ++i) {\n        for (let j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return [b, r];\n};\nconst [fl, revfl] = freb(fleb, 2);\nfl[28] = 258, revfl[258] = 28;\nconst [fd] = freb(fdeb, 0);\nconst rev = new u16(32768);\nfor (let i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    let x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\n}\nconst hMap = ((cd, mb, r) => {\n    const s = cd.length;\n    // index\n    let i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    const l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    const le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    let co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        const rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                const sv = (i << 4) | cd[i];\n                // free bits\n                const r = mb - cd[i];\n                // start value\n                let v = le[cd[i] - 1]++ << r;\n                // m is end value\n                for (const m = v | ((1 << r) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\nconst flt = new u8(288);\nfor (let i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (let i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (let i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (let i = 280; i < 288; ++i)\n    flt[i] = 8;\nconst fdt = new u8(32);\nfor (let i = 0; i < 32; ++i)\n    fdt[i] = 5;\nconst flrm = hMap(flt, 9, 1);\nconst fdrm = hMap(fdt, 5, 1);\nconst bits = (d, p, m) => {\n    const o = p >>> 3;\n    return ((d[o] | (d[o + 1] << 8)) >>> (p & 7)) & m;\n};\nconst bits16 = (d, p) => {\n    const o = p >>> 3;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >>> (p & 7));\n};\nconst shft = (p) => (p >>> 3) + (p & 7 && 1);\nconst slc = (v, s, e) => {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    const n = new (v instanceof u16 ? u16 : v instanceof u32 ? u32 : u8)(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\nconst max = (a) => {\n    let m = a[0];\n    for (let i = 1, count = a.length; i < count; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\nconst inflt = (dat, buf, st) => {\n    const noSt = !st || st.i;\n    if (!st)\n        st = {};\n    // source length\n    const sl = dat.length;\n    // have to estimate size\n    const noBuf = !buf || !noSt;\n    // Assumes roughly 33% compression ratio average\n    if (!buf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    const cbuf = (l) => {\n        let bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            const nbuf = new u8(Math.max(bl << 1, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    let final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    if (final && !lm)\n        return buf;\n    // total bits\n    const tbts = sl << 3;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            st.f = final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            const type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                const s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        throw 'unexpected EOF';\n                    break;\n                }\n                // ensure size\n                if (noBuf)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t << 3;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                const hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                const tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                const ldt = new u8(tl);\n                // code length tree\n                const clt = new u8(19);\n                for (let i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                const clb = max(clt), clbmsk = (1 << clb) - 1;\n                if (!noSt && pos + tl * (clb + 7) > tbts)\n                    break;\n                // code lengths map\n                const clm = hMap(clt, clb, 1);\n                for (let i = 0; i < tl;) {\n                    const r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    const s = r >>> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        let c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                const lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                throw 'invalid block type';\n            if (pos > tbts)\n                throw 'unexpected EOF';\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // maximum chunk size (practically, theoretically infinite) is 2^17;\n        if (noBuf)\n            cbuf(bt + 131072);\n        const lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        const mxa = lbt + dbt + 18;\n        while (noSt || pos + mxa < tbts) {\n            // bits read, code\n            const c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\n            pos += c & 15;\n            if (pos > tbts)\n                throw 'unexpected EOF';\n            if (!c)\n                throw 'invalid length/literal';\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lm = undefined;\n                break;\n            }\n            else {\n                let add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    const i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                const d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\n                if (!d)\n                    throw 'invalid distance';\n                pos += d & 15;\n                let dt = fd[dsym];\n                if (dsym > 3) {\n                    const b = fdeb[dsym];\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\n                }\n                if (pos > tbts)\n                    throw 'unexpected EOF';\n                if (noBuf)\n                    cbuf(bt + 131072);\n                const end = bt + add;\n                for (; bt < end; bt += 4) {\n                    buf[bt] = buf[bt - dt];\n                    buf[bt + 1] = buf[bt + 1 - dt];\n                    buf[bt + 2] = buf[bt + 2 - dt];\n                    buf[bt + 3] = buf[bt + 3 - dt];\n                }\n                bt = end;\n            }\n        }\n        st.l = lm, st.p = pos, st.b = bt;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    return bt == buf.length ? buf : slc(buf, 0, bt);\n};\nconst zlv = (d) => {\n    if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        throw 'invalid zlib data';\n    if (d[1] & 32)\n        throw 'invalid zlib data: preset dictionaries not supported';\n};\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nfunction unzlibSync(data, out) {\n    return inflt((zlv(data), data.subarray(2, -4)), out);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/wasm-util/fflate.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/x-randomvalues/browser.js":
/*!**********************************************************!*\
  !*** ./node_modules/@polkadot/x-randomvalues/browser.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   crypto: function() { return /* binding */ crypto; },\n/* harmony export */   getRandomValues: function() { return /* binding */ getRandomValues; },\n/* harmony export */   packageInfo: function() { return /* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/x-global */ \"(app-pages-browser)/./node_modules/@polkadot/x-global/index.js\");\n/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./packageInfo.js */ \"(app-pages-browser)/./node_modules/@polkadot/x-randomvalues/packageInfo.js\");\n\n\nconst crypto = _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.crypto;\nfunction getRandomValues(arr) {\n    return crypto.getRandomValues(arr);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QveC1yYW5kb212YWx1ZXMvYnJvd3Nlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE2QztBQUNFO0FBQ3hDLGVBQWUsdURBQU87QUFDdEI7QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QveC1yYW5kb212YWx1ZXMvYnJvd3Nlci5qcz9iNGM3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHhnbG9iYWwgfSBmcm9tICdAcG9sa2Fkb3QveC1nbG9iYWwnO1xuZXhwb3J0IHsgcGFja2FnZUluZm8gfSBmcm9tICcuL3BhY2thZ2VJbmZvLmpzJztcbmV4cG9ydCBjb25zdCBjcnlwdG8gPSB4Z2xvYmFsLmNyeXB0bztcbmV4cG9ydCBmdW5jdGlvbiBnZXRSYW5kb21WYWx1ZXMoYXJyKSB7XG4gICAgcmV0dXJuIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMoYXJyKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/x-randomvalues/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/x-randomvalues/packageInfo.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/x-randomvalues/packageInfo.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   packageInfo: function() { return /* binding */ packageInfo; }\n/* harmony export */ });\nconst packageInfo = { name: '@polkadot/x-randomvalues', path: ( true) ? new URL(\"file:///C:/Users/crist/monkeyscanjump/download-manager/node_modules/@polkadot/x-randomvalues/packageInfo.js\").pathname.substring(0, new URL(\"file:///C:/Users/crist/monkeyscanjump/download-manager/node_modules/@polkadot/x-randomvalues/packageInfo.js\").pathname.lastIndexOf('/') + 1) : 0, type: 'esm', version: '13.4.3' };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QveC1yYW5kb212YWx1ZXMvcGFja2FnZUluZm8uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLHNCQUFzQix5Q0FBeUMsS0FBOEIsWUFBWSw2R0FBZSxnQ0FBZ0MsNkdBQWUsbUNBQW1DLENBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC94LXJhbmRvbXZhbHVlcy9wYWNrYWdlSW5mby5qcz9mYjg1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBwYWNrYWdlSW5mbyA9IHsgbmFtZTogJ0Bwb2xrYWRvdC94LXJhbmRvbXZhbHVlcycsIHBhdGg6IChpbXBvcnQubWV0YSAmJiBpbXBvcnQubWV0YS51cmwpID8gbmV3IFVSTChpbXBvcnQubWV0YS51cmwpLnBhdGhuYW1lLnN1YnN0cmluZygwLCBuZXcgVVJMKGltcG9ydC5tZXRhLnVybCkucGF0aG5hbWUubGFzdEluZGV4T2YoJy8nKSArIDEpIDogJ2F1dG8nLCB0eXBlOiAnZXNtJywgdmVyc2lvbjogJzEzLjQuMycgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/x-randomvalues/packageInfo.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/x-textdecoder/browser.js":
/*!*********************************************************!*\
  !*** ./node_modules/@polkadot/x-textdecoder/browser.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TextDecoder: function() { return /* binding */ TextDecoder; },\n/* harmony export */   packageInfo: function() { return /* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo; }\n/* harmony export */ });\n/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/x-global */ \"(app-pages-browser)/./node_modules/@polkadot/x-global/index.js\");\n/* harmony import */ var _fallback_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fallback.js */ \"(app-pages-browser)/./node_modules/@polkadot/x-textdecoder/fallback.js\");\n/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./packageInfo.js */ \"(app-pages-browser)/./node_modules/@polkadot/x-textdecoder/packageInfo.js\");\n\n\n\nconst TextDecoder = /*#__PURE__*/ (0,_polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.extractGlobal)('TextDecoder', _fallback_js__WEBPACK_IMPORTED_MODULE_2__.TextDecoder);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QveC10ZXh0ZGVjb2Rlci9icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW1EO0FBQ0s7QUFDVDtBQUN4QyxrQ0FBa0MsaUVBQWEsZ0JBQWdCLHFEQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QveC10ZXh0ZGVjb2Rlci9icm93c2VyLmpzP2IxMWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZXh0cmFjdEdsb2JhbCB9IGZyb20gJ0Bwb2xrYWRvdC94LWdsb2JhbCc7XG5pbXBvcnQgeyBUZXh0RGVjb2RlciBhcyBGYWxsYmFjayB9IGZyb20gJy4vZmFsbGJhY2suanMnO1xuZXhwb3J0IHsgcGFja2FnZUluZm8gfSBmcm9tICcuL3BhY2thZ2VJbmZvLmpzJztcbmV4cG9ydCBjb25zdCBUZXh0RGVjb2RlciA9IC8qI19fUFVSRV9fKi8gZXh0cmFjdEdsb2JhbCgnVGV4dERlY29kZXInLCBGYWxsYmFjayk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/x-textdecoder/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/x-textdecoder/fallback.js":
/*!**********************************************************!*\
  !*** ./node_modules/@polkadot/x-textdecoder/fallback.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TextDecoder: function() { return /* binding */ TextDecoder; }\n/* harmony export */ });\nclass TextDecoder {\n    __encoding;\n    constructor(encoding) {\n        this.__encoding = encoding;\n    }\n    decode(value) {\n        let result = '';\n        for (let i = 0, count = value.length; i < count; i++) {\n            result += String.fromCharCode(value[i]);\n        }\n        return result;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QveC10ZXh0ZGVjb2Rlci9mYWxsYmFjay5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsV0FBVztBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QveC10ZXh0ZGVjb2Rlci9mYWxsYmFjay5qcz9kMjBmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBUZXh0RGVjb2RlciB7XG4gICAgX19lbmNvZGluZztcbiAgICBjb25zdHJ1Y3RvcihlbmNvZGluZykge1xuICAgICAgICB0aGlzLl9fZW5jb2RpbmcgPSBlbmNvZGluZztcbiAgICB9XG4gICAgZGVjb2RlKHZhbHVlKSB7XG4gICAgICAgIGxldCByZXN1bHQgPSAnJztcbiAgICAgICAgZm9yIChsZXQgaSA9IDAsIGNvdW50ID0gdmFsdWUubGVuZ3RoOyBpIDwgY291bnQ7IGkrKykge1xuICAgICAgICAgICAgcmVzdWx0ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUodmFsdWVbaV0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/x-textdecoder/fallback.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@polkadot/x-textdecoder/packageInfo.js":
/*!*************************************************************!*\
  !*** ./node_modules/@polkadot/x-textdecoder/packageInfo.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   packageInfo: function() { return /* binding */ packageInfo; }\n/* harmony export */ });\nconst packageInfo = { name: '@polkadot/x-textdecoder', path: ( true) ? new URL(\"file:///C:/Users/crist/monkeyscanjump/download-manager/node_modules/@polkadot/x-textdecoder/packageInfo.js\").pathname.substring(0, new URL(\"file:///C:/Users/crist/monkeyscanjump/download-manager/node_modules/@polkadot/x-textdecoder/packageInfo.js\").pathname.lastIndexOf('/') + 1) : 0, type: 'esm', version: '13.4.3' };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QveC10ZXh0ZGVjb2Rlci9wYWNrYWdlSW5mby5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sc0JBQXNCLHdDQUF3QyxLQUE4QixZQUFZLDRHQUFlLGdDQUFnQyw0R0FBZSxtQ0FBbUMsQ0FBTSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3gtdGV4dGRlY29kZXIvcGFja2FnZUluZm8uanM/YTEwMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcGFja2FnZUluZm8gPSB7IG5hbWU6ICdAcG9sa2Fkb3QveC10ZXh0ZGVjb2RlcicsIHBhdGg6IChpbXBvcnQubWV0YSAmJiBpbXBvcnQubWV0YS51cmwpID8gbmV3IFVSTChpbXBvcnQubWV0YS51cmwpLnBhdGhuYW1lLnN1YnN0cmluZygwLCBuZXcgVVJMKGltcG9ydC5tZXRhLnVybCkucGF0aG5hbWUubGFzdEluZGV4T2YoJy8nKSArIDEpIDogJ2F1dG8nLCB0eXBlOiAnZXNtJywgdmVyc2lvbjogJzEzLjQuMycgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@polkadot/x-textdecoder/packageInfo.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@scure/base/lib/esm/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@scure/base/lib/esm/index.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertNumber: function() { return /* binding */ assertNumber; },\n/* harmony export */   base16: function() { return /* binding */ base16; },\n/* harmony export */   base32: function() { return /* binding */ base32; },\n/* harmony export */   base32crockford: function() { return /* binding */ base32crockford; },\n/* harmony export */   base32hex: function() { return /* binding */ base32hex; },\n/* harmony export */   base32hexnopad: function() { return /* binding */ base32hexnopad; },\n/* harmony export */   base32nopad: function() { return /* binding */ base32nopad; },\n/* harmony export */   base58: function() { return /* binding */ base58; },\n/* harmony export */   base58check: function() { return /* binding */ base58check; },\n/* harmony export */   base58flickr: function() { return /* binding */ base58flickr; },\n/* harmony export */   base58xmr: function() { return /* binding */ base58xmr; },\n/* harmony export */   base58xrp: function() { return /* binding */ base58xrp; },\n/* harmony export */   base64: function() { return /* binding */ base64; },\n/* harmony export */   base64nopad: function() { return /* binding */ base64nopad; },\n/* harmony export */   base64url: function() { return /* binding */ base64url; },\n/* harmony export */   base64urlnopad: function() { return /* binding */ base64urlnopad; },\n/* harmony export */   bech32: function() { return /* binding */ bech32; },\n/* harmony export */   bech32m: function() { return /* binding */ bech32m; },\n/* harmony export */   bytes: function() { return /* binding */ bytes; },\n/* harmony export */   bytesToString: function() { return /* binding */ bytesToString; },\n/* harmony export */   createBase58check: function() { return /* binding */ createBase58check; },\n/* harmony export */   hex: function() { return /* binding */ hex; },\n/* harmony export */   str: function() { return /* binding */ str; },\n/* harmony export */   stringToBytes: function() { return /* binding */ stringToBytes; },\n/* harmony export */   utf8: function() { return /* binding */ utf8; },\n/* harmony export */   utils: function() { return /* binding */ utils; }\n/* harmony export */ });\n/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\nfunction isArrayOf(isString, arr) {\n    if (!Array.isArray(arr))\n        return false;\n    if (arr.length === 0)\n        return true;\n    if (isString) {\n        return arr.every((item) => typeof item === 'string');\n    }\n    else {\n        return arr.every((item) => Number.isSafeInteger(item));\n    }\n}\n// no abytes: seems to have 10% slowdown. Why?!\nfunction afn(input) {\n    if (typeof input !== 'function')\n        throw new Error('function expected');\n    return true;\n}\nfunction astr(label, input) {\n    if (typeof input !== 'string')\n        throw new Error(`${label}: string expected`);\n    return true;\n}\nfunction anumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`invalid integer: ${n}`);\n}\nconst assertNumber = anumber;\nfunction aArr(input) {\n    if (!Array.isArray(input))\n        throw new Error('array expected');\n}\nfunction astrArr(label, input) {\n    if (!isArrayOf(true, input))\n        throw new Error(`${label}: array of strings expected`);\n}\nfunction anumArr(label, input) {\n    if (!isArrayOf(false, input))\n        throw new Error(`${label}: array of numbers expected`);\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction chain(...args) {\n    const id = (a) => a;\n    // Wrap call in closure so JIT can inline calls\n    const wrap = (a, b) => (c) => a(b(c));\n    // Construct chain of args[-1].encode(args[-2].encode([...]))\n    const encode = args.map((x) => x.encode).reduceRight(wrap, id);\n    // Construct chain of args[0].decode(args[1].decode(...))\n    const decode = args.map((x) => x.decode).reduce(wrap, id);\n    return { encode, decode };\n}\n/**\n * Encodes integer radix representation to array of strings using alphabet and back.\n * Could also be array of strings.\n * @__NO_SIDE_EFFECTS__\n */\nfunction alphabet(letters) {\n    // mapping 1 to \"b\"\n    const lettersA = typeof letters === 'string' ? letters.split('') : letters;\n    const len = lettersA.length;\n    astrArr('alphabet', lettersA);\n    // mapping \"b\" to 1\n    const indexes = new Map(lettersA.map((l, i) => [l, i]));\n    return {\n        encode: (digits) => {\n            aArr(digits);\n            return digits.map((i) => {\n                if (!Number.isSafeInteger(i) || i < 0 || i >= len)\n                    throw new Error(`alphabet.encode: digit index outside alphabet \"${i}\". Allowed: ${letters}`);\n                return lettersA[i];\n            });\n        },\n        decode: (input) => {\n            aArr(input);\n            return input.map((letter) => {\n                astr('alphabet.decode', letter);\n                const i = indexes.get(letter);\n                if (i === undefined)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${letters}`);\n                return i;\n            });\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction join(separator = '') {\n    astr('join', separator);\n    return {\n        encode: (from) => {\n            astrArr('join.decode', from);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            astr('join.decode', to);\n            return to.split(separator);\n        },\n    };\n}\n/**\n * Pad strings array so it has integer number of bits\n * @__NO_SIDE_EFFECTS__\n */\nfunction padding(bits, chr = '=') {\n    anumber(bits);\n    astr('padding', chr);\n    return {\n        encode(data) {\n            astrArr('padding.encode', data);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            astrArr('padding.decode', input);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('padding: invalid, string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                const last = end - 1;\n                const byte = last * bits;\n                if (byte % 8 === 0)\n                    throw new Error('padding: invalid, string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction normalize(fn) {\n    afn(fn);\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\n/**\n * Slow: O(n^2) time complexity\n */\nfunction convertRadix(data, from, to) {\n    // base 1 is impossible\n    if (from < 2)\n        throw new Error(`convertRadix: invalid from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: invalid to=${to}, base cannot be less than 2`);\n    aArr(data);\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data, (d) => {\n        anumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`invalid integer: ${d}`);\n        return d;\n    });\n    const dlen = digits.length;\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < dlen; i++) {\n            const digit = digits[i];\n            const fromCarry = from * carry;\n            const digitBase = fromCarry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                fromCarry / from !== carry ||\n                digitBase - digit !== fromCarry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            const div = digitBase / to;\n            carry = digitBase % to;\n            const rounded = Math.floor(div);\n            digits[i] = rounded;\n            if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!rounded)\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (b === 0 ? a : gcd(b, a % b));\nconst radix2carry = /* @__NO_SIDE_EFFECTS__ */ (from, to) => from + (to - gcd(from, to));\nconst powers = /* @__PURE__ */ (() => {\n    let res = [];\n    for (let i = 0; i < 40; i++)\n        res.push(2 ** i);\n    return res;\n})();\n/**\n * Implemented with numbers, because BigInt is 5x slower\n */\nfunction convertRadix2(data, from, to, padding) {\n    aArr(data);\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0; // bitwise position in current element\n    const max = powers[from];\n    const mask = powers[to] - 1;\n    const res = [];\n    for (const n of data) {\n        anumber(n);\n        if (n >= max)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        const pow = powers[pos];\n        if (pow === undefined)\n            throw new Error('invalid carry');\n        carry &= pow - 1; // clean carry, otherwise it will cause overflow\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry > 0)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix(num) {\n    anumber(num);\n    const _256 = 2 ** 8;\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), _256, num);\n        },\n        decode: (digits) => {\n            anumArr('radix.decode', digits);\n            return Uint8Array.from(convertRadix(digits, num, _256));\n        },\n    };\n}\n/**\n * If both bases are power of same number (like `2**8 <-> 2**64`),\n * there is a linear algorithm. For now we have implementation for power-of-two bases only.\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix2(bits, revPadding = false) {\n    anumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            anumArr('radix2.decode', digits);\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    afn(fn);\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    anumber(len);\n    afn(fn);\n    return {\n        encode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const sum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(sum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const oldChecksum = data.slice(-len);\n            const newChecksum = fn(payload).slice(0, len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\n// prettier-ignore\nconst utils = {\n    alphabet, chain, checksum, convertRadix, convertRadix2, radix, radix2, join, padding,\n};\n// RFC 4648 aka RFC 3548\n// ---------------------\n/**\n * base16 encoding.\n */\nconst base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nconst base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nconst base32nopad = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), join(''));\nconst base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nconst base32hexnopad = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), join(''));\nconst base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\n/**\n * base64 with padding. For no padding, use `base64nopad`.\n * @example\n * const b = base64.decode('A951'); // Uint8Array.from([ 3, 222, 117 ])\n * base64.encode(b); // 'A951'\n */\nconst base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\n/**\n * base64 without padding.\n */\nconst base64nopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), join(''));\nconst base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst base64urlnopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), join(''));\n// base58 code\n// -----------\nconst genBase58 = /* @__NO_SIDE_EFFECTS__ */ (abc) => chain(radix(58), alphabet(abc), join(''));\n/**\n * Base58: base64 without characters +, /, 0, O, I, l.\n * Quadratic (O(n^2)) - so, can't be used on large inputs.\n */\nconst base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nconst base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nconst base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\n// Data len (index) -> encoded block len\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\n/**\n * XMR version of base58.\n * Done in 8-byte blocks (which equals 11 chars in decoding). Last (non-full) block padded with '1' to size in XMR_BLOCK_LEN.\n * Block encoding significantly reduces quadratic complexity of base58.\n */\nconst base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nconst createBase58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\n/**\n * Use `createBase58check` instead.\n * @deprecated\n */\nconst base58check = createBase58check;\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % powers[30]], 30, 5, false));\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        astr('bech32.encode prefix', prefix);\n        if (isBytes(words))\n            words = Array.from(words);\n        anumArr('bech32.encode', words);\n        const plen = prefix.length;\n        if (plen === 0)\n            throw new TypeError(`Invalid prefix length ${plen}`);\n        const actualLength = plen + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        const lowered = prefix.toLowerCase();\n        const sum = bechChecksum(lowered, words, ENCODING_CONST);\n        return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}`;\n    }\n    function decode(str, limit = 90) {\n        astr('bech32.decode input', str);\n        const slen = str.length;\n        if (slen < 8 || (limit !== false && slen > limit))\n            throw new TypeError(`invalid string length: ${slen} (${str}). Expected (8..${limit})`);\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        const sepIndex = lowered.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = lowered.slice(0, sepIndex);\n        const data = lowered.slice(sepIndex + 1);\n        if (data.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(data).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!data.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    function encodeFromBytes(prefix, bytes) {\n        return encode(prefix, toWords(bytes));\n    }\n    return {\n        encode,\n        decode,\n        encodeFromBytes,\n        decodeToBytes,\n        decodeUnsafe,\n        fromWords,\n        fromWordsUnsafe,\n        toWords,\n    };\n}\n/**\n * Low-level bech32 operations. Operates on words.\n */\nconst bech32 = genBech32('bech32');\nconst bech32m = genBech32('bech32m');\n/**\n * UTF-8-to-byte decoder. Uses built-in TextDecoder / TextEncoder.\n * @example\n * const b = utf8.decode(\"hey\"); // => new Uint8Array([ 104, 101, 121 ])\n * const str = utf8.encode(b); // \"hey\"\n */\nconst utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\n/**\n * hex string decoder.\n * @example\n * const b = hex.decode(\"0102ff\"); // => new Uint8Array([ 1, 2, 255 ])\n * const str = hex.encode(b); // \"0102ff\"\n */\nconst hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2 !== 0)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\n// prettier-ignore\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = 'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';\nconst bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!isBytes(bytes))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nconst str = bytesToString; // as in python, but for bytes only\nconst stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nconst bytes = stringToBytes;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@scure/base/lib/esm/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@substrate/ss58-registry/esm/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@substrate/ss58-registry/esm/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n// Copyright (C) 2021-2024 Parity Technologies (UK) Ltd.\n// SPDX-License-Identifier: Apache-2.0\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// \thttp://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ([\n\t{\n\t\t\"prefix\": 0,\n\t\t\"network\": \"polkadot\",\n\t\t\"displayName\": \"Polkadot Relay Chain\",\n\t\t\"symbols\": [\n\t\t\t\"DOT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkadot.network\"\n\t},\n\t{\n\t\t\"prefix\": 1,\n\t\t\"network\": \"BareSr25519\",\n\t\t\"displayName\": \"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"Sr25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 2,\n\t\t\"network\": \"kusama\",\n\t\t\"displayName\": \"Kusama Relay Chain\",\n\t\t\"symbols\": [\n\t\t\t\"KSM\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kusama.network\"\n\t},\n\t{\n\t\t\"prefix\": 3,\n\t\t\"network\": \"BareEd25519\",\n\t\t\"displayName\": \"Bare 32-bit Ed25519 public key.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"Ed25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 4,\n\t\t\"network\": \"katalchain\",\n\t\t\"displayName\": \"Katal Chain\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 5,\n\t\t\"network\": \"astar\",\n\t\t\"displayName\": \"Astar Network\",\n\t\t\"symbols\": [\n\t\t\t\"ASTR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://astar.network\"\n\t},\n\t{\n\t\t\"prefix\": 6,\n\t\t\"network\": \"bifrost\",\n\t\t\"displayName\": \"Bifrost\",\n\t\t\"symbols\": [\n\t\t\t\"BNC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bifrost.finance/\"\n\t},\n\t{\n\t\t\"prefix\": 7,\n\t\t\"network\": \"edgeware\",\n\t\t\"displayName\": \"Edgeware\",\n\t\t\"symbols\": [\n\t\t\t\"EDG\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://edgewa.re\"\n\t},\n\t{\n\t\t\"prefix\": 8,\n\t\t\"network\": \"karura\",\n\t\t\"displayName\": \"Karura\",\n\t\t\"symbols\": [\n\t\t\t\"KAR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://karura.network/\"\n\t},\n\t{\n\t\t\"prefix\": 9,\n\t\t\"network\": \"reynolds\",\n\t\t\"displayName\": \"Laminar Reynolds Canary\",\n\t\t\"symbols\": [\n\t\t\t\"REY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"http://laminar.network/\"\n\t},\n\t{\n\t\t\"prefix\": 10,\n\t\t\"network\": \"acala\",\n\t\t\"displayName\": \"Acala\",\n\t\t\"symbols\": [\n\t\t\t\"ACA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://acala.network/\"\n\t},\n\t{\n\t\t\"prefix\": 11,\n\t\t\"network\": \"laminar\",\n\t\t\"displayName\": \"Laminar\",\n\t\t\"symbols\": [\n\t\t\t\"LAMI\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"http://laminar.network/\"\n\t},\n\t{\n\t\t\"prefix\": 12,\n\t\t\"network\": \"polymesh\",\n\t\t\"displayName\": \"Polymesh\",\n\t\t\"symbols\": [\n\t\t\t\"POLYX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t6\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polymath.network/\"\n\t},\n\t{\n\t\t\"prefix\": 13,\n\t\t\"network\": \"integritee\",\n\t\t\"displayName\": \"Integritee\",\n\t\t\"symbols\": [\n\t\t\t\"TEER\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://integritee.network\"\n\t},\n\t{\n\t\t\"prefix\": 14,\n\t\t\"network\": \"totem\",\n\t\t\"displayName\": \"Totem\",\n\t\t\"symbols\": [\n\t\t\t\"TOTEM\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t0\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://totemaccounting.com\"\n\t},\n\t{\n\t\t\"prefix\": 15,\n\t\t\"network\": \"synesthesia\",\n\t\t\"displayName\": \"Synesthesia\",\n\t\t\"symbols\": [\n\t\t\t\"SYN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://synesthesia.network/\"\n\t},\n\t{\n\t\t\"prefix\": 16,\n\t\t\"network\": \"kulupu\",\n\t\t\"displayName\": \"Kulupu\",\n\t\t\"symbols\": [\n\t\t\t\"KLP\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kulupu.network/\"\n\t},\n\t{\n\t\t\"prefix\": 17,\n\t\t\"network\": \"dark\",\n\t\t\"displayName\": \"Dark Mainnet\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 18,\n\t\t\"network\": \"darwinia\",\n\t\t\"displayName\": \"Darwinia Network\",\n\t\t\"symbols\": [\n\t\t\t\"RING\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": \"https://darwinia.network\"\n\t},\n\t{\n\t\t\"prefix\": 19,\n\t\t\"network\": \"watr\",\n\t\t\"displayName\": \"Watr Protocol\",\n\t\t\"symbols\": [\n\t\t\t\"WATR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.watr.org\"\n\t},\n\t{\n\t\t\"prefix\": 20,\n\t\t\"network\": \"stafi\",\n\t\t\"displayName\": \"Stafi\",\n\t\t\"symbols\": [\n\t\t\t\"FIS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://stafi.io\"\n\t},\n\t{\n\t\t\"prefix\": 21,\n\t\t\"network\": \"karmachain\",\n\t\t\"displayName\": \"Karmacoin\",\n\t\t\"symbols\": [\n\t\t\t\"KCOIN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t6\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://karmaco.in\"\n\t},\n\t{\n\t\t\"prefix\": 22,\n\t\t\"network\": \"dock-pos-mainnet\",\n\t\t\"displayName\": \"Dock Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"DCK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t6\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dock.io\"\n\t},\n\t{\n\t\t\"prefix\": 23,\n\t\t\"network\": \"shift\",\n\t\t\"displayName\": \"ShiftNrg\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 24,\n\t\t\"network\": \"zero\",\n\t\t\"displayName\": \"ZERO\",\n\t\t\"symbols\": [\n\t\t\t\"ZERO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://zero.io\"\n\t},\n\t{\n\t\t\"prefix\": 25,\n\t\t\"network\": \"zero-alphaville\",\n\t\t\"displayName\": \"ZERO Alphaville\",\n\t\t\"symbols\": [\n\t\t\t\"ZERO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://zero.io\"\n\t},\n\t{\n\t\t\"prefix\": 26,\n\t\t\"network\": \"jupiter\",\n\t\t\"displayName\": \"Jupiter\",\n\t\t\"symbols\": [\n\t\t\t\"jDOT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://jupiter.patract.io\"\n\t},\n\t{\n\t\t\"prefix\": 27,\n\t\t\"network\": \"kabocha\",\n\t\t\"displayName\": \"Kabocha\",\n\t\t\"symbols\": [\n\t\t\t\"KAB\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kabocha.network\"\n\t},\n\t{\n\t\t\"prefix\": 28,\n\t\t\"network\": \"subsocial\",\n\t\t\"displayName\": \"Subsocial\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 29,\n\t\t\"network\": \"cord\",\n\t\t\"displayName\": \"CORD Network\",\n\t\t\"symbols\": [\n\t\t\t\"DHI\",\n\t\t\t\"WAY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12,\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cord.network/\"\n\t},\n\t{\n\t\t\"prefix\": 30,\n\t\t\"network\": \"phala\",\n\t\t\"displayName\": \"Phala Network\",\n\t\t\"symbols\": [\n\t\t\t\"PHA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://phala.network\"\n\t},\n\t{\n\t\t\"prefix\": 31,\n\t\t\"network\": \"litentry\",\n\t\t\"displayName\": \"Litentry Network\",\n\t\t\"symbols\": [\n\t\t\t\"LIT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://litentry.com/\"\n\t},\n\t{\n\t\t\"prefix\": 32,\n\t\t\"network\": \"robonomics\",\n\t\t\"displayName\": \"Robonomics\",\n\t\t\"symbols\": [\n\t\t\t\"XRT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://robonomics.network\"\n\t},\n\t{\n\t\t\"prefix\": 33,\n\t\t\"network\": \"datahighway\",\n\t\t\"displayName\": \"DataHighway\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 34,\n\t\t\"network\": \"ares\",\n\t\t\"displayName\": \"Ares Protocol\",\n\t\t\"symbols\": [\n\t\t\t\"ARES\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.aresprotocol.com/\"\n\t},\n\t{\n\t\t\"prefix\": 35,\n\t\t\"network\": \"vln\",\n\t\t\"displayName\": \"Valiu Liquidity Network\",\n\t\t\"symbols\": [\n\t\t\t\"USDv\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t15\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://valiu.com/\"\n\t},\n\t{\n\t\t\"prefix\": 36,\n\t\t\"network\": \"centrifuge\",\n\t\t\"displayName\": \"Centrifuge Chain\",\n\t\t\"symbols\": [\n\t\t\t\"CFG\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://centrifuge.io/\"\n\t},\n\t{\n\t\t\"prefix\": 37,\n\t\t\"network\": \"nodle\",\n\t\t\"displayName\": \"Nodle Chain\",\n\t\t\"symbols\": [\n\t\t\t\"NODL\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t11\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://nodle.io/\"\n\t},\n\t{\n\t\t\"prefix\": 38,\n\t\t\"network\": \"kilt\",\n\t\t\"displayName\": \"KILT Spiritnet\",\n\t\t\"symbols\": [\n\t\t\t\"KILT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t15\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kilt.io/\"\n\t},\n\t{\n\t\t\"prefix\": 39,\n\t\t\"network\": \"mathchain\",\n\t\t\"displayName\": \"MathChain mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"MATH\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://mathwallet.org\"\n\t},\n\t{\n\t\t\"prefix\": 40,\n\t\t\"network\": \"mathchain-testnet\",\n\t\t\"displayName\": \"MathChain testnet\",\n\t\t\"symbols\": [\n\t\t\t\"MATH\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://mathwallet.org\"\n\t},\n\t{\n\t\t\"prefix\": 41,\n\t\t\"network\": \"polimec\",\n\t\t\"displayName\": \"Polimec Protocol\",\n\t\t\"symbols\": [\n\t\t\t\"PLMC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.polimec.org/\"\n\t},\n\t{\n\t\t\"prefix\": 42,\n\t\t\"network\": \"substrate\",\n\t\t\"displayName\": \"Substrate\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://substrate.io/\"\n\t},\n\t{\n\t\t\"prefix\": 43,\n\t\t\"network\": \"BareSecp256k1\",\n\t\t\"displayName\": \"Bare 32-bit ECDSA SECP-256k1 public key.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 44,\n\t\t\"network\": \"chainx\",\n\t\t\"displayName\": \"ChainX\",\n\t\t\"symbols\": [\n\t\t\t\"PCX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t8\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://chainx.org/\"\n\t},\n\t{\n\t\t\"prefix\": 45,\n\t\t\"network\": \"uniarts\",\n\t\t\"displayName\": \"UniArts Network\",\n\t\t\"symbols\": [\n\t\t\t\"UART\",\n\t\t\t\"UINK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12,\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://uniarts.me\"\n\t},\n\t{\n\t\t\"prefix\": 46,\n\t\t\"network\": \"reserved46\",\n\t\t\"displayName\": \"This prefix is reserved.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": null,\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 47,\n\t\t\"network\": \"reserved47\",\n\t\t\"displayName\": \"This prefix is reserved.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": null,\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 48,\n\t\t\"network\": \"neatcoin\",\n\t\t\"displayName\": \"Neatcoin Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"NEAT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://neatcoin.org\"\n\t},\n\t{\n\t\t\"prefix\": 49,\n\t\t\"network\": \"picasso\",\n\t\t\"displayName\": \"Picasso\",\n\t\t\"symbols\": [\n\t\t\t\"PICA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://picasso.composable.finance\"\n\t},\n\t{\n\t\t\"prefix\": 50,\n\t\t\"network\": \"composable\",\n\t\t\"displayName\": \"Composable Finance\",\n\t\t\"symbols\": [\n\t\t\t\"LAYR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://composable.finance\"\n\t},\n\t{\n\t\t\"prefix\": 51,\n\t\t\"network\": \"oak\",\n\t\t\"displayName\": \"OAK Network\",\n\t\t\"symbols\": [\n\t\t\t\"OAK\",\n\t\t\t\"TUR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10,\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://oak.tech\"\n\t},\n\t{\n\t\t\"prefix\": 52,\n\t\t\"network\": \"KICO\",\n\t\t\"displayName\": \"KICO\",\n\t\t\"symbols\": [\n\t\t\t\"KICO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t14\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dico.io\"\n\t},\n\t{\n\t\t\"prefix\": 53,\n\t\t\"network\": \"DICO\",\n\t\t\"displayName\": \"DICO\",\n\t\t\"symbols\": [\n\t\t\t\"DICO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t14\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dico.io\"\n\t},\n\t{\n\t\t\"prefix\": 54,\n\t\t\"network\": \"cere\",\n\t\t\"displayName\": \"Cere Network\",\n\t\t\"symbols\": [\n\t\t\t\"CERE\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cere.network\"\n\t},\n\t{\n\t\t\"prefix\": 55,\n\t\t\"network\": \"xxnetwork\",\n\t\t\"displayName\": \"xx network\",\n\t\t\"symbols\": [\n\t\t\t\"XX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://xx.network\"\n\t},\n\t{\n\t\t\"prefix\": 56,\n\t\t\"network\": \"pendulum\",\n\t\t\"displayName\": \"Pendulum chain\",\n\t\t\"symbols\": [\n\t\t\t\"PEN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://pendulumchain.org/\"\n\t},\n\t{\n\t\t\"prefix\": 57,\n\t\t\"network\": \"amplitude\",\n\t\t\"displayName\": \"Amplitude chain\",\n\t\t\"symbols\": [\n\t\t\t\"AMPE\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://pendulumchain.org/\"\n\t},\n\t{\n\t\t\"prefix\": 58,\n\t\t\"network\": \"eternal-civilization\",\n\t\t\"displayName\": \"Eternal Civilization\",\n\t\t\"symbols\": [\n\t\t\t\"ECC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"http://www.ysknfr.cn/\"\n\t},\n\t{\n\t\t\"prefix\": 63,\n\t\t\"network\": \"hydradx\",\n\t\t\"displayName\": \"Hydration\",\n\t\t\"symbols\": [\n\t\t\t\"HDX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://hydration.net\"\n\t},\n\t{\n\t\t\"prefix\": 65,\n\t\t\"network\": \"aventus\",\n\t\t\"displayName\": \"Aventus Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"AVT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://aventus.io\"\n\t},\n\t{\n\t\t\"prefix\": 66,\n\t\t\"network\": \"crust\",\n\t\t\"displayName\": \"Crust Network\",\n\t\t\"symbols\": [\n\t\t\t\"CRU\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://crust.network\"\n\t},\n\t{\n\t\t\"prefix\": 67,\n\t\t\"network\": \"genshiro\",\n\t\t\"displayName\": \"Genshiro Network\",\n\t\t\"symbols\": [\n\t\t\t\"GENS\",\n\t\t\t\"EQD\",\n\t\t\t\"LPT0\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9,\n\t\t\t9,\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://genshiro.equilibrium.io\"\n\t},\n\t{\n\t\t\"prefix\": 68,\n\t\t\"network\": \"equilibrium\",\n\t\t\"displayName\": \"Equilibrium Network\",\n\t\t\"symbols\": [\n\t\t\t\"EQ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://equilibrium.io\"\n\t},\n\t{\n\t\t\"prefix\": 69,\n\t\t\"network\": \"sora\",\n\t\t\"displayName\": \"SORA Network\",\n\t\t\"symbols\": [\n\t\t\t\"XOR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://sora.org\"\n\t},\n\t{\n\t\t\"prefix\": 71,\n\t\t\"network\": \"p3d\",\n\t\t\"displayName\": \"3DP network\",\n\t\t\"symbols\": [\n\t\t\t\"P3D\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://3dpass.org\"\n\t},\n\t{\n\t\t\"prefix\": 72,\n\t\t\"network\": \"p3dt\",\n\t\t\"displayName\": \"3DP test network\",\n\t\t\"symbols\": [\n\t\t\t\"P3Dt\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://3dpass.org\"\n\t},\n\t{\n\t\t\"prefix\": 73,\n\t\t\"network\": \"zeitgeist\",\n\t\t\"displayName\": \"Zeitgeist\",\n\t\t\"symbols\": [\n\t\t\t\"ZTG\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://zeitgeist.pm\"\n\t},\n\t{\n\t\t\"prefix\": 77,\n\t\t\"network\": \"manta\",\n\t\t\"displayName\": \"Manta network\",\n\t\t\"symbols\": [\n\t\t\t\"MANTA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://manta.network\"\n\t},\n\t{\n\t\t\"prefix\": 78,\n\t\t\"network\": \"calamari\",\n\t\t\"displayName\": \"Calamari: Manta Canary Network\",\n\t\t\"symbols\": [\n\t\t\t\"KMA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://manta.network\"\n\t},\n\t{\n\t\t\"prefix\": 81,\n\t\t\"network\": \"sora_dot_para\",\n\t\t\"displayName\": \"SORA Polkadot Parachain\",\n\t\t\"symbols\": [\n\t\t\t\"XOR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://sora.org\"\n\t},\n\t{\n\t\t\"prefix\": 88,\n\t\t\"network\": \"polkadex\",\n\t\t\"displayName\": \"Polkadex Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"PDEX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkadex.trade\"\n\t},\n\t{\n\t\t\"prefix\": 89,\n\t\t\"network\": \"polkadexparachain\",\n\t\t\"displayName\": \"Polkadex Parachain\",\n\t\t\"symbols\": [\n\t\t\t\"PDEX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkadex.trade\"\n\t},\n\t{\n\t\t\"prefix\": 90,\n\t\t\"network\": \"frequency\",\n\t\t\"displayName\": \"Frequency\",\n\t\t\"symbols\": [\n\t\t\t\"FRQCY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t8\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.frequency.xyz\"\n\t},\n\t{\n\t\t\"prefix\": 92,\n\t\t\"network\": \"anmol\",\n\t\t\"displayName\": \"Anmol Network\",\n\t\t\"symbols\": [\n\t\t\t\"ANML\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://anmol.network/\"\n\t},\n\t{\n\t\t\"prefix\": 93,\n\t\t\"network\": \"fragnova\",\n\t\t\"displayName\": \"Fragnova Network\",\n\t\t\"symbols\": [\n\t\t\t\"NOVA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://fragnova.com\"\n\t},\n\t{\n\t\t\"prefix\": 98,\n\t\t\"network\": \"polkasmith\",\n\t\t\"displayName\": \"PolkaSmith Canary Network\",\n\t\t\"symbols\": [\n\t\t\t\"PKS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkafoundry.com\"\n\t},\n\t{\n\t\t\"prefix\": 99,\n\t\t\"network\": \"polkafoundry\",\n\t\t\"displayName\": \"PolkaFoundry Network\",\n\t\t\"symbols\": [\n\t\t\t\"PKF\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkafoundry.com\"\n\t},\n\t{\n\t\t\"prefix\": 100,\n\t\t\"network\": \"ibtida\",\n\t\t\"displayName\": \"Anmol Network Ibtida Canary network\",\n\t\t\"symbols\": [\n\t\t\t\"IANML\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://anmol.network/\"\n\t},\n\t{\n\t\t\"prefix\": 101,\n\t\t\"network\": \"origintrail-parachain\",\n\t\t\"displayName\": \"OriginTrail Parachain\",\n\t\t\"symbols\": [\n\t\t\t\"OTP\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://parachain.origintrail.io/\"\n\t},\n\t{\n\t\t\"prefix\": 105,\n\t\t\"network\": \"pontem-network\",\n\t\t\"displayName\": \"Pontem Network\",\n\t\t\"symbols\": [\n\t\t\t\"PONT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://pontem.network\"\n\t},\n\t{\n\t\t\"prefix\": 110,\n\t\t\"network\": \"heiko\",\n\t\t\"displayName\": \"Heiko\",\n\t\t\"symbols\": [\n\t\t\t\"HKO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://parallel.fi/\"\n\t},\n\t{\n\t\t\"prefix\": 113,\n\t\t\"network\": \"integritee-incognito\",\n\t\t\"displayName\": \"Integritee Incognito\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://integritee.network\"\n\t},\n\t{\n\t\t\"prefix\": 117,\n\t\t\"network\": \"tinker\",\n\t\t\"displayName\": \"Tinker\",\n\t\t\"symbols\": [\n\t\t\t\"TNKR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://invarch.network\"\n\t},\n\t{\n\t\t\"prefix\": 126,\n\t\t\"network\": \"joystream\",\n\t\t\"displayName\": \"Joystream\",\n\t\t\"symbols\": [\n\t\t\t\"JOY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.joystream.org\"\n\t},\n\t{\n\t\t\"prefix\": 128,\n\t\t\"network\": \"clover\",\n\t\t\"displayName\": \"Clover Finance\",\n\t\t\"symbols\": [\n\t\t\t\"CLV\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://clover.finance\"\n\t},\n\t{\n\t\t\"prefix\": 129,\n\t\t\"network\": \"dorafactory-polkadot\",\n\t\t\"displayName\": \"Dorafactory Polkadot Network\",\n\t\t\"symbols\": [\n\t\t\t\"DORA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dorafactory.org\"\n\t},\n\t{\n\t\t\"prefix\": 131,\n\t\t\"network\": \"litmus\",\n\t\t\"displayName\": \"Litmus Network\",\n\t\t\"symbols\": [\n\t\t\t\"LIT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://litentry.com/\"\n\t},\n\t{\n\t\t\"prefix\": 136,\n\t\t\"network\": \"altair\",\n\t\t\"displayName\": \"Altair\",\n\t\t\"symbols\": [\n\t\t\t\"AIR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://centrifuge.io/\"\n\t},\n\t{\n\t\t\"prefix\": 137,\n\t\t\"network\": \"vara\",\n\t\t\"displayName\": \"Vara Network\",\n\t\t\"symbols\": [\n\t\t\t\"VARA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://vara.network/\"\n\t},\n\t{\n\t\t\"prefix\": 172,\n\t\t\"network\": \"parallel\",\n\t\t\"displayName\": \"Parallel\",\n\t\t\"symbols\": [\n\t\t\t\"PARA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://parallel.fi/\"\n\t},\n\t{\n\t\t\"prefix\": 252,\n\t\t\"network\": \"social-network\",\n\t\t\"displayName\": \"Social Network\",\n\t\t\"symbols\": [\n\t\t\t\"NET\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://social.network\"\n\t},\n\t{\n\t\t\"prefix\": 255,\n\t\t\"network\": \"quartz_mainnet\",\n\t\t\"displayName\": \"QUARTZ by UNIQUE\",\n\t\t\"symbols\": [\n\t\t\t\"QTZ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://unique.network\"\n\t},\n\t{\n\t\t\"prefix\": 268,\n\t\t\"network\": \"pioneer_network\",\n\t\t\"displayName\": \"Pioneer Network by Bit.Country\",\n\t\t\"symbols\": [\n\t\t\t\"NEER\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bit.country\"\n\t},\n\t{\n\t\t\"prefix\": 420,\n\t\t\"network\": \"sora_kusama_para\",\n\t\t\"displayName\": \"SORA Kusama Parachain\",\n\t\t\"symbols\": [\n\t\t\t\"XOR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://sora.org\"\n\t},\n\t{\n\t\t\"prefix\": 440,\n\t\t\"network\": \"allfeat_network\",\n\t\t\"displayName\": \"Allfeat Network\",\n\t\t\"symbols\": [\n\t\t\t\"AFT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://allfeat.network\"\n\t},\n\t{\n\t\t\"prefix\": 666,\n\t\t\"network\": \"metaquity_network\",\n\t\t\"displayName\": \"Metaquity Network\",\n\t\t\"symbols\": [\n\t\t\t\"MQTY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://metaquity.xyz/\"\n\t},\n\t{\n\t\t\"prefix\": 777,\n\t\t\"network\": \"curio\",\n\t\t\"displayName\": \"Curio\",\n\t\t\"symbols\": [\n\t\t\t\"CGT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://parachain.capitaldex.exchange/\"\n\t},\n\t{\n\t\t\"prefix\": 789,\n\t\t\"network\": \"geek\",\n\t\t\"displayName\": \"GEEK Network\",\n\t\t\"symbols\": [\n\t\t\t\"GEEK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://geek.gl\"\n\t},\n\t{\n\t\t\"prefix\": 995,\n\t\t\"network\": \"ternoa\",\n\t\t\"displayName\": \"Ternoa\",\n\t\t\"symbols\": [\n\t\t\t\"CAPS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.ternoa.network\"\n\t},\n\t{\n\t\t\"prefix\": 1110,\n\t\t\"network\": \"efinity\",\n\t\t\"displayName\": \"Efinity\",\n\t\t\"symbols\": [\n\t\t\t\"EFI\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://efinity.io/\"\n\t},\n\t{\n\t\t\"prefix\": 1221,\n\t\t\"network\": \"peaq\",\n\t\t\"displayName\": \"Peaq Network\",\n\t\t\"symbols\": [\n\t\t\t\"PEAQ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"Sr25519\",\n\t\t\"website\": \"https://www.peaq.network/\"\n\t},\n\t{\n\t\t\"prefix\": 1222,\n\t\t\"network\": \"krest\",\n\t\t\"displayName\": \"Krest Network\",\n\t\t\"symbols\": [\n\t\t\t\"KREST\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"Sr25519\",\n\t\t\"website\": \"https://www.peaq.network/\"\n\t},\n\t{\n\t\t\"prefix\": 1284,\n\t\t\"network\": \"moonbeam\",\n\t\t\"displayName\": \"Moonbeam\",\n\t\t\"symbols\": [\n\t\t\t\"GLMR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": \"https://moonbeam.network\"\n\t},\n\t{\n\t\t\"prefix\": 1285,\n\t\t\"network\": \"moonriver\",\n\t\t\"displayName\": \"Moonriver\",\n\t\t\"symbols\": [\n\t\t\t\"MOVR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": \"https://moonbeam.network\"\n\t},\n\t{\n\t\t\"prefix\": 1328,\n\t\t\"network\": \"ajuna\",\n\t\t\"displayName\": \"Ajuna Network\",\n\t\t\"symbols\": [\n\t\t\t\"AJUN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://ajuna.io\"\n\t},\n\t{\n\t\t\"prefix\": 1337,\n\t\t\"network\": \"bajun\",\n\t\t\"displayName\": \"Bajun Network\",\n\t\t\"symbols\": [\n\t\t\t\"BAJU\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://ajuna.io\"\n\t},\n\t{\n\t\t\"prefix\": 1516,\n\t\t\"network\": \"societal\",\n\t\t\"displayName\": \"Societal\",\n\t\t\"symbols\": [\n\t\t\t\"SCTL\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.sctl.xyz\"\n\t},\n\t{\n\t\t\"prefix\": 1985,\n\t\t\"network\": \"seals\",\n\t\t\"displayName\": \"Seals Network\",\n\t\t\"symbols\": [\n\t\t\t\"SEAL\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://seals.app\"\n\t},\n\t{\n\t\t\"prefix\": 2007,\n\t\t\"network\": \"kapex\",\n\t\t\"displayName\": \"Kapex\",\n\t\t\"symbols\": [\n\t\t\t\"KAPEX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://totemaccounting.com\"\n\t},\n\t{\n\t\t\"prefix\": 2009,\n\t\t\"network\": \"cloudwalk_mainnet\",\n\t\t\"displayName\": \"CloudWalk Network Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"CWN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://explorer.mainnet.cloudwalk.io\"\n\t},\n\t{\n\t\t\"prefix\": 2021,\n\t\t\"network\": \"logion\",\n\t\t\"displayName\": \"logion network\",\n\t\t\"symbols\": [\n\t\t\t\"LGNT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://logion.network\"\n\t},\n\t{\n\t\t\"prefix\": 2024,\n\t\t\"network\": \"vow-chain\",\n\t\t\"displayName\": \"Enigmatic Smile\",\n\t\t\"symbols\": [\n\t\t\t\"VOW\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.vow.foundation/\"\n\t},\n\t{\n\t\t\"prefix\": 2032,\n\t\t\"network\": \"interlay\",\n\t\t\"displayName\": \"Interlay\",\n\t\t\"symbols\": [\n\t\t\t\"INTR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://interlay.io/\"\n\t},\n\t{\n\t\t\"prefix\": 2092,\n\t\t\"network\": \"kintsugi\",\n\t\t\"displayName\": \"Kintsugi\",\n\t\t\"symbols\": [\n\t\t\t\"KINT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://interlay.io/\"\n\t},\n\t{\n\t\t\"prefix\": 2106,\n\t\t\"network\": \"bitgreen\",\n\t\t\"displayName\": \"Bitgreen\",\n\t\t\"symbols\": [\n\t\t\t\"BBB\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bitgreen.org/\"\n\t},\n\t{\n\t\t\"prefix\": 2112,\n\t\t\"network\": \"chainflip\",\n\t\t\"displayName\": \"Chainflip\",\n\t\t\"symbols\": [\n\t\t\t\"FLIP\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://chainflip.io/\"\n\t},\n\t{\n\t\t\"prefix\": 2199,\n\t\t\"network\": \"moonsama\",\n\t\t\"displayName\": \"Moonsama\",\n\t\t\"symbols\": [\n\t\t\t\"SAMA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": \"https://moonsama.com\"\n\t},\n\t{\n\t\t\"prefix\": 2206,\n\t\t\"network\": \"ICE\",\n\t\t\"displayName\": \"ICE Network\",\n\t\t\"symbols\": [\n\t\t\t\"ICY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://icenetwork.io\"\n\t},\n\t{\n\t\t\"prefix\": 2207,\n\t\t\"network\": \"SNOW\",\n\t\t\"displayName\": \"SNOW: ICE Canary Network\",\n\t\t\"symbols\": [\n\t\t\t\"ICZ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://icenetwork.io\"\n\t},\n\t{\n\t\t\"prefix\": 2254,\n\t\t\"network\": \"subspace_testnet\",\n\t\t\"displayName\": \"Subspace testnet\",\n\t\t\"symbols\": [\n\t\t\t\"tSSC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://subspace.network\"\n\t},\n\t{\n\t\t\"prefix\": 3333,\n\t\t\"network\": \"peerplays\",\n\t\t\"displayName\": \"Peerplays\",\n\t\t\"symbols\": [\n\t\t\t\"PPY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": \"https://www.peerplays.com/\"\n\t},\n\t{\n\t\t\"prefix\": 4450,\n\t\t\"network\": \"g1\",\n\t\t\"displayName\": \"Ğ1\",\n\t\t\"symbols\": [\n\t\t\t\"G1\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t2\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://duniter.org\"\n\t},\n\t{\n\t\t\"prefix\": 5234,\n\t\t\"network\": \"humanode\",\n\t\t\"displayName\": \"Humanode Network\",\n\t\t\"symbols\": [\n\t\t\t\"HMND\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://humanode.io\"\n\t},\n\t{\n\t\t\"prefix\": 5845,\n\t\t\"network\": \"tangle\",\n\t\t\"displayName\": \"Tangle Network\",\n\t\t\"symbols\": [\n\t\t\t\"TNT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.tangle.tools/\"\n\t},\n\t{\n\t\t\"prefix\": 6094,\n\t\t\"network\": \"autonomys\",\n\t\t\"displayName\": \"Autonomys\",\n\t\t\"symbols\": [\n\t\t\t\"AI3\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://autonomys.xyz\"\n\t},\n\t{\n\t\t\"prefix\": 7007,\n\t\t\"network\": \"tidefi\",\n\t\t\"displayName\": \"Tidefi\",\n\t\t\"symbols\": [\n\t\t\t\"TDFY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://tidefi.com\"\n\t},\n\t{\n\t\t\"prefix\": 7013,\n\t\t\"network\": \"gm\",\n\t\t\"displayName\": \"GM\",\n\t\t\"symbols\": [\n\t\t\t\"FREN\",\n\t\t\t\"GM\",\n\t\t\t\"GN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12,\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://gmordie.com\"\n\t},\n\t{\n\t\t\"prefix\": 7306,\n\t\t\"network\": \"krigan\",\n\t\t\"displayName\": \"Krigan Network\",\n\t\t\"symbols\": [\n\t\t\t\"KRGN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://krigan.network\"\n\t},\n\t{\n\t\t\"prefix\": 7391,\n\t\t\"network\": \"unique_mainnet\",\n\t\t\"displayName\": \"Unique Network\",\n\t\t\"symbols\": [\n\t\t\t\"UNQ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://unique.network\"\n\t},\n\t{\n\t\t\"prefix\": 8866,\n\t\t\"network\": \"golden_gate\",\n\t\t\"displayName\": \"Golden Gate\",\n\t\t\"symbols\": [\n\t\t\t\"GGX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://ggxchain.io/\"\n\t},\n\t{\n\t\t\"prefix\": 8883,\n\t\t\"network\": \"sapphire_mainnet\",\n\t\t\"displayName\": \"Sapphire by Unique\",\n\t\t\"symbols\": [\n\t\t\t\"QTZ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://unique.network\"\n\t},\n\t{\n\t\t\"prefix\": 8886,\n\t\t\"network\": \"golden_gate_sydney\",\n\t\t\"displayName\": \"Golden Gate Sydney\",\n\t\t\"symbols\": [\n\t\t\t\"GGXT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://ggxchain.io/\"\n\t},\n\t{\n\t\t\"prefix\": 9072,\n\t\t\"network\": \"hashed\",\n\t\t\"displayName\": \"Hashed Network\",\n\t\t\"symbols\": [\n\t\t\t\"HASH\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://hashed.network\"\n\t},\n\t{\n\t\t\"prefix\": 9807,\n\t\t\"network\": \"dentnet\",\n\t\t\"displayName\": \"DENTNet\",\n\t\t\"symbols\": [\n\t\t\t\"DENTX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.dentnet.io\"\n\t},\n\t{\n\t\t\"prefix\": 9935,\n\t\t\"network\": \"t3rn\",\n\t\t\"displayName\": \"t3rn\",\n\t\t\"symbols\": [\n\t\t\t\"TRN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://t3rn.io/\"\n\t},\n\t{\n\t\t\"prefix\": 10041,\n\t\t\"network\": \"basilisk\",\n\t\t\"displayName\": \"Basilisk\",\n\t\t\"symbols\": [\n\t\t\t\"BSX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bsx.fi\"\n\t},\n\t{\n\t\t\"prefix\": 11330,\n\t\t\"network\": \"cess-testnet\",\n\t\t\"displayName\": \"CESS Testnet\",\n\t\t\"symbols\": [\n\t\t\t\"TCESS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cess.cloud\"\n\t},\n\t{\n\t\t\"prefix\": 11331,\n\t\t\"network\": \"cess\",\n\t\t\"displayName\": \"CESS\",\n\t\t\"symbols\": [\n\t\t\t\"CESS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cess.cloud\"\n\t},\n\t{\n\t\t\"prefix\": 11486,\n\t\t\"network\": \"luhn\",\n\t\t\"displayName\": \"Luhn Network\",\n\t\t\"symbols\": [\n\t\t\t\"LUHN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://luhn.network\"\n\t},\n\t{\n\t\t\"prefix\": 11820,\n\t\t\"network\": \"contextfree\",\n\t\t\"displayName\": \"Automata ContextFree\",\n\t\t\"symbols\": [\n\t\t\t\"CTX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://ata.network\"\n\t},\n\t{\n\t\t\"prefix\": 12155,\n\t\t\"network\": \"impact\",\n\t\t\"displayName\": \"Impact Protocol Network\",\n\t\t\"symbols\": [\n\t\t\t\"BSTY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://impactprotocol.network/\"\n\t},\n\t{\n\t\t\"prefix\": 12191,\n\t\t\"network\": \"nftmart\",\n\t\t\"displayName\": \"NFTMart\",\n\t\t\"symbols\": [\n\t\t\t\"NMT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://nftmart.io\"\n\t},\n\t{\n\t\t\"prefix\": 12850,\n\t\t\"network\": \"analog-timechain\",\n\t\t\"displayName\": \"Analog Timechain\",\n\t\t\"symbols\": [\n\t\t\t\"ANLOG\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://analog.one\"\n\t},\n\t{\n\t\t\"prefix\": 13116,\n\t\t\"network\": \"bittensor\",\n\t\t\"displayName\": \"Bittensor\",\n\t\t\"symbols\": [\n\t\t\t\"TAO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bittensor.com\"\n\t},\n\t{\n\t\t\"prefix\": 14697,\n\t\t\"network\": \"goro\",\n\t\t\"displayName\": \"GORO Network\",\n\t\t\"symbols\": [\n\t\t\t\"GORO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://goro.network\"\n\t},\n\t{\n\t\t\"prefix\": 14998,\n\t\t\"network\": \"mosaic-chain\",\n\t\t\"displayName\": \"Mosaic Chain\",\n\t\t\"symbols\": [\n\t\t\t\"MOS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://mosaicchain.io\"\n\t},\n\t{\n\t\t\"prefix\": 29972,\n\t\t\"network\": \"mythos\",\n\t\t\"displayName\": \"Mythos\",\n\t\t\"symbols\": [\n\t\t\t\"MYTH\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": \"https://mythos.foundation\"\n\t},\n\t{\n\t\t\"prefix\": 8888,\n\t\t\"network\": \"xcavate\",\n\t\t\"displayName\": \"Xcavate Protocol\",\n\t\t\"symbols\": [\n\t\t\t\"XCAV\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://xcavate.io/\"\n\t}\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@substrate/ss58-registry/esm/index.js\n"));

/***/ })

}]);